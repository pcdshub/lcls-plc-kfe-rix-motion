
Data Types
----------


   
DUT_SATT_Filter
^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):MATERIAL_RBV
      - waveform
      - Filter material name
      - | io: input


    * - $(PREFIX):THICKNESS_RBV
      - ai
      - Filter material thickness
      - | field: EGU um
        | io: input


  
FB_SXR_SATT_PositionState
^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):01:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):01:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):01:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):02:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):02:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):03:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):03:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):04:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):04:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):05:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):05:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):06:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):06:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):07:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):07:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):08:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):08:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):09:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):09:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):BUSY_RBV
      - bi
      - $(SYMBOL).bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):DONE_RBV
      - bi
      - $(SYMBOL).bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):ERR_RBV
      - bi
      - $(SYMBOL).bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):ERRID_RBV
      - longin
      - $(SYMBOL).nErrorId
      - | io: input


    * - $(PREFIX):ERRMSG_RBV
      - waveform
      - $(SYMBOL).sErrorMessage
      - | io: input


    * - $(PREFIX):GET_RBV
      - mbbi
      - $(SYMBOL).enumGet
      - | io: input


    * - $(PREFIX):RESET
      - bo
      - $(SYMBOL).bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):RESET_RBV
      - bi
      - $(SYMBOL).bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):SET
      - mbbo
      - $(SYMBOL).enumSet
      - | io: output


    * - $(PREFIX):SET_RBV
      - mbbi
      - $(SYMBOL).enumSet
      - | io: output


 
FB_SXR_SATT_Stage
^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):FILTERS:01:MATERIAL_RBV
      - waveform
      - Filter material name
      - | io: input


    * - $(PREFIX):FILTERS:01:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | field: EGU um
        | io: input


    * - $(PREFIX):FILTERS:02:MATERIAL_RBV
      - waveform
      - Filter material name
      - | io: input


    * - $(PREFIX):FILTERS:02:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | field: EGU um
        | io: input


    * - $(PREFIX):FILTERS:03:MATERIAL_RBV
      - waveform
      - Filter material name
      - | io: input


    * - $(PREFIX):FILTERS:03:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | field: EGU um
        | io: input


    * - $(PREFIX):FILTERS:04:MATERIAL_RBV
      - waveform
      - Filter material name
      - | io: input


    * - $(PREFIX):FILTERS:04:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | field: EGU um
        | io: input


    * - $(PREFIX):FILTERS:05:MATERIAL_RBV
      - waveform
      - Filter material name
      - | io: input


    * - $(PREFIX):FILTERS:05:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | field: EGU um
        | io: input


    * - $(PREFIX):FILTERS:06:MATERIAL_RBV
      - waveform
      - Filter material name
      - | io: input


    * - $(PREFIX):FILTERS:06:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | field: EGU um
        | io: input


    * - $(PREFIX):FILTERS:07:MATERIAL_RBV
      - waveform
      - Filter material name
      - | io: input


    * - $(PREFIX):FILTERS:07:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | field: EGU um
        | io: input


    * - $(PREFIX):FILTERS:08:MATERIAL_RBV
      - waveform
      - Filter material name
      - | io: input


    * - $(PREFIX):FILTERS:08:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | field: EGU um
        | io: input


    * - $(PREFIX):MATERIAL_RBV
      - waveform
      - $(SYMBOL).sActiveFilterMaterial
      - | io: input


    * - $(PREFIX):RTD:1:CONN_RBV
      - bi
      - $(SYMBOL).fbRTD_1.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - $(PREFIX):RTD:1:ERR_RBV
      - bi
      - $(SYMBOL).fbRTD_1.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):RTD:1:TEMP_RBV
      - ai
      - $(SYMBOL).fbRTD_1.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - $(PREFIX):RTD:2:CONN_RBV
      - bi
      - $(SYMBOL).fbRTD_2.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - $(PREFIX):RTD:2:ERR_RBV
      - bi
      - $(SYMBOL).fbRTD_2.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):RTD:2:TEMP_RBV
      - ai
      - $(SYMBOL).fbRTD_2.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - $(PREFIX):STATE:01:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):STATE:01:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):STATE:01:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):STATE:01:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):STATE:01:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):STATE:01:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):STATE:01:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):STATE:01:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):STATE:02:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):STATE:02:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):STATE:02:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):STATE:02:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):STATE:02:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):STATE:02:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):STATE:02:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):STATE:02:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):STATE:03:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):STATE:03:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):STATE:03:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):STATE:03:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):STATE:03:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):STATE:03:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):STATE:03:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):STATE:03:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):STATE:04:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):STATE:04:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):STATE:04:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):STATE:04:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):STATE:04:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):STATE:04:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):STATE:04:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):STATE:04:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):STATE:05:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):STATE:05:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):STATE:05:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):STATE:05:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):STATE:05:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):STATE:05:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):STATE:05:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):STATE:05:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):STATE:06:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):STATE:06:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):STATE:06:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):STATE:06:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):STATE:06:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):STATE:06:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):STATE:06:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):STATE:06:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):STATE:07:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):STATE:07:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):STATE:07:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):STATE:07:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):STATE:07:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):STATE:07:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):STATE:07:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):STATE:07:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):STATE:08:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):STATE:08:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):STATE:08:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):STATE:08:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):STATE:08:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):STATE:08:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):STATE:08:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):STATE:08:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):STATE:09:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):STATE:09:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):STATE:09:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):STATE:09:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):STATE:09:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):STATE:09:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):STATE:09:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):STATE:09:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):STATE:BUSY_RBV
      - bi
      - $(SYMBOL).fbState.bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):STATE:DONE_RBV
      - bi
      - $(SYMBOL).fbState.bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):STATE:ERR_RBV
      - bi
      - $(SYMBOL).fbState.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):STATE:ERRID_RBV
      - longin
      - $(SYMBOL).fbState.nErrorId
      - | io: input


    * - $(PREFIX):STATE:ERRMSG_RBV
      - waveform
      - $(SYMBOL).fbState.sErrorMessage
      - | io: input


    * - $(PREFIX):STATE:GET_RBV
      - mbbi
      - $(SYMBOL).fbState.enumGet
      - | io: input


    * - $(PREFIX):STATE:RESET
      - bo
      - $(SYMBOL).fbState.bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):STATE:RESET_RBV
      - bi
      - $(SYMBOL).fbState.bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):STATE:SET
      - mbbo
      - $(SYMBOL).fbState.enumSet
      - | io: output


    * - $(PREFIX):STATE:SET_RBV
      - mbbi
      - $(SYMBOL).fbState.enumSet
      - | io: output


    * - $(PREFIX):THICKNESS_RBV
      - ai
      - $(SYMBOL).fActiveFilterThickness_um
      - | field: EGU um
        | io: input


    * - $(PREFIX):TRANSMISSION_RBV
      - ai
      - Filter transmission
      - | io: input


 
FB_TM2K2
^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):MMS:STATE:01:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:01:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:01:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:01:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:01:DELTA
      - ao
      - Max deviation from position at this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:01:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:01:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:01:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:DELTA
      - ao
      - Max deviation from position at this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:02:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:02:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:DELTA
      - ao
      - Max deviation from position at this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:03:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:03:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:DELTA
      - ao
      - Max deviation from position at this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:04:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:04:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:05:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:05:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:05:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:05:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:05:DELTA
      - ao
      - Max deviation from position at this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:05:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:05:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:05:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:06:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:06:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:06:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:06:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:06:DELTA
      - ao
      - Max deviation from position at this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:06:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:06:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:06:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:07:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:07:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:07:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:07:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:07:DELTA
      - ao
      - Max deviation from position at this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:07:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:07:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:07:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:BUSY_RBV
      - bi
      - $(SYMBOL).fbStates.bBusy
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):MMS:STATE:DONE_RBV
      - bi
      - $(SYMBOL).fbStates.bDone
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):MMS:STATE:ERR_RBV
      - bi
      - $(SYMBOL).fbStates.bError
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):MMS:STATE:ERRID_RBV
      - longin
      - $(SYMBOL).fbStates.nErrorId
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | io: input


    * - $(PREFIX):MMS:STATE:ERRMSG_RBV
      - waveform
      - $(SYMBOL).fbStates.sErrorMessage
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | io: input


    * - $(PREFIX):MMS:STATE:GET_RBV
      - mbbi
      - $(SYMBOL).fbStates.enumGet
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | io: input


    * - $(PREFIX):MMS:STATE:PMPS:ARB:ENABLE
      - bo
      - $(SYMBOL).fbStates.bArbiterEnabled
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | io: output


    * - $(PREFIX):MMS:STATE:PMPS:ARB:ENABLE_RBV
      - bi
      - $(SYMBOL).fbStates.bArbiterEnabled
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | io: output


    * - $(PREFIX):MMS:STATE:PMPS:MAINT
      - bo
      - $(SYMBOL).fbStates.fbStatePMPS.bMaintMode
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | io: output


    * - $(PREFIX):MMS:STATE:PMPS:MAINT_RBV
      - bi
      - $(SYMBOL).fbStates.fbStatePMPS.bMaintMode
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | io: output


    * - $(PREFIX):MMS:STATE:RESET
      - bo
      - $(SYMBOL).fbStates.bReset
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):MMS:STATE:RESET_RBV
      - bi
      - $(SYMBOL).fbStates.bReset
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):MMS:STATE:SET
      - mbbo
      - $(SYMBOL).fbStates.enumSet
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | io: output


    * - $(PREFIX):MMS:STATE:SET_RBV
      - mbbi
      - $(SYMBOL).fbStates.enumSet
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | io: output


    * - $(PREFIX):STC:01:CONN_RBV
      - bi
      - $(SYMBOL).fbThermoCouple1.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - $(PREFIX):STC:01:ERR_RBV
      - bi
      - $(SYMBOL).fbThermoCouple1.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):STC:01:TEMP_RBV
      - ai
      - $(SYMBOL).fbThermoCouple1.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


 
FB_TM2K2_States
^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):01:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):01:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):01:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):02:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):02:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):03:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):03:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):04:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):04:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):05:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):05:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):06:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):06:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):07:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):07:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):08:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):08:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):09:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):09:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):BUSY_RBV
      - bi
      - $(SYMBOL).bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):DONE_RBV
      - bi
      - $(SYMBOL).bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):ERR_RBV
      - bi
      - $(SYMBOL).bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):ERRID_RBV
      - longin
      - $(SYMBOL).nErrorId
      - | io: input


    * - $(PREFIX):ERRMSG_RBV
      - waveform
      - $(SYMBOL).sErrorMessage
      - | io: input


    * - $(PREFIX):GET_RBV
      - mbbi
      - $(SYMBOL).enumGet
      - | io: input


    * - $(PREFIX):PMPS:ARB:ENABLE
      - bo
      - $(SYMBOL).bArbiterEnabled
      - | io: output


    * - $(PREFIX):PMPS:ARB:ENABLE_RBV
      - bi
      - $(SYMBOL).bArbiterEnabled
      - | io: output


    * - $(PREFIX):PMPS:MAINT
      - bo
      - $(SYMBOL).fbStatePMPS.bMaintMode
      - | io: output


    * - $(PREFIX):PMPS:MAINT_RBV
      - bi
      - $(SYMBOL).fbStatePMPS.bMaintMode
      - | io: output


    * - $(PREFIX):RESET
      - bo
      - $(SYMBOL).bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):RESET_RBV
      - bi
      - $(SYMBOL).bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):SET
      - mbbo
      - $(SYMBOL).enumSet
      - | io: output


    * - $(PREFIX):SET_RBV
      - mbbi
      - $(SYMBOL).enumSet
      - | io: output


  
lcls2_cc_lib.FB_ATM
^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):MMS:STATE:01:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:01:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:01:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:01:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:01:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:01:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:01:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:01:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:02:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:02:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:03:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:03:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:04:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:04:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:05:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:05:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:05:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:05:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:05:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:05:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:05:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:05:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:06:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:06:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:06:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:06:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:06:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:06:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:06:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:06:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:07:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:07:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:07:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:07:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:07:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:07:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:07:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:07:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:08:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:08:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:08:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:08:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:08:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:08:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:08:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:08:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:09:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:09:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:09:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:09:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:09:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:09:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:09:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:09:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:BUSY_RBV
      - bi
      - $(SYMBOL).fbStates.bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):MMS:STATE:DONE_RBV
      - bi
      - $(SYMBOL).fbStates.bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):MMS:STATE:ERR_RBV
      - bi
      - $(SYMBOL).fbStates.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):MMS:STATE:ERRID_RBV
      - longin
      - $(SYMBOL).fbStates.nErrorId
      - | io: input


    * - $(PREFIX):MMS:STATE:ERRMSG_RBV
      - waveform
      - $(SYMBOL).fbStates.sErrorMessage
      - | io: input


    * - $(PREFIX):MMS:STATE:GET_RBV
      - mbbi
      - $(SYMBOL).fbStates.enumGet
      - | io: input


    * - $(PREFIX):MMS:STATE:PMPS:ARB:ENABLE
      - bo
      - $(SYMBOL).fbStates.bArbiterEnabled
      - | io: output


    * - $(PREFIX):MMS:STATE:PMPS:ARB:ENABLE_RBV
      - bi
      - $(SYMBOL).fbStates.bArbiterEnabled
      - | io: output


    * - $(PREFIX):MMS:STATE:PMPS:MAINT
      - bo
      - $(SYMBOL).fbStates.fbStatePMPS.bMaintMode
      - | io: output


    * - $(PREFIX):MMS:STATE:PMPS:MAINT_RBV
      - bi
      - $(SYMBOL).fbStates.fbStatePMPS.bMaintMode
      - | io: output


    * - $(PREFIX):MMS:STATE:RESET
      - bo
      - $(SYMBOL).fbStates.bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):MMS:STATE:RESET_RBV
      - bi
      - $(SYMBOL).fbStates.bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):MMS:STATE:SET
      - mbbo
      - $(SYMBOL).fbStates.enumSet
      - | io: output


    * - $(PREFIX):MMS:STATE:SET_RBV
      - mbbi
      - $(SYMBOL).fbStates.enumSet
      - | io: output


    * - $(PREFIX):STC:01:CONN_RBV
      - bi
      - $(SYMBOL).fbThermoCouple1.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - $(PREFIX):STC:01:ERR_RBV
      - bi
      - $(SYMBOL).fbThermoCouple1.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):STC:01:TEMP_RBV
      - ai
      - $(SYMBOL).fbThermoCouple1.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


 
lcls2_cc_lib.FB_ATM_States
^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):01:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):01:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):01:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):02:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):02:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):03:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):03:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):04:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):04:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):05:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):05:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):06:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):06:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):07:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):07:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):08:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):08:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):09:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):09:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):BUSY_RBV
      - bi
      - $(SYMBOL).bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):DONE_RBV
      - bi
      - $(SYMBOL).bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):ERR_RBV
      - bi
      - $(SYMBOL).bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):ERRID_RBV
      - longin
      - $(SYMBOL).nErrorId
      - | io: input


    * - $(PREFIX):ERRMSG_RBV
      - waveform
      - $(SYMBOL).sErrorMessage
      - | io: input


    * - $(PREFIX):GET_RBV
      - mbbi
      - $(SYMBOL).enumGet
      - | io: input


    * - $(PREFIX):PMPS:ARB:ENABLE
      - bo
      - $(SYMBOL).bArbiterEnabled
      - | io: output


    * - $(PREFIX):PMPS:ARB:ENABLE_RBV
      - bi
      - $(SYMBOL).bArbiterEnabled
      - | io: output


    * - $(PREFIX):PMPS:MAINT
      - bo
      - $(SYMBOL).fbStatePMPS.bMaintMode
      - | io: output


    * - $(PREFIX):PMPS:MAINT_RBV
      - bi
      - $(SYMBOL).fbStatePMPS.bMaintMode
      - | io: output


    * - $(PREFIX):RESET
      - bo
      - $(SYMBOL).bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):RESET_RBV
      - bi
      - $(SYMBOL).bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):SET
      - mbbo
      - $(SYMBOL).enumSet
      - | io: output


    * - $(PREFIX):SET_RBV
      - mbbi
      - $(SYMBOL).enumSet
      - | io: output


 
lcls2_cc_lib.FB_L2SI_Flowmeter
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):FLOW_RBV
      - ai
      - $(SYMBOL).fFlowRate
      - | io: input


    * - $(PREFIX):MA_RBV
      - longin
      - $(SYMBOL).fRaw
      - | io: input


 
lcls2_cc_lib.FB_LIC
^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):MMS:STATE:01:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:01:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:01:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:01:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:01:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:01:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:01:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:01:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:02:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:02:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:03:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:03:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:04:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:04:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:05:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:05:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:05:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:05:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:05:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:05:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:05:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:05:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:06:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:06:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:06:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:06:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:06:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:06:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:06:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:06:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:07:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:07:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:07:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:07:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:07:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:07:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:07:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:07:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:08:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:08:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:08:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:08:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:08:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:08:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:08:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:08:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:09:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:09:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:09:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:09:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:09:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:09:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:09:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:09:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:BUSY_RBV
      - bi
      - $(SYMBOL).fbStates.bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):MMS:STATE:DONE_RBV
      - bi
      - $(SYMBOL).fbStates.bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):MMS:STATE:ERR_RBV
      - bi
      - $(SYMBOL).fbStates.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):MMS:STATE:ERRID_RBV
      - longin
      - $(SYMBOL).fbStates.nErrorId
      - | io: input


    * - $(PREFIX):MMS:STATE:ERRMSG_RBV
      - waveform
      - $(SYMBOL).fbStates.sErrorMessage
      - | io: input


    * - $(PREFIX):MMS:STATE:GET_RBV
      - mbbi
      - $(SYMBOL).fbStates.enumGet
      - | io: input


    * - $(PREFIX):MMS:STATE:PMPS:ARB:ENABLE
      - bo
      - $(SYMBOL).fbStates.bArbiterEnabled
      - | io: output


    * - $(PREFIX):MMS:STATE:PMPS:ARB:ENABLE_RBV
      - bi
      - $(SYMBOL).fbStates.bArbiterEnabled
      - | io: output


    * - $(PREFIX):MMS:STATE:PMPS:MAINT
      - bo
      - $(SYMBOL).fbStates.fbStatePMPS.bMaintMode
      - | io: output


    * - $(PREFIX):MMS:STATE:PMPS:MAINT_RBV
      - bi
      - $(SYMBOL).fbStates.fbStatePMPS.bMaintMode
      - | io: output


    * - $(PREFIX):MMS:STATE:RESET
      - bo
      - $(SYMBOL).fbStates.bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):MMS:STATE:RESET_RBV
      - bi
      - $(SYMBOL).fbStates.bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):MMS:STATE:SET
      - mbbo
      - $(SYMBOL).fbStates.enumSet
      - | io: output


    * - $(PREFIX):MMS:STATE:SET_RBV
      - mbbi
      - $(SYMBOL).fbStates.enumSet
      - | io: output


 
lcls2_cc_lib.FB_LIC_States
^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):01:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):01:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):01:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):02:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):02:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):03:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):03:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):04:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):04:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):05:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):05:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):06:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):06:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):07:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):07:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):08:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):08:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):09:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):09:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):BUSY_RBV
      - bi
      - $(SYMBOL).bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):DONE_RBV
      - bi
      - $(SYMBOL).bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):ERR_RBV
      - bi
      - $(SYMBOL).bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):ERRID_RBV
      - longin
      - $(SYMBOL).nErrorId
      - | io: input


    * - $(PREFIX):ERRMSG_RBV
      - waveform
      - $(SYMBOL).sErrorMessage
      - | io: input


    * - $(PREFIX):GET_RBV
      - mbbi
      - $(SYMBOL).enumGet
      - | io: input


    * - $(PREFIX):PMPS:ARB:ENABLE
      - bo
      - $(SYMBOL).bArbiterEnabled
      - | io: output


    * - $(PREFIX):PMPS:ARB:ENABLE_RBV
      - bi
      - $(SYMBOL).bArbiterEnabled
      - | io: output


    * - $(PREFIX):PMPS:MAINT
      - bo
      - $(SYMBOL).fbStatePMPS.bMaintMode
      - | io: output


    * - $(PREFIX):PMPS:MAINT_RBV
      - bi
      - $(SYMBOL).fbStatePMPS.bMaintMode
      - | io: output


    * - $(PREFIX):RESET
      - bo
      - $(SYMBOL).bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):RESET_RBV
      - bi
      - $(SYMBOL).bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):SET
      - mbbo
      - $(SYMBOL).enumSet
      - | io: output


    * - $(PREFIX):SET_RBV
      - mbbi
      - $(SYMBOL).enumSet
      - | io: output


 
lcls2_cc_lib.FB_PPM
^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):CAM:CIL:PCT
      - ao
      - $(SYMBOL).fbGige.fIlluminatorPercent
      - | EGU: %
        | io: output


    * - $(PREFIX):CAM:CIL:PCT_RBV
      - ai
      - $(SYMBOL).fbGige.fIlluminatorPercent
      - | EGU: %
        | io: output


    * - $(PREFIX):CAM:PWR
      - bo
      - $(SYMBOL).fbGige.bGigePower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - $(PREFIX):CAM:PWR_RBV
      - bi
      - $(SYMBOL).fbGige.bGigePower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - $(PREFIX):MMS:STATE:01:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:01:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:01:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:01:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:01:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:01:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:01:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:01:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:02:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:02:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:03:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:03:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:04:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:04:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:05:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:05:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:05:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:05:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:05:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:05:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:05:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:05:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:06:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:06:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:06:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:06:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:06:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:06:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:06:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:06:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:07:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:07:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:07:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:07:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:07:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:07:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:07:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:07:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:08:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:08:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:08:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:08:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:08:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:08:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:08:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:08:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:09:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:09:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:09:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:09:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:09:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:09:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:09:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:09:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:BUSY_RBV
      - bi
      - $(SYMBOL).fbStates.bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):MMS:STATE:DONE_RBV
      - bi
      - $(SYMBOL).fbStates.bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):MMS:STATE:ERR_RBV
      - bi
      - $(SYMBOL).fbStates.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):MMS:STATE:ERRID_RBV
      - longin
      - $(SYMBOL).fbStates.nErrorId
      - | io: input


    * - $(PREFIX):MMS:STATE:ERRMSG_RBV
      - waveform
      - $(SYMBOL).fbStates.sErrorMessage
      - | io: input


    * - $(PREFIX):MMS:STATE:GET_RBV
      - mbbi
      - $(SYMBOL).fbStates.enumGet
      - | io: input


    * - $(PREFIX):MMS:STATE:PMPS:ARB:ENABLE
      - bo
      - $(SYMBOL).fbStates.bArbiterEnabled
      - | io: output


    * - $(PREFIX):MMS:STATE:PMPS:ARB:ENABLE_RBV
      - bi
      - $(SYMBOL).fbStates.bArbiterEnabled
      - | io: output


    * - $(PREFIX):MMS:STATE:PMPS:MAINT
      - bo
      - $(SYMBOL).fbStates.fbStatePMPS.bMaintMode
      - | io: output


    * - $(PREFIX):MMS:STATE:PMPS:MAINT_RBV
      - bi
      - $(SYMBOL).fbStates.fbStatePMPS.bMaintMode
      - | io: output


    * - $(PREFIX):MMS:STATE:RESET
      - bo
      - $(SYMBOL).fbStates.bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):MMS:STATE:RESET_RBV
      - bi
      - $(SYMBOL).fbStates.bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):MMS:STATE:SET
      - mbbo
      - $(SYMBOL).fbStates.enumSet
      - | io: output


    * - $(PREFIX):MMS:STATE:SET_RBV
      - mbbi
      - $(SYMBOL).fbStates.enumSet
      - | io: output


    * - $(PREFIX):SFM:FLOW_RBV
      - ai
      - $(SYMBOL).fbFlowMeter.fFlowRate
      - | io: input


    * - $(PREFIX):SFM:MA_RBV
      - longin
      - $(SYMBOL).fbFlowMeter.fRaw
      - | io: input


    * - $(PREFIX):SPM:CALIB:MJ_RATIO
      - ao
      - $(SYMBOL).fbPowerMeter.fCalibMJRatio
      - | io: output


    * - $(PREFIX):SPM:CALIB:MJ_RATIO_RBV
      - ai
      - $(SYMBOL).fbPowerMeter.fCalibMJRatio
      - | io: output


    * - $(PREFIX):SPM:CALIB:OFFSET
      - ao
      - $(SYMBOL).fbPowerMeter.fCalibRelOffset
      - | io: output


    * - $(PREFIX):SPM:CALIB:OFFSET_RBV
      - ai
      - $(SYMBOL).fbPowerMeter.fCalibRelOffset
      - | io: output


    * - $(PREFIX):SPM:CALIB:RATIO
      - ao
      - $(SYMBOL).fbPowerMeter.fCalibRelRatio
      - | io: output


    * - $(PREFIX):SPM:CALIB:RATIO_RBV
      - ai
      - $(SYMBOL).fbPowerMeter.fCalibRelRatio
      - | io: output


    * - $(PREFIX):SPM:CALIB_BUFFER_RBV
      - waveform
      - $(SYMBOL).fbPowerMeter.fCalibBaseBuffer
      - | io: input


    * - $(PREFIX):SPM:CALIB_RBV
      - ai
      - $(SYMBOL).fbPowerMeter.fCalibBase
      - | io: input


    * - $(PREFIX):SPM:MJ_BUFFER_RBV
      - waveform
      - $(SYMBOL).fbPowerMeter.fCalibMJBuffer
      - | field: EGU mJ
        | io: input


    * - $(PREFIX):SPM:MJ_RBV
      - ai
      - $(SYMBOL).fbPowerMeter.fCalibMJ
      - | field: EGU mJ
        | io: input


    * - $(PREFIX):SPM:STC:CONN_RBV
      - bi
      - $(SYMBOL).fbPowerMeter.fbThermoCouple.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - $(PREFIX):SPM:STC:ERR_RBV
      - bi
      - $(SYMBOL).fbPowerMeter.fbThermoCouple.bError
      - | io: input


    * - $(PREFIX):SPM:STC:TEMP_RBV
      - ai
      - $(SYMBOL).fbPowerMeter.fbThermoCouple.fTemp
      - | io: input


    * - $(PREFIX):SPM:VOLT_BUFFER_RBV
      - waveform
      - $(SYMBOL).fbPowerMeter.fVoltageBuffer
      - | field: EGU mV
        | io: input


    * - $(PREFIX):SPM:VOLT_RBV
      - ai
      - $(SYMBOL).fbPowerMeter.fVoltage
      - | field: EGU mV
        | io: input


    * - $(PREFIX):YAG:STC:CONN_RBV
      - bi
      - $(SYMBOL).fbYagThermoCouple.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - $(PREFIX):YAG:STC:ERR_RBV
      - bi
      - $(SYMBOL).fbYagThermoCouple.bError
      - | io: input


    * - $(PREFIX):YAG:STC:TEMP_RBV
      - ai
      - $(SYMBOL).fbYagThermoCouple.fTemp
      - | io: input


 
lcls2_cc_lib.FB_PPM_Gige
^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):CIL:PCT
      - ao
      - $(SYMBOL).fIlluminatorPercent
      - | EGU: %
        | io: output


    * - $(PREFIX):CIL:PCT_RBV
      - ai
      - $(SYMBOL).fIlluminatorPercent
      - | EGU: %
        | io: output


    * - $(PREFIX):PWR
      - bo
      - $(SYMBOL).bGigePower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - $(PREFIX):PWR_RBV
      - bi
      - $(SYMBOL).bGigePower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


 
lcls2_cc_lib.FB_PPM_PowerMeter
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):CALIB:MJ_RATIO
      - ao
      - $(SYMBOL).fCalibMJRatio
      - | io: output


    * - $(PREFIX):CALIB:MJ_RATIO_RBV
      - ai
      - $(SYMBOL).fCalibMJRatio
      - | io: output


    * - $(PREFIX):CALIB:OFFSET
      - ao
      - $(SYMBOL).fCalibRelOffset
      - | io: output


    * - $(PREFIX):CALIB:OFFSET_RBV
      - ai
      - $(SYMBOL).fCalibRelOffset
      - | io: output


    * - $(PREFIX):CALIB:RATIO
      - ao
      - $(SYMBOL).fCalibRelRatio
      - | io: output


    * - $(PREFIX):CALIB:RATIO_RBV
      - ai
      - $(SYMBOL).fCalibRelRatio
      - | io: output


    * - $(PREFIX):CALIB_BUFFER_RBV
      - waveform
      - $(SYMBOL).fCalibBaseBuffer
      - | io: input


    * - $(PREFIX):CALIB_RBV
      - ai
      - $(SYMBOL).fCalibBase
      - | io: input


    * - $(PREFIX):MJ_BUFFER_RBV
      - waveform
      - $(SYMBOL).fCalibMJBuffer
      - | field: EGU mJ
        | io: input


    * - $(PREFIX):MJ_RBV
      - ai
      - $(SYMBOL).fCalibMJ
      - | field: EGU mJ
        | io: input


    * - $(PREFIX):STC:CONN_RBV
      - bi
      - $(SYMBOL).fbThermoCouple.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - $(PREFIX):STC:ERR_RBV
      - bi
      - $(SYMBOL).fbThermoCouple.bError
      - | io: input


    * - $(PREFIX):STC:TEMP_RBV
      - ai
      - $(SYMBOL).fbThermoCouple.fTemp
      - | io: input


    * - $(PREFIX):VOLT_BUFFER_RBV
      - waveform
      - $(SYMBOL).fVoltageBuffer
      - | field: EGU mV
        | io: input


    * - $(PREFIX):VOLT_RBV
      - ai
      - $(SYMBOL).fVoltage
      - | field: EGU mV
        | io: input


 
lcls2_cc_lib.FB_PPM_States
^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):01:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):01:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):01:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):02:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):02:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):03:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):03:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):04:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):04:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):05:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):05:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):06:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):06:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):07:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):07:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):08:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):08:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):09:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):09:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):BUSY_RBV
      - bi
      - $(SYMBOL).bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):DONE_RBV
      - bi
      - $(SYMBOL).bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):ERR_RBV
      - bi
      - $(SYMBOL).bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):ERRID_RBV
      - longin
      - $(SYMBOL).nErrorId
      - | io: input


    * - $(PREFIX):ERRMSG_RBV
      - waveform
      - $(SYMBOL).sErrorMessage
      - | io: input


    * - $(PREFIX):GET_RBV
      - mbbi
      - $(SYMBOL).enumGet
      - | io: input


    * - $(PREFIX):PMPS:ARB:ENABLE
      - bo
      - $(SYMBOL).bArbiterEnabled
      - | io: output


    * - $(PREFIX):PMPS:ARB:ENABLE_RBV
      - bi
      - $(SYMBOL).bArbiterEnabled
      - | io: output


    * - $(PREFIX):PMPS:MAINT
      - bo
      - $(SYMBOL).fbStatePMPS.bMaintMode
      - | io: output


    * - $(PREFIX):PMPS:MAINT_RBV
      - bi
      - $(SYMBOL).fbStatePMPS.bMaintMode
      - | io: output


    * - $(PREFIX):RESET
      - bo
      - $(SYMBOL).bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):RESET_RBV
      - bi
      - $(SYMBOL).bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):SET
      - mbbo
      - $(SYMBOL).enumSet
      - | io: output


    * - $(PREFIX):SET_RBV
      - mbbi
      - $(SYMBOL).enumSet
      - | io: output


 
lcls2_cc_lib.FB_REF
^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):LAS:PCT
      - ao
      - $(SYMBOL).fbLaser.fLaserPercent
      - | io: output


    * - $(PREFIX):LAS:PCT_RBV
      - ai
      - $(SYMBOL).fbLaser.fLaserPercent
      - | io: output


    * - $(PREFIX):MMS:STATE:01:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:01:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:01:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:01:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:01:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:01:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:01:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:01:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:02:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:02:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:03:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:03:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:04:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:04:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:05:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:05:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:05:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:05:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:05:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:05:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:05:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:05:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:06:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:06:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:06:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:06:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:06:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:06:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:06:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:06:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:07:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:07:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:07:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:07:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:07:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:07:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:07:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:07:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:08:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:08:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:08:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:08:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:08:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:08:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:08:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:08:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:09:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:09:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:09:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:09:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:09:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:09:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:09:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:09:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:BUSY_RBV
      - bi
      - $(SYMBOL).fbStates.bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):MMS:STATE:DONE_RBV
      - bi
      - $(SYMBOL).fbStates.bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):MMS:STATE:ERR_RBV
      - bi
      - $(SYMBOL).fbStates.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):MMS:STATE:ERRID_RBV
      - longin
      - $(SYMBOL).fbStates.nErrorId
      - | io: input


    * - $(PREFIX):MMS:STATE:ERRMSG_RBV
      - waveform
      - $(SYMBOL).fbStates.sErrorMessage
      - | io: input


    * - $(PREFIX):MMS:STATE:GET_RBV
      - mbbi
      - $(SYMBOL).fbStates.enumGet
      - | io: input


    * - $(PREFIX):MMS:STATE:PMPS:ARB:ENABLE
      - bo
      - $(SYMBOL).fbStates.bArbiterEnabled
      - | io: output


    * - $(PREFIX):MMS:STATE:PMPS:ARB:ENABLE_RBV
      - bi
      - $(SYMBOL).fbStates.bArbiterEnabled
      - | io: output


    * - $(PREFIX):MMS:STATE:PMPS:MAINT
      - bo
      - $(SYMBOL).fbStates.fbStatePMPS.bMaintMode
      - | io: output


    * - $(PREFIX):MMS:STATE:PMPS:MAINT_RBV
      - bi
      - $(SYMBOL).fbStates.fbStatePMPS.bMaintMode
      - | io: output


    * - $(PREFIX):MMS:STATE:RESET
      - bo
      - $(SYMBOL).fbStates.bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):MMS:STATE:RESET_RBV
      - bi
      - $(SYMBOL).fbStates.bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):MMS:STATE:SET
      - mbbo
      - $(SYMBOL).fbStates.enumSet
      - | io: output


    * - $(PREFIX):MMS:STATE:SET_RBV
      - mbbi
      - $(SYMBOL).fbStates.enumSet
      - | io: output


 
lcls2_cc_lib.FB_REF_Laser
^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):PCT
      - ao
      - $(SYMBOL).fLaserPercent
      - | io: output


    * - $(PREFIX):PCT_RBV
      - ai
      - $(SYMBOL).fLaserPercent
      - | io: output


 
lcls2_cc_lib.FB_WFS
^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):MMS:STATE:01:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:01:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:01:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:01:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:01:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:01:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:01:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:01:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:02:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:02:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:03:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:03:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:04:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:04:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:05:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:05:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:05:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:05:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:05:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:05:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:05:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:05:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:06:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:06:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:06:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:06:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:06:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:06:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:06:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:06:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:07:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:07:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:07:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:07:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:07:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:07:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:07:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:07:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:08:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:08:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:08:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:08:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:08:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:08:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:08:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:08:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:09:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:09:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:09:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:09:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:09:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:09:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:09:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:09:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:BUSY_RBV
      - bi
      - $(SYMBOL).fbStates.bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):MMS:STATE:DONE_RBV
      - bi
      - $(SYMBOL).fbStates.bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):MMS:STATE:ERR_RBV
      - bi
      - $(SYMBOL).fbStates.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):MMS:STATE:ERRID_RBV
      - longin
      - $(SYMBOL).fbStates.nErrorId
      - | io: input


    * - $(PREFIX):MMS:STATE:ERRMSG_RBV
      - waveform
      - $(SYMBOL).fbStates.sErrorMessage
      - | io: input


    * - $(PREFIX):MMS:STATE:GET_RBV
      - mbbi
      - $(SYMBOL).fbStates.enumGet
      - | io: input


    * - $(PREFIX):MMS:STATE:PMPS:ARB:ENABLE
      - bo
      - $(SYMBOL).fbStates.bArbiterEnabled
      - | io: output


    * - $(PREFIX):MMS:STATE:PMPS:ARB:ENABLE_RBV
      - bi
      - $(SYMBOL).fbStates.bArbiterEnabled
      - | io: output


    * - $(PREFIX):MMS:STATE:PMPS:MAINT
      - bo
      - $(SYMBOL).fbStates.fbStatePMPS.bMaintMode
      - | io: output


    * - $(PREFIX):MMS:STATE:PMPS:MAINT_RBV
      - bi
      - $(SYMBOL).fbStates.fbStatePMPS.bMaintMode
      - | io: output


    * - $(PREFIX):MMS:STATE:RESET
      - bo
      - $(SYMBOL).fbStates.bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):MMS:STATE:RESET_RBV
      - bi
      - $(SYMBOL).fbStates.bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):MMS:STATE:SET
      - mbbo
      - $(SYMBOL).fbStates.enumSet
      - | io: output


    * - $(PREFIX):MMS:STATE:SET_RBV
      - mbbi
      - $(SYMBOL).fbStates.enumSet
      - | io: output


    * - $(PREFIX):STC:01:CONN_RBV
      - bi
      - $(SYMBOL).fbThermoCouple1.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - $(PREFIX):STC:01:ERR_RBV
      - bi
      - $(SYMBOL).fbThermoCouple1.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):STC:01:TEMP_RBV
      - ai
      - $(SYMBOL).fbThermoCouple1.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - $(PREFIX):STC:02:CONN_RBV
      - bi
      - $(SYMBOL).fbThermoCouple2.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - $(PREFIX):STC:02:ERR_RBV
      - bi
      - $(SYMBOL).fbThermoCouple2.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):STC:02:TEMP_RBV
      - ai
      - $(SYMBOL).fbThermoCouple2.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


 
lcls2_cc_lib.FB_WFS_States
^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):01:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):01:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):01:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):02:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):02:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):03:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):03:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):04:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):04:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):05:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):05:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):06:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):06:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):07:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):07:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):08:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):08:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):09:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):09:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):BUSY_RBV
      - bi
      - $(SYMBOL).bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):DONE_RBV
      - bi
      - $(SYMBOL).bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):ERR_RBV
      - bi
      - $(SYMBOL).bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):ERRID_RBV
      - longin
      - $(SYMBOL).nErrorId
      - | io: input


    * - $(PREFIX):ERRMSG_RBV
      - waveform
      - $(SYMBOL).sErrorMessage
      - | io: input


    * - $(PREFIX):GET_RBV
      - mbbi
      - $(SYMBOL).enumGet
      - | io: input


    * - $(PREFIX):PMPS:ARB:ENABLE
      - bo
      - $(SYMBOL).bArbiterEnabled
      - | io: output


    * - $(PREFIX):PMPS:ARB:ENABLE_RBV
      - bi
      - $(SYMBOL).bArbiterEnabled
      - | io: output


    * - $(PREFIX):PMPS:MAINT
      - bo
      - $(SYMBOL).fbStatePMPS.bMaintMode
      - | io: output


    * - $(PREFIX):PMPS:MAINT_RBV
      - bi
      - $(SYMBOL).fbStatePMPS.bMaintMode
      - | io: output


    * - $(PREFIX):RESET
      - bo
      - $(SYMBOL).bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):RESET_RBV
      - bi
      - $(SYMBOL).bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):SET
      - mbbo
      - $(SYMBOL).enumSet
      - | io: output


    * - $(PREFIX):SET_RBV
      - mbbi
      - $(SYMBOL).enumSet
      - | io: output


                                                      
LCLS_General.FB_Listener
^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):AlarmsCleared_RBV
      - longin
      - $(SYMBOL).nCntAlarmsCleared
      - | io: input


    * - $(PREFIX):AlarmsConfirmed_RBV
      - longin
      - $(SYMBOL).nCntAlarmsConfirmed
      - | io: input


    * - $(PREFIX):AlarmsRaised_RBV
      - longin
      - $(SYMBOL).nCntAlarmsRaised
      - | io: input


    * - $(PREFIX):Log:EventClass_RBV
      - waveform
      - TwinCAT Event class
      - | io: input


    * - $(PREFIX):Log:EventType_RBV
      - mbbi
      - The event type
      - | io: input


    * - $(PREFIX):Log:Hostname_RBV
      - waveform
      - PLC Hostname
      - | io: input


    * - $(PREFIX):Log:Message_RBV
      - waveform
      - $(SYMBOL).stEventInfo.msg
      - | io: input


    * - $(PREFIX):Log:MessageID_RBV
      - longin
      - TwinCAT Message ID
      - | io: input


    * - $(PREFIX):Log:MessageJSON_RBV
      - waveform
      - Metadata with the message
      - | io: input


    * - $(PREFIX):Log:Schema_RBV
      - waveform
      - Schema string
      - | io: input


    * - $(PREFIX):Log:Severity_RBV
      - mbbi
      - TcEventSeverity
      - | field: ONST Info
        | field: THST Error
        | field: TWST Warning
        | field: ZRST Verbose
        | io: input


    * - $(PREFIX):Log:Source_RBV
      - waveform
      - $(SYMBOL).stEventInfo.source
      - | io: input


    * - $(PREFIX):Log:Timestamp_RBV
      - ai
      - Unix timestamp
      - | io: input


    * - $(PREFIX):LogToVisualStudio
      - bo
      - $(SYMBOL).bLogToVisualStudio
      - | io: output


    * - $(PREFIX):LogToVisualStudio_RBV
      - bi
      - $(SYMBOL).bLogToVisualStudio
      - | io: output


    * - $(PREFIX):MessagesSent_RBV
      - longin
      - $(SYMBOL).nCntMessagesSent
      - | io: input


    * - $(PREFIX):MinSeverity
      - mbbo
      - $(SYMBOL).eMinSeverity
      - | io: output


    * - $(PREFIX):MinSeverity_RBV
      - mbbi
      - $(SYMBOL).eMinSeverity
      - | io: output


 
LCLS_General.FB_LogHandler
^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):ADS:AlarmsCleared_RBV
      - longin
      - $(SYMBOL).fbTcAdsListener.nCntAlarmsCleared
      - | io: input


    * - $(PREFIX):ADS:AlarmsConfirmed_RBV
      - longin
      - $(SYMBOL).fbTcAdsListener.nCntAlarmsConfirmed
      - | io: input


    * - $(PREFIX):ADS:AlarmsRaised_RBV
      - longin
      - $(SYMBOL).fbTcAdsListener.nCntAlarmsRaised
      - | io: input


    * - $(PREFIX):ADS:Log:EventClass_RBV
      - waveform
      - TwinCAT Event class
      - | io: input


    * - $(PREFIX):ADS:Log:EventType_RBV
      - mbbi
      - The event type
      - | io: input


    * - $(PREFIX):ADS:Log:Hostname_RBV
      - waveform
      - PLC Hostname
      - | io: input


    * - $(PREFIX):ADS:Log:Message_RBV
      - waveform
      - $(SYMBOL).fbTcAdsListener.stEventInfo.msg
      - | io: input


    * - $(PREFIX):ADS:Log:MessageID_RBV
      - longin
      - TwinCAT Message ID
      - | io: input


    * - $(PREFIX):ADS:Log:MessageJSON_RBV
      - waveform
      - Metadata with the message
      - | io: input


    * - $(PREFIX):ADS:Log:Schema_RBV
      - waveform
      - Schema string
      - | io: input


    * - $(PREFIX):ADS:Log:Severity_RBV
      - mbbi
      - TcEventSeverity
      - | field: ONST Info
        | field: THST Error
        | field: TWST Warning
        | field: ZRST Verbose
        | io: input


    * - $(PREFIX):ADS:Log:Source_RBV
      - waveform
      - $(SYMBOL).fbTcAdsListener.stEventInfo.source
      - | io: input


    * - $(PREFIX):ADS:Log:Timestamp_RBV
      - ai
      - Unix timestamp
      - | io: input


    * - $(PREFIX):ADS:LogToVisualStudio
      - bo
      - $(SYMBOL).fbTcAdsListener.bLogToVisualStudio
      - | io: output


    * - $(PREFIX):ADS:LogToVisualStudio_RBV
      - bi
      - $(SYMBOL).fbTcAdsListener.bLogToVisualStudio
      - | io: output


    * - $(PREFIX):ADS:MessagesSent_RBV
      - longin
      - $(SYMBOL).fbTcAdsListener.nCntMessagesSent
      - | io: input


    * - $(PREFIX):ADS:MinSeverity
      - mbbo
      - $(SYMBOL).fbTcAdsListener.eMinSeverity
      - | io: output


    * - $(PREFIX):ADS:MinSeverity_RBV
      - mbbi
      - $(SYMBOL).fbTcAdsListener.eMinSeverity
      - | io: output


    * - $(PREFIX):LCLS:AlarmsCleared_RBV
      - longin
      - $(SYMBOL).fbLCLSListener.nCntAlarmsCleared
      - | io: input


    * - $(PREFIX):LCLS:AlarmsConfirmed_RBV
      - longin
      - $(SYMBOL).fbLCLSListener.nCntAlarmsConfirmed
      - | io: input


    * - $(PREFIX):LCLS:AlarmsRaised_RBV
      - longin
      - $(SYMBOL).fbLCLSListener.nCntAlarmsRaised
      - | io: input


    * - $(PREFIX):LCLS:Log:EventClass_RBV
      - waveform
      - TwinCAT Event class
      - | io: input


    * - $(PREFIX):LCLS:Log:EventType_RBV
      - mbbi
      - The event type
      - | io: input


    * - $(PREFIX):LCLS:Log:Hostname_RBV
      - waveform
      - PLC Hostname
      - | io: input


    * - $(PREFIX):LCLS:Log:Message_RBV
      - waveform
      - $(SYMBOL).fbLCLSListener.stEventInfo.msg
      - | io: input


    * - $(PREFIX):LCLS:Log:MessageID_RBV
      - longin
      - TwinCAT Message ID
      - | io: input


    * - $(PREFIX):LCLS:Log:MessageJSON_RBV
      - waveform
      - Metadata with the message
      - | io: input


    * - $(PREFIX):LCLS:Log:Schema_RBV
      - waveform
      - Schema string
      - | io: input


    * - $(PREFIX):LCLS:Log:Severity_RBV
      - mbbi
      - TcEventSeverity
      - | field: ONST Info
        | field: THST Error
        | field: TWST Warning
        | field: ZRST Verbose
        | io: input


    * - $(PREFIX):LCLS:Log:Source_RBV
      - waveform
      - $(SYMBOL).fbLCLSListener.stEventInfo.source
      - | io: input


    * - $(PREFIX):LCLS:Log:Timestamp_RBV
      - ai
      - Unix timestamp
      - | io: input


    * - $(PREFIX):LCLS:LogToVisualStudio
      - bo
      - $(SYMBOL).fbLCLSListener.bLogToVisualStudio
      - | io: output


    * - $(PREFIX):LCLS:LogToVisualStudio_RBV
      - bi
      - $(SYMBOL).fbLCLSListener.bLogToVisualStudio
      - | io: output


    * - $(PREFIX):LCLS:MessagesSent_RBV
      - longin
      - $(SYMBOL).fbLCLSListener.nCntMessagesSent
      - | io: input


    * - $(PREFIX):LCLS:MinSeverity
      - mbbo
      - $(SYMBOL).fbLCLSListener.eMinSeverity
      - | io: output


    * - $(PREFIX):LCLS:MinSeverity_RBV
      - mbbi
      - $(SYMBOL).fbLCLSListener.eMinSeverity
      - | io: output


    * - $(PREFIX):Router:AlarmsCleared_RBV
      - longin
      - $(SYMBOL).fbTcRouterListener.nCntAlarmsCleared
      - | io: input


    * - $(PREFIX):Router:AlarmsConfirmed_RBV
      - longin
      - $(SYMBOL).fbTcRouterListener.nCntAlarmsConfirmed
      - | io: input


    * - $(PREFIX):Router:AlarmsRaised_RBV
      - longin
      - $(SYMBOL).fbTcRouterListener.nCntAlarmsRaised
      - | io: input


    * - $(PREFIX):Router:Log:EventClass_RBV
      - waveform
      - TwinCAT Event class
      - | io: input


    * - $(PREFIX):Router:Log:EventType_RBV
      - mbbi
      - The event type
      - | io: input


    * - $(PREFIX):Router:Log:Hostname_RBV
      - waveform
      - PLC Hostname
      - | io: input


    * - $(PREFIX):Router:Log:Message_RBV
      - waveform
      - $(SYMBOL).fbTcRouterListener.stEventInfo.msg
      - | io: input


    * - $(PREFIX):Router:Log:MessageID_RBV
      - longin
      - TwinCAT Message ID
      - | io: input


    * - $(PREFIX):Router:Log:MessageJSON_RBV
      - waveform
      - Metadata with the message
      - | io: input


    * - $(PREFIX):Router:Log:Schema_RBV
      - waveform
      - Schema string
      - | io: input


    * - $(PREFIX):Router:Log:Severity_RBV
      - mbbi
      - TcEventSeverity
      - | field: ONST Info
        | field: THST Error
        | field: TWST Warning
        | field: ZRST Verbose
        | io: input


    * - $(PREFIX):Router:Log:Source_RBV
      - waveform
      - $(SYMBOL).fbTcRouterListener.stEventInfo.source
      - | io: input


    * - $(PREFIX):Router:Log:Timestamp_RBV
      - ai
      - Unix timestamp
      - | io: input


    * - $(PREFIX):Router:LogToVisualStudio
      - bo
      - $(SYMBOL).fbTcRouterListener.bLogToVisualStudio
      - | io: output


    * - $(PREFIX):Router:LogToVisualStudio_RBV
      - bi
      - $(SYMBOL).fbTcRouterListener.bLogToVisualStudio
      - | io: output


    * - $(PREFIX):Router:MessagesSent_RBV
      - longin
      - $(SYMBOL).fbTcRouterListener.nCntMessagesSent
      - | io: input


    * - $(PREFIX):Router:MinSeverity
      - mbbo
      - $(SYMBOL).fbTcRouterListener.eMinSeverity
      - | io: output


    * - $(PREFIX):Router:MinSeverity_RBV
      - mbbi
      - $(SYMBOL).fbTcRouterListener.eMinSeverity
      - | io: output


    * - $(PREFIX):RTime:AlarmsCleared_RBV
      - longin
      - $(SYMBOL).fbTcRTimeListener.nCntAlarmsCleared
      - | io: input


    * - $(PREFIX):RTime:AlarmsConfirmed_RBV
      - longin
      - $(SYMBOL).fbTcRTimeListener.nCntAlarmsConfirmed
      - | io: input


    * - $(PREFIX):RTime:AlarmsRaised_RBV
      - longin
      - $(SYMBOL).fbTcRTimeListener.nCntAlarmsRaised
      - | io: input


    * - $(PREFIX):RTime:Log:EventClass_RBV
      - waveform
      - TwinCAT Event class
      - | io: input


    * - $(PREFIX):RTime:Log:EventType_RBV
      - mbbi
      - The event type
      - | io: input


    * - $(PREFIX):RTime:Log:Hostname_RBV
      - waveform
      - PLC Hostname
      - | io: input


    * - $(PREFIX):RTime:Log:Message_RBV
      - waveform
      - $(SYMBOL).fbTcRTimeListener.stEventInfo.msg
      - | io: input


    * - $(PREFIX):RTime:Log:MessageID_RBV
      - longin
      - TwinCAT Message ID
      - | io: input


    * - $(PREFIX):RTime:Log:MessageJSON_RBV
      - waveform
      - Metadata with the message
      - | io: input


    * - $(PREFIX):RTime:Log:Schema_RBV
      - waveform
      - Schema string
      - | io: input


    * - $(PREFIX):RTime:Log:Severity_RBV
      - mbbi
      - TcEventSeverity
      - | field: ONST Info
        | field: THST Error
        | field: TWST Warning
        | field: ZRST Verbose
        | io: input


    * - $(PREFIX):RTime:Log:Source_RBV
      - waveform
      - $(SYMBOL).fbTcRTimeListener.stEventInfo.source
      - | io: input


    * - $(PREFIX):RTime:Log:Timestamp_RBV
      - ai
      - Unix timestamp
      - | io: input


    * - $(PREFIX):RTime:LogToVisualStudio
      - bo
      - $(SYMBOL).fbTcRTimeListener.bLogToVisualStudio
      - | io: output


    * - $(PREFIX):RTime:LogToVisualStudio_RBV
      - bi
      - $(SYMBOL).fbTcRTimeListener.bLogToVisualStudio
      - | io: output


    * - $(PREFIX):RTime:MessagesSent_RBV
      - longin
      - $(SYMBOL).fbTcRTimeListener.nCntMessagesSent
      - | io: input


    * - $(PREFIX):RTime:MinSeverity
      - mbbo
      - $(SYMBOL).fbTcRTimeListener.eMinSeverity
      - | io: output


    * - $(PREFIX):RTime:MinSeverity_RBV
      - mbbi
      - $(SYMBOL).fbTcRTimeListener.eMinSeverity
      - | io: output


    * - $(PREFIX):System:AlarmsCleared_RBV
      - longin
      - $(SYMBOL).fbTcSystemListener.nCntAlarmsCleared
      - | io: input


    * - $(PREFIX):System:AlarmsConfirmed_RBV
      - longin
      - $(SYMBOL).fbTcSystemListener.nCntAlarmsConfirmed
      - | io: input


    * - $(PREFIX):System:AlarmsRaised_RBV
      - longin
      - $(SYMBOL).fbTcSystemListener.nCntAlarmsRaised
      - | io: input


    * - $(PREFIX):System:Log:EventClass_RBV
      - waveform
      - TwinCAT Event class
      - | io: input


    * - $(PREFIX):System:Log:EventType_RBV
      - mbbi
      - The event type
      - | io: input


    * - $(PREFIX):System:Log:Hostname_RBV
      - waveform
      - PLC Hostname
      - | io: input


    * - $(PREFIX):System:Log:Message_RBV
      - waveform
      - $(SYMBOL).fbTcSystemListener.stEventInfo.msg
      - | io: input


    * - $(PREFIX):System:Log:MessageID_RBV
      - longin
      - TwinCAT Message ID
      - | io: input


    * - $(PREFIX):System:Log:MessageJSON_RBV
      - waveform
      - Metadata with the message
      - | io: input


    * - $(PREFIX):System:Log:Schema_RBV
      - waveform
      - Schema string
      - | io: input


    * - $(PREFIX):System:Log:Severity_RBV
      - mbbi
      - TcEventSeverity
      - | field: ONST Info
        | field: THST Error
        | field: TWST Warning
        | field: ZRST Verbose
        | io: input


    * - $(PREFIX):System:Log:Source_RBV
      - waveform
      - $(SYMBOL).fbTcSystemListener.stEventInfo.source
      - | io: input


    * - $(PREFIX):System:Log:Timestamp_RBV
      - ai
      - Unix timestamp
      - | io: input


    * - $(PREFIX):System:LogToVisualStudio
      - bo
      - $(SYMBOL).fbTcSystemListener.bLogToVisualStudio
      - | io: output


    * - $(PREFIX):System:LogToVisualStudio_RBV
      - bi
      - $(SYMBOL).fbTcSystemListener.bLogToVisualStudio
      - | io: output


    * - $(PREFIX):System:MessagesSent_RBV
      - longin
      - $(SYMBOL).fbTcSystemListener.nCntMessagesSent
      - | io: input


    * - $(PREFIX):System:MinSeverity
      - mbbo
      - $(SYMBOL).fbTcSystemListener.eMinSeverity
      - | io: output


    * - $(PREFIX):System:MinSeverity_RBV
      - mbbi
      - $(SYMBOL).fbTcSystemListener.eMinSeverity
      - | io: output


    * - $(PREFIX):Windows:AlarmsCleared_RBV
      - longin
      - $(SYMBOL).fbWindowsListener.nCntAlarmsCleared
      - | io: input


    * - $(PREFIX):Windows:AlarmsConfirmed_RBV
      - longin
      - $(SYMBOL).fbWindowsListener.nCntAlarmsConfirmed
      - | io: input


    * - $(PREFIX):Windows:AlarmsRaised_RBV
      - longin
      - $(SYMBOL).fbWindowsListener.nCntAlarmsRaised
      - | io: input


    * - $(PREFIX):Windows:Log:EventClass_RBV
      - waveform
      - TwinCAT Event class
      - | io: input


    * - $(PREFIX):Windows:Log:EventType_RBV
      - mbbi
      - The event type
      - | io: input


    * - $(PREFIX):Windows:Log:Hostname_RBV
      - waveform
      - PLC Hostname
      - | io: input


    * - $(PREFIX):Windows:Log:Message_RBV
      - waveform
      - $(SYMBOL).fbWindowsListener.stEventInfo.msg
      - | io: input


    * - $(PREFIX):Windows:Log:MessageID_RBV
      - longin
      - TwinCAT Message ID
      - | io: input


    * - $(PREFIX):Windows:Log:MessageJSON_RBV
      - waveform
      - Metadata with the message
      - | io: input


    * - $(PREFIX):Windows:Log:Schema_RBV
      - waveform
      - Schema string
      - | io: input


    * - $(PREFIX):Windows:Log:Severity_RBV
      - mbbi
      - TcEventSeverity
      - | field: ONST Info
        | field: THST Error
        | field: TWST Warning
        | field: ZRST Verbose
        | io: input


    * - $(PREFIX):Windows:Log:Source_RBV
      - waveform
      - $(SYMBOL).fbWindowsListener.stEventInfo.source
      - | io: input


    * - $(PREFIX):Windows:Log:Timestamp_RBV
      - ai
      - Unix timestamp
      - | io: input


    * - $(PREFIX):Windows:LogToVisualStudio
      - bo
      - $(SYMBOL).fbWindowsListener.bLogToVisualStudio
      - | io: output


    * - $(PREFIX):Windows:LogToVisualStudio_RBV
      - bi
      - $(SYMBOL).fbWindowsListener.bLogToVisualStudio
      - | io: output


    * - $(PREFIX):Windows:MessagesSent_RBV
      - longin
      - $(SYMBOL).fbWindowsListener.nCntMessagesSent
      - | io: input


    * - $(PREFIX):Windows:MinSeverity
      - mbbo
      - $(SYMBOL).fbWindowsListener.eMinSeverity
      - | io: output


    * - $(PREFIX):Windows:MinSeverity_RBV
      - mbbi
      - $(SYMBOL).fbWindowsListener.eMinSeverity
      - | io: output


 
LCLS_General.FB_LogMessage
^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):Reset
      - bo
      - Rising-edge reset of trip
      - | io: output


    * - $(PREFIX):Reset_RBV
      - bi
      - Rising-edge reset of trip
      - | io: output


    * - $(PREFIX):Tripped_RBV
      - bi
      - Log message FB tripped
      - | io: input


  
LCLS_General.FB_TempSensor
^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):CONN_RBV
      - bi
      - $(SYMBOL).bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - $(PREFIX):ERR_RBV
      - bi
      - $(SYMBOL).bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):TEMP_RBV
      - ai
      - $(SYMBOL).fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


 
LCLS_General.FB_ThermoCouple
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):STC:CONN_RBV
      - bi
      - $(SYMBOL).bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - $(PREFIX):STC:ERR_RBV
      - bi
      - $(SYMBOL).bError
      - | io: input


    * - $(PREFIX):STC:TEMP_RBV
      - ai
      - $(SYMBOL).fTemp
      - | io: input


 
LCLS_General.ST_PendingEvent
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):EventClass_RBV
      - waveform
      - TwinCAT Event class
      - | io: input


    * - $(PREFIX):EventType_RBV
      - mbbi
      - The event type
      - | io: input


    * - $(PREFIX):Hostname_RBV
      - waveform
      - PLC Hostname
      - | io: input


    * - $(PREFIX):Message_RBV
      - waveform
      - $(SYMBOL).stEventInfo.msg
      - | io: input


    * - $(PREFIX):MessageID_RBV
      - longin
      - TwinCAT Message ID
      - | io: input


    * - $(PREFIX):MessageJSON_RBV
      - waveform
      - Metadata with the message
      - | io: input


    * - $(PREFIX):Schema_RBV
      - waveform
      - Schema string
      - | io: input


    * - $(PREFIX):Severity_RBV
      - mbbi
      - TcEventSeverity
      - | field: ONST Info
        | field: THST Error
        | field: TWST Warning
        | field: ZRST Verbose
        | io: input


    * - $(PREFIX):Source_RBV
      - waveform
      - $(SYMBOL).stEventInfo.source
      - | io: input


    * - $(PREFIX):Timestamp_RBV
      - ai
      - Unix timestamp
      - | io: input


                                                                            
lcls_twincat_motion.DUT_MotionPneumaticActuator
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):bBusy_RBV
      - bi
      - TRUE if in the middle of a command
      - | field: ONAM FALSE
        | field: ZNAM TRUE
        | io: input


    * - $(PREFIX):bDone_RBV
      - bi
      - TRUE if command finished successfully
      - | field: ONAM FALSE
        | field: ZNAM TRUE
        | io: input


    * - $(PREFIX):bInsertEnable_RBV
      - bi
      - True if the actuator had permission to be retracted
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):bInsetDigitalOutput_RBV
      - bi
      - TRUE if Insert digital output is active
      - | field: ONAM FALSE
        | field: ZNAM TRUE
        | io: input


    * - $(PREFIX):bInterlockOK_RBV
      - bi
      - True if the actuator has permission to move in either direction
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):bRetractDigitalOutput_RBV
      - bi
      - TRUE if Retract digital output is active
      - | field: ONAM FALSE
        | field: ZNAM TRUE
        | io: input


    * - $(PREFIX):bRetractEnable_RBV
      - bi
      - True if the actuator had permission to be inserted
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):CMD:IN
      - bo
      - Used by EPICS and internally to request Insert motion
      - | io: output


    * - $(PREFIX):CMD:IN_RBV
      - bi
      - Used by EPICS and internally to request Insert motion
      - | io: output


    * - $(PREFIX):CMD:OUT
      - bo
      - Used by EPICS and internally to request retract motion
      - | io: output


    * - $(PREFIX):CMD:OUT_RBV
      - bi
      - Used by EPICS and internally to request retract motion
      - | io: output


    * - $(PREFIX):nPositionState_RBV
      - mbbi
      - Pneumatic actuator position
      - | field: ONST INSERTED
        | field: THST INVALID
        | field: TWST MOVING
        | field: ZRST RETRACTED
        | io: input
        | type: mbbi


    * - $(PREFIX):PLC:bError_RBV
      - bi
      - TRUE if we
      - | field: ONAM FALSE
        | field: ZNAM TRUE
        | io: input


    * - $(PREFIX):PLC:bInLimitSwitch_RBV
      - bi
      - TRUE if IN limit is reached
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):PLC:bOutLimitSwitch_RBV
      - bi
      - TRUE if OUT limit is reached
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input


    * - $(PREFIX):PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input


 
lcls_twincat_motion.DUT_MotionStage
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):PLC:bAllBackwardEnable_RBV
      - bi
      - Summary of axis permission to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):PLC:bAllEnable_RBV
      - bi
      - Summary of axis permission to have power
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):PLC:bAllForwardEnable_RBV
      - bi
      - Summary of axis permission to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):PLC:bBrakeRelease_RBV
      - bi
      - TRUE if brake released
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):PLC:bBusy_RBV
      - bi
      - TRUE if in the middle of a command
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):PLC:bDone_RBV
      - bi
      - TRUE if command finished successfully
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):PLC:bEnable
      - bo
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):PLC:bEnable_RBV
      - bi
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):PLC:bEnableDone_RBV
      - bi
      - TRUE if done enabling
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):PLC:bError_RBV
      - bi
      - TRUE if we
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):PLC:bExecute
      - bo
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):PLC:bExecute_RBV
      - bi
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):PLC:bGantryAxis_RBV
      - bi
      - TRUE if gantry EPS active
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):PLC:bGantryBackwardEnable_RBV
      - bi
      - TRUE if gantry ok to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):PLC:bGantryForwardEnable_RBV
      - bi
      - TRUE if gantry ok to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):PLC:bHome_RBV
      - bi
      - TRUE if at homing switch
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - $(PREFIX):PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - $(PREFIX):PLC:bHomed_RBV
      - bi
      - TRUE if the motor has been homed
      - | io: input


    * - $(PREFIX):PLC:bLimitBackwardEnable_RBV
      - bi
      - FALSE if reverse limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):PLC:bLimitForwardEnable_RBV
      - bi
      - FALSE if forward limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):PLC:bMoveCmd
      - bo
      - Start a move
      - | io: output


    * - $(PREFIX):PLC:bMoveCmd_RBV
      - bi
      - Start a move
      - | io: output


    * - $(PREFIX):PLC:bPowerSelf_RBV
      - bi
      - FALSE if axis is in PMPS
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):PLC:bSafetyReady_RBV
      - bi
      - TRUE if safe to start a move
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):PLC:fAcceleration
      - ao
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - $(PREFIX):PLC:fAcceleration_RBV
      - ai
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - $(PREFIX):PLC:fDeceleration
      - ao
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - $(PREFIX):PLC:fDeceleration_RBV
      - ai
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - $(PREFIX):PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - $(PREFIX):PLC:fPosition
      - ao
      - Used internally and by the IOC as the set position
      - | io: output


    * - $(PREFIX):PLC:fPosition_RBV
      - ai
      - Used internally and by the IOC as the set position
      - | io: output


    * - $(PREFIX):PLC:fVelocity
      - ao
      - Used internally and by the IOC to set velocity
      - | io: output


    * - $(PREFIX):PLC:fVelocity_RBV
      - ai
      - Used internally and by the IOC to set velocity
      - | io: output


    * - $(PREFIX):PLC:nBrakeMode_RBV
      - mbbi
      - Describes when the brake will be released
      - | io: input


    * - $(PREFIX):PLC:nCmdData
      - longout
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - $(PREFIX):PLC:nCmdData_RBV
      - longin
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - $(PREFIX):PLC:nCommand
      - longout
      - Used internally and by the IOC to pick move type
      - | io: output


    * - $(PREFIX):PLC:nCommand_RBV
      - longin
      - Used internally and by the IOC to pick move type
      - | io: output


    * - $(PREFIX):PLC:nEnableMode_RBV
      - mbbi
      - Describes when the axis will automatically get power
      - | io: input


    * - $(PREFIX):PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - $(PREFIX):PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input


    * - $(PREFIX):PLC:nHomingMode_RBV
      - mbbi
      - Describes our homing strategy
      - | io: input


    * - $(PREFIX):PLC:nMotionAxisID_RBV
      - longin
      - Unique ID assigned to each axis in the NC
      - | io: input


    * - $(PREFIX):PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input


    * - $(PREFIX):PLC:sName_RBV
      - waveform
      - PLC program name
      - | io: input


 
lcls_twincat_motion.DUT_PositionState
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):ACCL
      - ao
      - Acceleration to use for moves to this state
      - | io: output


    * - $(PREFIX):ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | io: output


    * - $(PREFIX):DCCL
      - ao
      - Deceleration to use for moves to this state
      - | io: output


    * - $(PREFIX):DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | io: output


    * - $(PREFIX):DELTA
      - ao
      - Max deviation from position at this state
      - | field: DRVL 0.0
        | io: output


    * - $(PREFIX):DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | field: DRVL 0.0
        | io: output


    * - $(PREFIX):ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | io: input


    * - $(PREFIX):LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):NAME_RBV
      - waveform
      - Name of this position state
      - | io: input


    * - $(PREFIX):SETPOINT
      - ao
      - Axis position associated with this state
      - | io: output


    * - $(PREFIX):SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | io: output


    * - $(PREFIX):VALID_RBV
      - bi
      - TRUE if this is a real state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):VELO
      - ao
      - Speed at which to move to this state
      - | io: output


    * - $(PREFIX):VELO_RBV
      - ai
      - Speed at which to move to this state
      - | io: output


               
lcls_twincat_motion.FB_MotionPneumaticActuator
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):bBusy_RBV
      - bi
      - TRUE if in the middle of a command
      - | field: ONAM FALSE
        | field: ZNAM TRUE
        | io: input


    * - $(PREFIX):bDone_RBV
      - bi
      - TRUE if command finished successfully
      - | field: ONAM FALSE
        | field: ZNAM TRUE
        | io: input


    * - $(PREFIX):bInsertEnable_RBV
      - bi
      - True if the actuator had permission to be retracted
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):bInsetDigitalOutput_RBV
      - bi
      - TRUE if Insert digital output is active
      - | field: ONAM FALSE
        | field: ZNAM TRUE
        | io: input


    * - $(PREFIX):bInterlockOK_RBV
      - bi
      - True if the actuator has permission to move in either direction
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):bRetractDigitalOutput_RBV
      - bi
      - TRUE if Retract digital output is active
      - | field: ONAM FALSE
        | field: ZNAM TRUE
        | io: input


    * - $(PREFIX):bRetractEnable_RBV
      - bi
      - True if the actuator had permission to be inserted
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):CMD:IN
      - bo
      - Used by EPICS and internally to request Insert motion
      - | io: output


    * - $(PREFIX):CMD:IN_RBV
      - bi
      - Used by EPICS and internally to request Insert motion
      - | io: output


    * - $(PREFIX):CMD:OUT
      - bo
      - Used by EPICS and internally to request retract motion
      - | io: output


    * - $(PREFIX):CMD:OUT_RBV
      - bi
      - Used by EPICS and internally to request retract motion
      - | io: output


    * - $(PREFIX):FF_Reset
      - bo
      - $(SYMBOL).i_xReset
      - | io: output


    * - $(PREFIX):FF_Reset_RBV
      - bi
      - $(SYMBOL).i_xReset
      - | io: output


    * - $(PREFIX):MPS_OK
      - bo
      - TRUE if MPS signal is OK
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):MPS_OK_RBV
      - bi
      - TRUE if MPS signal is OK
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):nPositionState_RBV
      - mbbi
      - Pneumatic actuator position
      - | field: ONST INSERTED
        | field: THST INVALID
        | field: TWST MOVING
        | field: ZRST RETRACTED
        | io: input
        | type: mbbi


    * - $(PREFIX):PLC:bError_RBV
      - bi
      - TRUE if we
      - | field: ONAM FALSE
        | field: ZNAM TRUE
        | io: input


    * - $(PREFIX):PLC:bInLimitSwitch_RBV
      - bi
      - TRUE if IN limit is reached
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):PLC:bOutLimitSwitch_RBV
      - bi
      - TRUE if OUT limit is reached
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input


    * - $(PREFIX):PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input


     
lcls_twincat_motion.FB_PositionStateBase
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):01:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):01:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):01:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):02:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):02:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):03:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):03:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):04:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):04:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):05:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):05:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):06:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):06:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):07:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):07:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):08:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):08:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):09:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):09:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):BUSY_RBV
      - bi
      - $(SYMBOL).bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):DONE_RBV
      - bi
      - $(SYMBOL).bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):ERR_RBV
      - bi
      - $(SYMBOL).bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):ERRID_RBV
      - longin
      - $(SYMBOL).nErrorId
      - | io: input


    * - $(PREFIX):ERRMSG_RBV
      - waveform
      - $(SYMBOL).sErrorMessage
      - | io: input


    * - $(PREFIX):RESET
      - bo
      - $(SYMBOL).bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):RESET_RBV
      - bi
      - $(SYMBOL).bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


 
lcls_twincat_motion.FB_PositionStateBase_WithPMPS
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):01:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):01:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):01:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):02:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):02:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):03:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):03:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):04:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):04:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):05:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):05:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):06:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):06:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):07:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):07:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):08:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):08:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):09:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):09:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):BUSY_RBV
      - bi
      - $(SYMBOL).bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):DONE_RBV
      - bi
      - $(SYMBOL).bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):ERR_RBV
      - bi
      - $(SYMBOL).bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):ERRID_RBV
      - longin
      - $(SYMBOL).nErrorId
      - | io: input


    * - $(PREFIX):ERRMSG_RBV
      - waveform
      - $(SYMBOL).sErrorMessage
      - | io: input


    * - $(PREFIX):PMPS:ARB:ENABLE
      - bo
      - $(SYMBOL).bArbiterEnabled
      - | io: output


    * - $(PREFIX):PMPS:ARB:ENABLE_RBV
      - bi
      - $(SYMBOL).bArbiterEnabled
      - | io: output


    * - $(PREFIX):PMPS:MAINT
      - bo
      - $(SYMBOL).fbStatePMPS.bMaintMode
      - | io: output


    * - $(PREFIX):PMPS:MAINT_RBV
      - bi
      - $(SYMBOL).fbStatePMPS.bMaintMode
      - | io: output


    * - $(PREFIX):RESET
      - bo
      - $(SYMBOL).bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):RESET_RBV
      - bi
      - $(SYMBOL).bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


 
lcls_twincat_motion.FB_PositionStateInOut_WithPMPS
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):01:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):01:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):01:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):02:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):02:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):03:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):03:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):04:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):04:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):05:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):05:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):06:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):06:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):07:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):07:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):08:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):08:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):09:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):09:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):BUSY_RBV
      - bi
      - $(SYMBOL).bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):DONE_RBV
      - bi
      - $(SYMBOL).bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):ERR_RBV
      - bi
      - $(SYMBOL).bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):ERRID_RBV
      - longin
      - $(SYMBOL).nErrorId
      - | io: input


    * - $(PREFIX):ERRMSG_RBV
      - waveform
      - $(SYMBOL).sErrorMessage
      - | io: input


    * - $(PREFIX):GET_RBV
      - mbbi
      - $(SYMBOL).enumGet
      - | io: input


    * - $(PREFIX):PMPS:ARB:ENABLE
      - bo
      - $(SYMBOL).bArbiterEnabled
      - | io: output


    * - $(PREFIX):PMPS:ARB:ENABLE_RBV
      - bi
      - $(SYMBOL).bArbiterEnabled
      - | io: output


    * - $(PREFIX):PMPS:MAINT
      - bo
      - $(SYMBOL).fbStatePMPS.bMaintMode
      - | io: output


    * - $(PREFIX):PMPS:MAINT_RBV
      - bi
      - $(SYMBOL).fbStatePMPS.bMaintMode
      - | io: output


    * - $(PREFIX):RESET
      - bo
      - $(SYMBOL).bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):RESET_RBV
      - bi
      - $(SYMBOL).bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):SET
      - mbbo
      - $(SYMBOL).enumSet
      - | io: output


    * - $(PREFIX):SET_RBV
      - mbbi
      - $(SYMBOL).enumSet
      - | io: output


   
lcls_twincat_motion.FB_PositionStateMove
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):ACCL
      - ao
      - Acceleration to use for moves to this state
      - | io: output


    * - $(PREFIX):ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | io: output


    * - $(PREFIX):AT_STATE_RBV
      - bi
      - $(SYMBOL).bAtState
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):BUSY_RBV
      - bi
      - $(SYMBOL).bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):DCCL
      - ao
      - Deceleration to use for moves to this state
      - | io: output


    * - $(PREFIX):DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | io: output


    * - $(PREFIX):DELTA
      - ao
      - Max deviation from position at this state
      - | field: DRVL 0.0
        | io: output


    * - $(PREFIX):DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | field: DRVL 0.0
        | io: output


    * - $(PREFIX):DONE_RBV
      - bi
      - $(SYMBOL).bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | io: input


    * - $(PREFIX):ERR_RBV
      - bi
      - $(SYMBOL).bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):ERRID_RBV
      - longin
      - $(SYMBOL).nErrorID
      - | io: input


    * - $(PREFIX):ERRMSG_RBV
      - waveform
      - $(SYMBOL).sErrorMessage
      - | io: input


    * - $(PREFIX):GO
      - bo
      - $(SYMBOL).bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):GO_RBV
      - bi
      - $(SYMBOL).bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):NAME_RBV
      - waveform
      - Name of this position state
      - | io: input


    * - $(PREFIX):RESET
      - bo
      - $(SYMBOL).bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):RESET_RBV
      - bi
      - $(SYMBOL).bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):SETPOINT
      - ao
      - Axis position associated with this state
      - | io: output


    * - $(PREFIX):SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | io: output


    * - $(PREFIX):VALID_RBV
      - bi
      - TRUE if this is a real state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):VELO
      - ao
      - Speed at which to move to this state
      - | io: output


    * - $(PREFIX):VELO_RBV
      - ai
      - Speed at which to move to this state
      - | io: output


 
lcls_twincat_motion.FB_PositionStatePMPS
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):MAINT
      - bo
      - $(SYMBOL).bMaintMode
      - | io: output


    * - $(PREFIX):MAINT_RBV
      - bi
      - $(SYMBOL).bMaintMode
      - | io: output


 
lcls_twincat_motion.FB_PositionStatePMPS_Base
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):MAINT
      - bo
      - $(SYMBOL).bMaintMode
      - | io: output


    * - $(PREFIX):MAINT_RBV
      - bi
      - $(SYMBOL).bMaintMode
      - | io: output


                      
PMPS.FB_Arbiter
^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):AP:Entry:001:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):AP:Entry:001:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:001:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:001:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:001:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:001:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):AP:Entry:001:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):AP:Entry:001:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:001:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:002:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):AP:Entry:002:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:002:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:002:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:002:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:002:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):AP:Entry:002:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):AP:Entry:002:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:002:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:003:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):AP:Entry:003:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:003:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:003:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:003:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:003:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):AP:Entry:003:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):AP:Entry:003:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:003:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:004:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):AP:Entry:004:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:004:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:004:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:004:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:004:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):AP:Entry:004:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):AP:Entry:004:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:004:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:005:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):AP:Entry:005:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:005:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:005:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:005:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:005:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):AP:Entry:005:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):AP:Entry:005:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:005:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:006:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):AP:Entry:006:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:006:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:006:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:006:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:006:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):AP:Entry:006:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):AP:Entry:006:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:006:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:007:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):AP:Entry:007:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:007:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:007:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:007:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:007:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):AP:Entry:007:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):AP:Entry:007:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:007:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:008:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):AP:Entry:008:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:008:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:008:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:008:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:008:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):AP:Entry:008:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):AP:Entry:008:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:008:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:009:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):AP:Entry:009:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:009:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:009:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:009:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:009:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):AP:Entry:009:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):AP:Entry:009:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:009:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:010:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):AP:Entry:010:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:010:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:010:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:010:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:010:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):AP:Entry:010:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):AP:Entry:010:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:010:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:011:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):AP:Entry:011:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:011:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:011:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:011:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:011:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):AP:Entry:011:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):AP:Entry:011:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:011:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:012:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):AP:Entry:012:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:012:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:012:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:012:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:012:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):AP:Entry:012:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):AP:Entry:012:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:012:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:013:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):AP:Entry:013:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:013:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:013:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:013:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:013:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):AP:Entry:013:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):AP:Entry:013:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:013:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:014:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):AP:Entry:014:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:014:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:014:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:014:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:014:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):AP:Entry:014:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):AP:Entry:014:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:014:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:015:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):AP:Entry:015:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:015:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:015:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:015:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:015:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):AP:Entry:015:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):AP:Entry:015:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:015:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:016:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):AP:Entry:016:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:016:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:016:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:016:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:016:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):AP:Entry:016:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):AP:Entry:016:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:016:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:017:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):AP:Entry:017:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:017:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:017:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:017:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:017:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):AP:Entry:017:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):AP:Entry:017:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:017:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:018:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):AP:Entry:018:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:018:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:018:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:018:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:018:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):AP:Entry:018:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):AP:Entry:018:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:018:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:019:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):AP:Entry:019:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:019:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:019:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:019:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:019:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):AP:Entry:019:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):AP:Entry:019:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:019:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:020:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):AP:Entry:020:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:020:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:020:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:020:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:020:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):AP:Entry:020:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):AP:Entry:020:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:020:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:021:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):AP:Entry:021:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:021:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:021:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:021:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:021:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):AP:Entry:021:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):AP:Entry:021:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:021:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:022:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):AP:Entry:022:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:022:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:022:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:022:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:022:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):AP:Entry:022:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):AP:Entry:022:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:022:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:023:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):AP:Entry:023:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:023:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:023:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:023:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:023:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):AP:Entry:023:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):AP:Entry:023:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:023:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:024:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):AP:Entry:024:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:024:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:024:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:024:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:024:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):AP:Entry:024:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):AP:Entry:024:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:024:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:025:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):AP:Entry:025:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:025:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:025:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:025:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:025:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):AP:Entry:025:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):AP:Entry:025:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:025:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:026:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):AP:Entry:026:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:026:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:026:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:026:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:026:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):AP:Entry:026:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):AP:Entry:026:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:026:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:027:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):AP:Entry:027:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:027:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:027:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:027:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:027:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):AP:Entry:027:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):AP:Entry:027:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:027:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:028:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):AP:Entry:028:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:028:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:028:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:028:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:028:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):AP:Entry:028:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):AP:Entry:028:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:028:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:029:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):AP:Entry:029:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:029:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:029:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:029:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:029:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):AP:Entry:029:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):AP:Entry:029:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:029:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:030:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):AP:Entry:030:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:030:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:030:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:030:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:030:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):AP:Entry:030:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):AP:Entry:030:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:030:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:031:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):AP:Entry:031:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:031:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:031:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:031:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:031:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):AP:Entry:031:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):AP:Entry:031:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:031:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:032:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):AP:Entry:032:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:032:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:032:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:032:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:032:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):AP:Entry:032:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):AP:Entry:032:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:032:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:033:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):AP:Entry:033:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:033:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:033:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:033:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:033:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):AP:Entry:033:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):AP:Entry:033:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:033:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:034:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):AP:Entry:034:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:034:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:034:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:034:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:034:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):AP:Entry:034:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):AP:Entry:034:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:034:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:035:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):AP:Entry:035:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:035:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:035:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:035:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:035:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):AP:Entry:035:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):AP:Entry:035:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:035:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:036:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):AP:Entry:036:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:036:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:036:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:036:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:036:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):AP:Entry:036:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):AP:Entry:036:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:036:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:037:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):AP:Entry:037:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:037:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:037:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:037:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:037:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):AP:Entry:037:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):AP:Entry:037:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:037:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:038:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):AP:Entry:038:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:038:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:038:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:038:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:038:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):AP:Entry:038:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):AP:Entry:038:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:038:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:039:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):AP:Entry:039:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:039:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:039:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:039:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:039:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):AP:Entry:039:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):AP:Entry:039:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:039:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:040:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):AP:Entry:040:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:040:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:040:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:040:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:040:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):AP:Entry:040:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):AP:Entry:040:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:040:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:041:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):AP:Entry:041:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:041:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:041:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:041:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:041:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):AP:Entry:041:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):AP:Entry:041:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:041:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:042:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):AP:Entry:042:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:042:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:042:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:042:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:042:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):AP:Entry:042:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):AP:Entry:042:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:042:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:043:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):AP:Entry:043:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:043:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:043:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:043:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:043:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):AP:Entry:043:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):AP:Entry:043:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:043:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:044:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):AP:Entry:044:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:044:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:044:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:044:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:044:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):AP:Entry:044:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):AP:Entry:044:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:044:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:045:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):AP:Entry:045:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:045:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:045:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:045:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:045:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):AP:Entry:045:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):AP:Entry:045:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:045:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:046:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):AP:Entry:046:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:046:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:046:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:046:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:046:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):AP:Entry:046:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):AP:Entry:046:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:046:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:047:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):AP:Entry:047:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:047:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:047:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:047:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:047:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):AP:Entry:047:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):AP:Entry:047:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:047:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:048:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):AP:Entry:048:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:048:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:048:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:048:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:048:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):AP:Entry:048:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):AP:Entry:048:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:048:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:049:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):AP:Entry:049:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:049:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:049:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:049:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:049:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):AP:Entry:049:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):AP:Entry:049:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:049:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:050:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):AP:Entry:050:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:050:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:050:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:050:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:050:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):AP:Entry:050:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):AP:Entry:050:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:050:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):ArbiterID_RBV
      - longin
      - Arbiter ID for elev. req.
      - | io: input


    * - $(PREFIX):ArbitratedBP:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):ArbitratedBP:PhotonEnergyRanges_RBV
      - longin
      - Arbitrated BP
      - | field: EGU eV
        | io: input


    * - $(PREFIX):ArbitratedBP:Rate_RBV
      - longin
      - Arbitrated BP
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):ArbitratedBP:Transmission_RBV
      - ai
      - Arbitrated BP
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):ArbitratedBP:Valid_RBV
      - bi
      - Arbitrated BP
      - | io: input


    * - $(PREFIX):ArbitratedBP:Veto_RBV
      - waveform
      - Arbitrated BP
      - | io: input


    * - $(PREFIX):CohortCounter_RBV
      - longin
      - Intrnl cohort counter
      - | io: input


 
PMPS.FB_BeamParamAssertionPool
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):Entry:001:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Entry:001:Device_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[1].sDevName
      - | io: input


    * - $(PREFIX):Entry:001:ID_RBV
      - longin
      - $(SYMBOL).epicsDataPool[1].nId
      - | io: input


    * - $(PREFIX):Entry:001:Live_RBV
      - bi
      - $(SYMBOL).epicsDataPool[1].LiveInTable
      - | io: input


    * - $(PREFIX):Entry:001:PhotonEnergyRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[1].neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:001:Rate_RBV
      - longin
      - $(SYMBOL).epicsDataPool[1].nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Entry:001:Transmission_RBV
      - ai
      - $(SYMBOL).epicsDataPool[1].nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Entry:001:Valid_RBV
      - bi
      - $(SYMBOL).epicsDataPool[1].xValid
      - | io: input


    * - $(PREFIX):Entry:001:Veto_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[1].aVetoDevices
      - | io: input


    * - $(PREFIX):Entry:002:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Entry:002:Device_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[2].sDevName
      - | io: input


    * - $(PREFIX):Entry:002:ID_RBV
      - longin
      - $(SYMBOL).epicsDataPool[2].nId
      - | io: input


    * - $(PREFIX):Entry:002:Live_RBV
      - bi
      - $(SYMBOL).epicsDataPool[2].LiveInTable
      - | io: input


    * - $(PREFIX):Entry:002:PhotonEnergyRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[2].neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:002:Rate_RBV
      - longin
      - $(SYMBOL).epicsDataPool[2].nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Entry:002:Transmission_RBV
      - ai
      - $(SYMBOL).epicsDataPool[2].nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Entry:002:Valid_RBV
      - bi
      - $(SYMBOL).epicsDataPool[2].xValid
      - | io: input


    * - $(PREFIX):Entry:002:Veto_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[2].aVetoDevices
      - | io: input


    * - $(PREFIX):Entry:003:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Entry:003:Device_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[3].sDevName
      - | io: input


    * - $(PREFIX):Entry:003:ID_RBV
      - longin
      - $(SYMBOL).epicsDataPool[3].nId
      - | io: input


    * - $(PREFIX):Entry:003:Live_RBV
      - bi
      - $(SYMBOL).epicsDataPool[3].LiveInTable
      - | io: input


    * - $(PREFIX):Entry:003:PhotonEnergyRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[3].neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:003:Rate_RBV
      - longin
      - $(SYMBOL).epicsDataPool[3].nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Entry:003:Transmission_RBV
      - ai
      - $(SYMBOL).epicsDataPool[3].nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Entry:003:Valid_RBV
      - bi
      - $(SYMBOL).epicsDataPool[3].xValid
      - | io: input


    * - $(PREFIX):Entry:003:Veto_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[3].aVetoDevices
      - | io: input


    * - $(PREFIX):Entry:004:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Entry:004:Device_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[4].sDevName
      - | io: input


    * - $(PREFIX):Entry:004:ID_RBV
      - longin
      - $(SYMBOL).epicsDataPool[4].nId
      - | io: input


    * - $(PREFIX):Entry:004:Live_RBV
      - bi
      - $(SYMBOL).epicsDataPool[4].LiveInTable
      - | io: input


    * - $(PREFIX):Entry:004:PhotonEnergyRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[4].neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:004:Rate_RBV
      - longin
      - $(SYMBOL).epicsDataPool[4].nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Entry:004:Transmission_RBV
      - ai
      - $(SYMBOL).epicsDataPool[4].nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Entry:004:Valid_RBV
      - bi
      - $(SYMBOL).epicsDataPool[4].xValid
      - | io: input


    * - $(PREFIX):Entry:004:Veto_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[4].aVetoDevices
      - | io: input


    * - $(PREFIX):Entry:005:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Entry:005:Device_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[5].sDevName
      - | io: input


    * - $(PREFIX):Entry:005:ID_RBV
      - longin
      - $(SYMBOL).epicsDataPool[5].nId
      - | io: input


    * - $(PREFIX):Entry:005:Live_RBV
      - bi
      - $(SYMBOL).epicsDataPool[5].LiveInTable
      - | io: input


    * - $(PREFIX):Entry:005:PhotonEnergyRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[5].neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:005:Rate_RBV
      - longin
      - $(SYMBOL).epicsDataPool[5].nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Entry:005:Transmission_RBV
      - ai
      - $(SYMBOL).epicsDataPool[5].nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Entry:005:Valid_RBV
      - bi
      - $(SYMBOL).epicsDataPool[5].xValid
      - | io: input


    * - $(PREFIX):Entry:005:Veto_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[5].aVetoDevices
      - | io: input


    * - $(PREFIX):Entry:006:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Entry:006:Device_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[6].sDevName
      - | io: input


    * - $(PREFIX):Entry:006:ID_RBV
      - longin
      - $(SYMBOL).epicsDataPool[6].nId
      - | io: input


    * - $(PREFIX):Entry:006:Live_RBV
      - bi
      - $(SYMBOL).epicsDataPool[6].LiveInTable
      - | io: input


    * - $(PREFIX):Entry:006:PhotonEnergyRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[6].neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:006:Rate_RBV
      - longin
      - $(SYMBOL).epicsDataPool[6].nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Entry:006:Transmission_RBV
      - ai
      - $(SYMBOL).epicsDataPool[6].nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Entry:006:Valid_RBV
      - bi
      - $(SYMBOL).epicsDataPool[6].xValid
      - | io: input


    * - $(PREFIX):Entry:006:Veto_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[6].aVetoDevices
      - | io: input


    * - $(PREFIX):Entry:007:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Entry:007:Device_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[7].sDevName
      - | io: input


    * - $(PREFIX):Entry:007:ID_RBV
      - longin
      - $(SYMBOL).epicsDataPool[7].nId
      - | io: input


    * - $(PREFIX):Entry:007:Live_RBV
      - bi
      - $(SYMBOL).epicsDataPool[7].LiveInTable
      - | io: input


    * - $(PREFIX):Entry:007:PhotonEnergyRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[7].neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:007:Rate_RBV
      - longin
      - $(SYMBOL).epicsDataPool[7].nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Entry:007:Transmission_RBV
      - ai
      - $(SYMBOL).epicsDataPool[7].nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Entry:007:Valid_RBV
      - bi
      - $(SYMBOL).epicsDataPool[7].xValid
      - | io: input


    * - $(PREFIX):Entry:007:Veto_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[7].aVetoDevices
      - | io: input


    * - $(PREFIX):Entry:008:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Entry:008:Device_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[8].sDevName
      - | io: input


    * - $(PREFIX):Entry:008:ID_RBV
      - longin
      - $(SYMBOL).epicsDataPool[8].nId
      - | io: input


    * - $(PREFIX):Entry:008:Live_RBV
      - bi
      - $(SYMBOL).epicsDataPool[8].LiveInTable
      - | io: input


    * - $(PREFIX):Entry:008:PhotonEnergyRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[8].neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:008:Rate_RBV
      - longin
      - $(SYMBOL).epicsDataPool[8].nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Entry:008:Transmission_RBV
      - ai
      - $(SYMBOL).epicsDataPool[8].nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Entry:008:Valid_RBV
      - bi
      - $(SYMBOL).epicsDataPool[8].xValid
      - | io: input


    * - $(PREFIX):Entry:008:Veto_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[8].aVetoDevices
      - | io: input


    * - $(PREFIX):Entry:009:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Entry:009:Device_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[9].sDevName
      - | io: input


    * - $(PREFIX):Entry:009:ID_RBV
      - longin
      - $(SYMBOL).epicsDataPool[9].nId
      - | io: input


    * - $(PREFIX):Entry:009:Live_RBV
      - bi
      - $(SYMBOL).epicsDataPool[9].LiveInTable
      - | io: input


    * - $(PREFIX):Entry:009:PhotonEnergyRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[9].neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:009:Rate_RBV
      - longin
      - $(SYMBOL).epicsDataPool[9].nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Entry:009:Transmission_RBV
      - ai
      - $(SYMBOL).epicsDataPool[9].nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Entry:009:Valid_RBV
      - bi
      - $(SYMBOL).epicsDataPool[9].xValid
      - | io: input


    * - $(PREFIX):Entry:009:Veto_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[9].aVetoDevices
      - | io: input


    * - $(PREFIX):Entry:010:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Entry:010:Device_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[10].sDevName
      - | io: input


    * - $(PREFIX):Entry:010:ID_RBV
      - longin
      - $(SYMBOL).epicsDataPool[10].nId
      - | io: input


    * - $(PREFIX):Entry:010:Live_RBV
      - bi
      - $(SYMBOL).epicsDataPool[10].LiveInTable
      - | io: input


    * - $(PREFIX):Entry:010:PhotonEnergyRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[10].neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:010:Rate_RBV
      - longin
      - $(SYMBOL).epicsDataPool[10].nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Entry:010:Transmission_RBV
      - ai
      - $(SYMBOL).epicsDataPool[10].nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Entry:010:Valid_RBV
      - bi
      - $(SYMBOL).epicsDataPool[10].xValid
      - | io: input


    * - $(PREFIX):Entry:010:Veto_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[10].aVetoDevices
      - | io: input


    * - $(PREFIX):Entry:011:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Entry:011:Device_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[11].sDevName
      - | io: input


    * - $(PREFIX):Entry:011:ID_RBV
      - longin
      - $(SYMBOL).epicsDataPool[11].nId
      - | io: input


    * - $(PREFIX):Entry:011:Live_RBV
      - bi
      - $(SYMBOL).epicsDataPool[11].LiveInTable
      - | io: input


    * - $(PREFIX):Entry:011:PhotonEnergyRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[11].neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:011:Rate_RBV
      - longin
      - $(SYMBOL).epicsDataPool[11].nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Entry:011:Transmission_RBV
      - ai
      - $(SYMBOL).epicsDataPool[11].nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Entry:011:Valid_RBV
      - bi
      - $(SYMBOL).epicsDataPool[11].xValid
      - | io: input


    * - $(PREFIX):Entry:011:Veto_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[11].aVetoDevices
      - | io: input


    * - $(PREFIX):Entry:012:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Entry:012:Device_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[12].sDevName
      - | io: input


    * - $(PREFIX):Entry:012:ID_RBV
      - longin
      - $(SYMBOL).epicsDataPool[12].nId
      - | io: input


    * - $(PREFIX):Entry:012:Live_RBV
      - bi
      - $(SYMBOL).epicsDataPool[12].LiveInTable
      - | io: input


    * - $(PREFIX):Entry:012:PhotonEnergyRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[12].neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:012:Rate_RBV
      - longin
      - $(SYMBOL).epicsDataPool[12].nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Entry:012:Transmission_RBV
      - ai
      - $(SYMBOL).epicsDataPool[12].nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Entry:012:Valid_RBV
      - bi
      - $(SYMBOL).epicsDataPool[12].xValid
      - | io: input


    * - $(PREFIX):Entry:012:Veto_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[12].aVetoDevices
      - | io: input


    * - $(PREFIX):Entry:013:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Entry:013:Device_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[13].sDevName
      - | io: input


    * - $(PREFIX):Entry:013:ID_RBV
      - longin
      - $(SYMBOL).epicsDataPool[13].nId
      - | io: input


    * - $(PREFIX):Entry:013:Live_RBV
      - bi
      - $(SYMBOL).epicsDataPool[13].LiveInTable
      - | io: input


    * - $(PREFIX):Entry:013:PhotonEnergyRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[13].neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:013:Rate_RBV
      - longin
      - $(SYMBOL).epicsDataPool[13].nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Entry:013:Transmission_RBV
      - ai
      - $(SYMBOL).epicsDataPool[13].nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Entry:013:Valid_RBV
      - bi
      - $(SYMBOL).epicsDataPool[13].xValid
      - | io: input


    * - $(PREFIX):Entry:013:Veto_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[13].aVetoDevices
      - | io: input


    * - $(PREFIX):Entry:014:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Entry:014:Device_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[14].sDevName
      - | io: input


    * - $(PREFIX):Entry:014:ID_RBV
      - longin
      - $(SYMBOL).epicsDataPool[14].nId
      - | io: input


    * - $(PREFIX):Entry:014:Live_RBV
      - bi
      - $(SYMBOL).epicsDataPool[14].LiveInTable
      - | io: input


    * - $(PREFIX):Entry:014:PhotonEnergyRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[14].neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:014:Rate_RBV
      - longin
      - $(SYMBOL).epicsDataPool[14].nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Entry:014:Transmission_RBV
      - ai
      - $(SYMBOL).epicsDataPool[14].nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Entry:014:Valid_RBV
      - bi
      - $(SYMBOL).epicsDataPool[14].xValid
      - | io: input


    * - $(PREFIX):Entry:014:Veto_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[14].aVetoDevices
      - | io: input


    * - $(PREFIX):Entry:015:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Entry:015:Device_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[15].sDevName
      - | io: input


    * - $(PREFIX):Entry:015:ID_RBV
      - longin
      - $(SYMBOL).epicsDataPool[15].nId
      - | io: input


    * - $(PREFIX):Entry:015:Live_RBV
      - bi
      - $(SYMBOL).epicsDataPool[15].LiveInTable
      - | io: input


    * - $(PREFIX):Entry:015:PhotonEnergyRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[15].neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:015:Rate_RBV
      - longin
      - $(SYMBOL).epicsDataPool[15].nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Entry:015:Transmission_RBV
      - ai
      - $(SYMBOL).epicsDataPool[15].nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Entry:015:Valid_RBV
      - bi
      - $(SYMBOL).epicsDataPool[15].xValid
      - | io: input


    * - $(PREFIX):Entry:015:Veto_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[15].aVetoDevices
      - | io: input


    * - $(PREFIX):Entry:016:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Entry:016:Device_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[16].sDevName
      - | io: input


    * - $(PREFIX):Entry:016:ID_RBV
      - longin
      - $(SYMBOL).epicsDataPool[16].nId
      - | io: input


    * - $(PREFIX):Entry:016:Live_RBV
      - bi
      - $(SYMBOL).epicsDataPool[16].LiveInTable
      - | io: input


    * - $(PREFIX):Entry:016:PhotonEnergyRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[16].neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:016:Rate_RBV
      - longin
      - $(SYMBOL).epicsDataPool[16].nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Entry:016:Transmission_RBV
      - ai
      - $(SYMBOL).epicsDataPool[16].nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Entry:016:Valid_RBV
      - bi
      - $(SYMBOL).epicsDataPool[16].xValid
      - | io: input


    * - $(PREFIX):Entry:016:Veto_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[16].aVetoDevices
      - | io: input


    * - $(PREFIX):Entry:017:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Entry:017:Device_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[17].sDevName
      - | io: input


    * - $(PREFIX):Entry:017:ID_RBV
      - longin
      - $(SYMBOL).epicsDataPool[17].nId
      - | io: input


    * - $(PREFIX):Entry:017:Live_RBV
      - bi
      - $(SYMBOL).epicsDataPool[17].LiveInTable
      - | io: input


    * - $(PREFIX):Entry:017:PhotonEnergyRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[17].neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:017:Rate_RBV
      - longin
      - $(SYMBOL).epicsDataPool[17].nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Entry:017:Transmission_RBV
      - ai
      - $(SYMBOL).epicsDataPool[17].nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Entry:017:Valid_RBV
      - bi
      - $(SYMBOL).epicsDataPool[17].xValid
      - | io: input


    * - $(PREFIX):Entry:017:Veto_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[17].aVetoDevices
      - | io: input


    * - $(PREFIX):Entry:018:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Entry:018:Device_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[18].sDevName
      - | io: input


    * - $(PREFIX):Entry:018:ID_RBV
      - longin
      - $(SYMBOL).epicsDataPool[18].nId
      - | io: input


    * - $(PREFIX):Entry:018:Live_RBV
      - bi
      - $(SYMBOL).epicsDataPool[18].LiveInTable
      - | io: input


    * - $(PREFIX):Entry:018:PhotonEnergyRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[18].neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:018:Rate_RBV
      - longin
      - $(SYMBOL).epicsDataPool[18].nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Entry:018:Transmission_RBV
      - ai
      - $(SYMBOL).epicsDataPool[18].nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Entry:018:Valid_RBV
      - bi
      - $(SYMBOL).epicsDataPool[18].xValid
      - | io: input


    * - $(PREFIX):Entry:018:Veto_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[18].aVetoDevices
      - | io: input


    * - $(PREFIX):Entry:019:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Entry:019:Device_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[19].sDevName
      - | io: input


    * - $(PREFIX):Entry:019:ID_RBV
      - longin
      - $(SYMBOL).epicsDataPool[19].nId
      - | io: input


    * - $(PREFIX):Entry:019:Live_RBV
      - bi
      - $(SYMBOL).epicsDataPool[19].LiveInTable
      - | io: input


    * - $(PREFIX):Entry:019:PhotonEnergyRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[19].neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:019:Rate_RBV
      - longin
      - $(SYMBOL).epicsDataPool[19].nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Entry:019:Transmission_RBV
      - ai
      - $(SYMBOL).epicsDataPool[19].nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Entry:019:Valid_RBV
      - bi
      - $(SYMBOL).epicsDataPool[19].xValid
      - | io: input


    * - $(PREFIX):Entry:019:Veto_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[19].aVetoDevices
      - | io: input


    * - $(PREFIX):Entry:020:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Entry:020:Device_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[20].sDevName
      - | io: input


    * - $(PREFIX):Entry:020:ID_RBV
      - longin
      - $(SYMBOL).epicsDataPool[20].nId
      - | io: input


    * - $(PREFIX):Entry:020:Live_RBV
      - bi
      - $(SYMBOL).epicsDataPool[20].LiveInTable
      - | io: input


    * - $(PREFIX):Entry:020:PhotonEnergyRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[20].neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:020:Rate_RBV
      - longin
      - $(SYMBOL).epicsDataPool[20].nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Entry:020:Transmission_RBV
      - ai
      - $(SYMBOL).epicsDataPool[20].nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Entry:020:Valid_RBV
      - bi
      - $(SYMBOL).epicsDataPool[20].xValid
      - | io: input


    * - $(PREFIX):Entry:020:Veto_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[20].aVetoDevices
      - | io: input


    * - $(PREFIX):Entry:021:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Entry:021:Device_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[21].sDevName
      - | io: input


    * - $(PREFIX):Entry:021:ID_RBV
      - longin
      - $(SYMBOL).epicsDataPool[21].nId
      - | io: input


    * - $(PREFIX):Entry:021:Live_RBV
      - bi
      - $(SYMBOL).epicsDataPool[21].LiveInTable
      - | io: input


    * - $(PREFIX):Entry:021:PhotonEnergyRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[21].neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:021:Rate_RBV
      - longin
      - $(SYMBOL).epicsDataPool[21].nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Entry:021:Transmission_RBV
      - ai
      - $(SYMBOL).epicsDataPool[21].nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Entry:021:Valid_RBV
      - bi
      - $(SYMBOL).epicsDataPool[21].xValid
      - | io: input


    * - $(PREFIX):Entry:021:Veto_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[21].aVetoDevices
      - | io: input


    * - $(PREFIX):Entry:022:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Entry:022:Device_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[22].sDevName
      - | io: input


    * - $(PREFIX):Entry:022:ID_RBV
      - longin
      - $(SYMBOL).epicsDataPool[22].nId
      - | io: input


    * - $(PREFIX):Entry:022:Live_RBV
      - bi
      - $(SYMBOL).epicsDataPool[22].LiveInTable
      - | io: input


    * - $(PREFIX):Entry:022:PhotonEnergyRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[22].neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:022:Rate_RBV
      - longin
      - $(SYMBOL).epicsDataPool[22].nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Entry:022:Transmission_RBV
      - ai
      - $(SYMBOL).epicsDataPool[22].nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Entry:022:Valid_RBV
      - bi
      - $(SYMBOL).epicsDataPool[22].xValid
      - | io: input


    * - $(PREFIX):Entry:022:Veto_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[22].aVetoDevices
      - | io: input


    * - $(PREFIX):Entry:023:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Entry:023:Device_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[23].sDevName
      - | io: input


    * - $(PREFIX):Entry:023:ID_RBV
      - longin
      - $(SYMBOL).epicsDataPool[23].nId
      - | io: input


    * - $(PREFIX):Entry:023:Live_RBV
      - bi
      - $(SYMBOL).epicsDataPool[23].LiveInTable
      - | io: input


    * - $(PREFIX):Entry:023:PhotonEnergyRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[23].neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:023:Rate_RBV
      - longin
      - $(SYMBOL).epicsDataPool[23].nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Entry:023:Transmission_RBV
      - ai
      - $(SYMBOL).epicsDataPool[23].nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Entry:023:Valid_RBV
      - bi
      - $(SYMBOL).epicsDataPool[23].xValid
      - | io: input


    * - $(PREFIX):Entry:023:Veto_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[23].aVetoDevices
      - | io: input


    * - $(PREFIX):Entry:024:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Entry:024:Device_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[24].sDevName
      - | io: input


    * - $(PREFIX):Entry:024:ID_RBV
      - longin
      - $(SYMBOL).epicsDataPool[24].nId
      - | io: input


    * - $(PREFIX):Entry:024:Live_RBV
      - bi
      - $(SYMBOL).epicsDataPool[24].LiveInTable
      - | io: input


    * - $(PREFIX):Entry:024:PhotonEnergyRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[24].neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:024:Rate_RBV
      - longin
      - $(SYMBOL).epicsDataPool[24].nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Entry:024:Transmission_RBV
      - ai
      - $(SYMBOL).epicsDataPool[24].nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Entry:024:Valid_RBV
      - bi
      - $(SYMBOL).epicsDataPool[24].xValid
      - | io: input


    * - $(PREFIX):Entry:024:Veto_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[24].aVetoDevices
      - | io: input


    * - $(PREFIX):Entry:025:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Entry:025:Device_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[25].sDevName
      - | io: input


    * - $(PREFIX):Entry:025:ID_RBV
      - longin
      - $(SYMBOL).epicsDataPool[25].nId
      - | io: input


    * - $(PREFIX):Entry:025:Live_RBV
      - bi
      - $(SYMBOL).epicsDataPool[25].LiveInTable
      - | io: input


    * - $(PREFIX):Entry:025:PhotonEnergyRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[25].neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:025:Rate_RBV
      - longin
      - $(SYMBOL).epicsDataPool[25].nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Entry:025:Transmission_RBV
      - ai
      - $(SYMBOL).epicsDataPool[25].nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Entry:025:Valid_RBV
      - bi
      - $(SYMBOL).epicsDataPool[25].xValid
      - | io: input


    * - $(PREFIX):Entry:025:Veto_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[25].aVetoDevices
      - | io: input


    * - $(PREFIX):Entry:026:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Entry:026:Device_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[26].sDevName
      - | io: input


    * - $(PREFIX):Entry:026:ID_RBV
      - longin
      - $(SYMBOL).epicsDataPool[26].nId
      - | io: input


    * - $(PREFIX):Entry:026:Live_RBV
      - bi
      - $(SYMBOL).epicsDataPool[26].LiveInTable
      - | io: input


    * - $(PREFIX):Entry:026:PhotonEnergyRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[26].neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:026:Rate_RBV
      - longin
      - $(SYMBOL).epicsDataPool[26].nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Entry:026:Transmission_RBV
      - ai
      - $(SYMBOL).epicsDataPool[26].nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Entry:026:Valid_RBV
      - bi
      - $(SYMBOL).epicsDataPool[26].xValid
      - | io: input


    * - $(PREFIX):Entry:026:Veto_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[26].aVetoDevices
      - | io: input


    * - $(PREFIX):Entry:027:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Entry:027:Device_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[27].sDevName
      - | io: input


    * - $(PREFIX):Entry:027:ID_RBV
      - longin
      - $(SYMBOL).epicsDataPool[27].nId
      - | io: input


    * - $(PREFIX):Entry:027:Live_RBV
      - bi
      - $(SYMBOL).epicsDataPool[27].LiveInTable
      - | io: input


    * - $(PREFIX):Entry:027:PhotonEnergyRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[27].neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:027:Rate_RBV
      - longin
      - $(SYMBOL).epicsDataPool[27].nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Entry:027:Transmission_RBV
      - ai
      - $(SYMBOL).epicsDataPool[27].nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Entry:027:Valid_RBV
      - bi
      - $(SYMBOL).epicsDataPool[27].xValid
      - | io: input


    * - $(PREFIX):Entry:027:Veto_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[27].aVetoDevices
      - | io: input


    * - $(PREFIX):Entry:028:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Entry:028:Device_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[28].sDevName
      - | io: input


    * - $(PREFIX):Entry:028:ID_RBV
      - longin
      - $(SYMBOL).epicsDataPool[28].nId
      - | io: input


    * - $(PREFIX):Entry:028:Live_RBV
      - bi
      - $(SYMBOL).epicsDataPool[28].LiveInTable
      - | io: input


    * - $(PREFIX):Entry:028:PhotonEnergyRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[28].neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:028:Rate_RBV
      - longin
      - $(SYMBOL).epicsDataPool[28].nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Entry:028:Transmission_RBV
      - ai
      - $(SYMBOL).epicsDataPool[28].nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Entry:028:Valid_RBV
      - bi
      - $(SYMBOL).epicsDataPool[28].xValid
      - | io: input


    * - $(PREFIX):Entry:028:Veto_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[28].aVetoDevices
      - | io: input


    * - $(PREFIX):Entry:029:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Entry:029:Device_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[29].sDevName
      - | io: input


    * - $(PREFIX):Entry:029:ID_RBV
      - longin
      - $(SYMBOL).epicsDataPool[29].nId
      - | io: input


    * - $(PREFIX):Entry:029:Live_RBV
      - bi
      - $(SYMBOL).epicsDataPool[29].LiveInTable
      - | io: input


    * - $(PREFIX):Entry:029:PhotonEnergyRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[29].neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:029:Rate_RBV
      - longin
      - $(SYMBOL).epicsDataPool[29].nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Entry:029:Transmission_RBV
      - ai
      - $(SYMBOL).epicsDataPool[29].nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Entry:029:Valid_RBV
      - bi
      - $(SYMBOL).epicsDataPool[29].xValid
      - | io: input


    * - $(PREFIX):Entry:029:Veto_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[29].aVetoDevices
      - | io: input


    * - $(PREFIX):Entry:030:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Entry:030:Device_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[30].sDevName
      - | io: input


    * - $(PREFIX):Entry:030:ID_RBV
      - longin
      - $(SYMBOL).epicsDataPool[30].nId
      - | io: input


    * - $(PREFIX):Entry:030:Live_RBV
      - bi
      - $(SYMBOL).epicsDataPool[30].LiveInTable
      - | io: input


    * - $(PREFIX):Entry:030:PhotonEnergyRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[30].neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:030:Rate_RBV
      - longin
      - $(SYMBOL).epicsDataPool[30].nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Entry:030:Transmission_RBV
      - ai
      - $(SYMBOL).epicsDataPool[30].nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Entry:030:Valid_RBV
      - bi
      - $(SYMBOL).epicsDataPool[30].xValid
      - | io: input


    * - $(PREFIX):Entry:030:Veto_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[30].aVetoDevices
      - | io: input


    * - $(PREFIX):Entry:031:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Entry:031:Device_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[31].sDevName
      - | io: input


    * - $(PREFIX):Entry:031:ID_RBV
      - longin
      - $(SYMBOL).epicsDataPool[31].nId
      - | io: input


    * - $(PREFIX):Entry:031:Live_RBV
      - bi
      - $(SYMBOL).epicsDataPool[31].LiveInTable
      - | io: input


    * - $(PREFIX):Entry:031:PhotonEnergyRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[31].neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:031:Rate_RBV
      - longin
      - $(SYMBOL).epicsDataPool[31].nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Entry:031:Transmission_RBV
      - ai
      - $(SYMBOL).epicsDataPool[31].nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Entry:031:Valid_RBV
      - bi
      - $(SYMBOL).epicsDataPool[31].xValid
      - | io: input


    * - $(PREFIX):Entry:031:Veto_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[31].aVetoDevices
      - | io: input


    * - $(PREFIX):Entry:032:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Entry:032:Device_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[32].sDevName
      - | io: input


    * - $(PREFIX):Entry:032:ID_RBV
      - longin
      - $(SYMBOL).epicsDataPool[32].nId
      - | io: input


    * - $(PREFIX):Entry:032:Live_RBV
      - bi
      - $(SYMBOL).epicsDataPool[32].LiveInTable
      - | io: input


    * - $(PREFIX):Entry:032:PhotonEnergyRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[32].neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:032:Rate_RBV
      - longin
      - $(SYMBOL).epicsDataPool[32].nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Entry:032:Transmission_RBV
      - ai
      - $(SYMBOL).epicsDataPool[32].nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Entry:032:Valid_RBV
      - bi
      - $(SYMBOL).epicsDataPool[32].xValid
      - | io: input


    * - $(PREFIX):Entry:032:Veto_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[32].aVetoDevices
      - | io: input


    * - $(PREFIX):Entry:033:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Entry:033:Device_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[33].sDevName
      - | io: input


    * - $(PREFIX):Entry:033:ID_RBV
      - longin
      - $(SYMBOL).epicsDataPool[33].nId
      - | io: input


    * - $(PREFIX):Entry:033:Live_RBV
      - bi
      - $(SYMBOL).epicsDataPool[33].LiveInTable
      - | io: input


    * - $(PREFIX):Entry:033:PhotonEnergyRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[33].neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:033:Rate_RBV
      - longin
      - $(SYMBOL).epicsDataPool[33].nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Entry:033:Transmission_RBV
      - ai
      - $(SYMBOL).epicsDataPool[33].nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Entry:033:Valid_RBV
      - bi
      - $(SYMBOL).epicsDataPool[33].xValid
      - | io: input


    * - $(PREFIX):Entry:033:Veto_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[33].aVetoDevices
      - | io: input


    * - $(PREFIX):Entry:034:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Entry:034:Device_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[34].sDevName
      - | io: input


    * - $(PREFIX):Entry:034:ID_RBV
      - longin
      - $(SYMBOL).epicsDataPool[34].nId
      - | io: input


    * - $(PREFIX):Entry:034:Live_RBV
      - bi
      - $(SYMBOL).epicsDataPool[34].LiveInTable
      - | io: input


    * - $(PREFIX):Entry:034:PhotonEnergyRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[34].neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:034:Rate_RBV
      - longin
      - $(SYMBOL).epicsDataPool[34].nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Entry:034:Transmission_RBV
      - ai
      - $(SYMBOL).epicsDataPool[34].nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Entry:034:Valid_RBV
      - bi
      - $(SYMBOL).epicsDataPool[34].xValid
      - | io: input


    * - $(PREFIX):Entry:034:Veto_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[34].aVetoDevices
      - | io: input


    * - $(PREFIX):Entry:035:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Entry:035:Device_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[35].sDevName
      - | io: input


    * - $(PREFIX):Entry:035:ID_RBV
      - longin
      - $(SYMBOL).epicsDataPool[35].nId
      - | io: input


    * - $(PREFIX):Entry:035:Live_RBV
      - bi
      - $(SYMBOL).epicsDataPool[35].LiveInTable
      - | io: input


    * - $(PREFIX):Entry:035:PhotonEnergyRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[35].neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:035:Rate_RBV
      - longin
      - $(SYMBOL).epicsDataPool[35].nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Entry:035:Transmission_RBV
      - ai
      - $(SYMBOL).epicsDataPool[35].nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Entry:035:Valid_RBV
      - bi
      - $(SYMBOL).epicsDataPool[35].xValid
      - | io: input


    * - $(PREFIX):Entry:035:Veto_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[35].aVetoDevices
      - | io: input


    * - $(PREFIX):Entry:036:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Entry:036:Device_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[36].sDevName
      - | io: input


    * - $(PREFIX):Entry:036:ID_RBV
      - longin
      - $(SYMBOL).epicsDataPool[36].nId
      - | io: input


    * - $(PREFIX):Entry:036:Live_RBV
      - bi
      - $(SYMBOL).epicsDataPool[36].LiveInTable
      - | io: input


    * - $(PREFIX):Entry:036:PhotonEnergyRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[36].neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:036:Rate_RBV
      - longin
      - $(SYMBOL).epicsDataPool[36].nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Entry:036:Transmission_RBV
      - ai
      - $(SYMBOL).epicsDataPool[36].nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Entry:036:Valid_RBV
      - bi
      - $(SYMBOL).epicsDataPool[36].xValid
      - | io: input


    * - $(PREFIX):Entry:036:Veto_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[36].aVetoDevices
      - | io: input


    * - $(PREFIX):Entry:037:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Entry:037:Device_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[37].sDevName
      - | io: input


    * - $(PREFIX):Entry:037:ID_RBV
      - longin
      - $(SYMBOL).epicsDataPool[37].nId
      - | io: input


    * - $(PREFIX):Entry:037:Live_RBV
      - bi
      - $(SYMBOL).epicsDataPool[37].LiveInTable
      - | io: input


    * - $(PREFIX):Entry:037:PhotonEnergyRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[37].neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:037:Rate_RBV
      - longin
      - $(SYMBOL).epicsDataPool[37].nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Entry:037:Transmission_RBV
      - ai
      - $(SYMBOL).epicsDataPool[37].nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Entry:037:Valid_RBV
      - bi
      - $(SYMBOL).epicsDataPool[37].xValid
      - | io: input


    * - $(PREFIX):Entry:037:Veto_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[37].aVetoDevices
      - | io: input


    * - $(PREFIX):Entry:038:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Entry:038:Device_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[38].sDevName
      - | io: input


    * - $(PREFIX):Entry:038:ID_RBV
      - longin
      - $(SYMBOL).epicsDataPool[38].nId
      - | io: input


    * - $(PREFIX):Entry:038:Live_RBV
      - bi
      - $(SYMBOL).epicsDataPool[38].LiveInTable
      - | io: input


    * - $(PREFIX):Entry:038:PhotonEnergyRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[38].neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:038:Rate_RBV
      - longin
      - $(SYMBOL).epicsDataPool[38].nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Entry:038:Transmission_RBV
      - ai
      - $(SYMBOL).epicsDataPool[38].nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Entry:038:Valid_RBV
      - bi
      - $(SYMBOL).epicsDataPool[38].xValid
      - | io: input


    * - $(PREFIX):Entry:038:Veto_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[38].aVetoDevices
      - | io: input


    * - $(PREFIX):Entry:039:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Entry:039:Device_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[39].sDevName
      - | io: input


    * - $(PREFIX):Entry:039:ID_RBV
      - longin
      - $(SYMBOL).epicsDataPool[39].nId
      - | io: input


    * - $(PREFIX):Entry:039:Live_RBV
      - bi
      - $(SYMBOL).epicsDataPool[39].LiveInTable
      - | io: input


    * - $(PREFIX):Entry:039:PhotonEnergyRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[39].neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:039:Rate_RBV
      - longin
      - $(SYMBOL).epicsDataPool[39].nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Entry:039:Transmission_RBV
      - ai
      - $(SYMBOL).epicsDataPool[39].nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Entry:039:Valid_RBV
      - bi
      - $(SYMBOL).epicsDataPool[39].xValid
      - | io: input


    * - $(PREFIX):Entry:039:Veto_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[39].aVetoDevices
      - | io: input


    * - $(PREFIX):Entry:040:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Entry:040:Device_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[40].sDevName
      - | io: input


    * - $(PREFIX):Entry:040:ID_RBV
      - longin
      - $(SYMBOL).epicsDataPool[40].nId
      - | io: input


    * - $(PREFIX):Entry:040:Live_RBV
      - bi
      - $(SYMBOL).epicsDataPool[40].LiveInTable
      - | io: input


    * - $(PREFIX):Entry:040:PhotonEnergyRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[40].neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:040:Rate_RBV
      - longin
      - $(SYMBOL).epicsDataPool[40].nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Entry:040:Transmission_RBV
      - ai
      - $(SYMBOL).epicsDataPool[40].nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Entry:040:Valid_RBV
      - bi
      - $(SYMBOL).epicsDataPool[40].xValid
      - | io: input


    * - $(PREFIX):Entry:040:Veto_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[40].aVetoDevices
      - | io: input


    * - $(PREFIX):Entry:041:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Entry:041:Device_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[41].sDevName
      - | io: input


    * - $(PREFIX):Entry:041:ID_RBV
      - longin
      - $(SYMBOL).epicsDataPool[41].nId
      - | io: input


    * - $(PREFIX):Entry:041:Live_RBV
      - bi
      - $(SYMBOL).epicsDataPool[41].LiveInTable
      - | io: input


    * - $(PREFIX):Entry:041:PhotonEnergyRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[41].neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:041:Rate_RBV
      - longin
      - $(SYMBOL).epicsDataPool[41].nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Entry:041:Transmission_RBV
      - ai
      - $(SYMBOL).epicsDataPool[41].nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Entry:041:Valid_RBV
      - bi
      - $(SYMBOL).epicsDataPool[41].xValid
      - | io: input


    * - $(PREFIX):Entry:041:Veto_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[41].aVetoDevices
      - | io: input


    * - $(PREFIX):Entry:042:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Entry:042:Device_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[42].sDevName
      - | io: input


    * - $(PREFIX):Entry:042:ID_RBV
      - longin
      - $(SYMBOL).epicsDataPool[42].nId
      - | io: input


    * - $(PREFIX):Entry:042:Live_RBV
      - bi
      - $(SYMBOL).epicsDataPool[42].LiveInTable
      - | io: input


    * - $(PREFIX):Entry:042:PhotonEnergyRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[42].neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:042:Rate_RBV
      - longin
      - $(SYMBOL).epicsDataPool[42].nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Entry:042:Transmission_RBV
      - ai
      - $(SYMBOL).epicsDataPool[42].nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Entry:042:Valid_RBV
      - bi
      - $(SYMBOL).epicsDataPool[42].xValid
      - | io: input


    * - $(PREFIX):Entry:042:Veto_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[42].aVetoDevices
      - | io: input


    * - $(PREFIX):Entry:043:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Entry:043:Device_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[43].sDevName
      - | io: input


    * - $(PREFIX):Entry:043:ID_RBV
      - longin
      - $(SYMBOL).epicsDataPool[43].nId
      - | io: input


    * - $(PREFIX):Entry:043:Live_RBV
      - bi
      - $(SYMBOL).epicsDataPool[43].LiveInTable
      - | io: input


    * - $(PREFIX):Entry:043:PhotonEnergyRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[43].neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:043:Rate_RBV
      - longin
      - $(SYMBOL).epicsDataPool[43].nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Entry:043:Transmission_RBV
      - ai
      - $(SYMBOL).epicsDataPool[43].nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Entry:043:Valid_RBV
      - bi
      - $(SYMBOL).epicsDataPool[43].xValid
      - | io: input


    * - $(PREFIX):Entry:043:Veto_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[43].aVetoDevices
      - | io: input


    * - $(PREFIX):Entry:044:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Entry:044:Device_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[44].sDevName
      - | io: input


    * - $(PREFIX):Entry:044:ID_RBV
      - longin
      - $(SYMBOL).epicsDataPool[44].nId
      - | io: input


    * - $(PREFIX):Entry:044:Live_RBV
      - bi
      - $(SYMBOL).epicsDataPool[44].LiveInTable
      - | io: input


    * - $(PREFIX):Entry:044:PhotonEnergyRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[44].neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:044:Rate_RBV
      - longin
      - $(SYMBOL).epicsDataPool[44].nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Entry:044:Transmission_RBV
      - ai
      - $(SYMBOL).epicsDataPool[44].nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Entry:044:Valid_RBV
      - bi
      - $(SYMBOL).epicsDataPool[44].xValid
      - | io: input


    * - $(PREFIX):Entry:044:Veto_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[44].aVetoDevices
      - | io: input


    * - $(PREFIX):Entry:045:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Entry:045:Device_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[45].sDevName
      - | io: input


    * - $(PREFIX):Entry:045:ID_RBV
      - longin
      - $(SYMBOL).epicsDataPool[45].nId
      - | io: input


    * - $(PREFIX):Entry:045:Live_RBV
      - bi
      - $(SYMBOL).epicsDataPool[45].LiveInTable
      - | io: input


    * - $(PREFIX):Entry:045:PhotonEnergyRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[45].neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:045:Rate_RBV
      - longin
      - $(SYMBOL).epicsDataPool[45].nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Entry:045:Transmission_RBV
      - ai
      - $(SYMBOL).epicsDataPool[45].nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Entry:045:Valid_RBV
      - bi
      - $(SYMBOL).epicsDataPool[45].xValid
      - | io: input


    * - $(PREFIX):Entry:045:Veto_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[45].aVetoDevices
      - | io: input


    * - $(PREFIX):Entry:046:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Entry:046:Device_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[46].sDevName
      - | io: input


    * - $(PREFIX):Entry:046:ID_RBV
      - longin
      - $(SYMBOL).epicsDataPool[46].nId
      - | io: input


    * - $(PREFIX):Entry:046:Live_RBV
      - bi
      - $(SYMBOL).epicsDataPool[46].LiveInTable
      - | io: input


    * - $(PREFIX):Entry:046:PhotonEnergyRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[46].neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:046:Rate_RBV
      - longin
      - $(SYMBOL).epicsDataPool[46].nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Entry:046:Transmission_RBV
      - ai
      - $(SYMBOL).epicsDataPool[46].nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Entry:046:Valid_RBV
      - bi
      - $(SYMBOL).epicsDataPool[46].xValid
      - | io: input


    * - $(PREFIX):Entry:046:Veto_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[46].aVetoDevices
      - | io: input


    * - $(PREFIX):Entry:047:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Entry:047:Device_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[47].sDevName
      - | io: input


    * - $(PREFIX):Entry:047:ID_RBV
      - longin
      - $(SYMBOL).epicsDataPool[47].nId
      - | io: input


    * - $(PREFIX):Entry:047:Live_RBV
      - bi
      - $(SYMBOL).epicsDataPool[47].LiveInTable
      - | io: input


    * - $(PREFIX):Entry:047:PhotonEnergyRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[47].neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:047:Rate_RBV
      - longin
      - $(SYMBOL).epicsDataPool[47].nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Entry:047:Transmission_RBV
      - ai
      - $(SYMBOL).epicsDataPool[47].nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Entry:047:Valid_RBV
      - bi
      - $(SYMBOL).epicsDataPool[47].xValid
      - | io: input


    * - $(PREFIX):Entry:047:Veto_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[47].aVetoDevices
      - | io: input


    * - $(PREFIX):Entry:048:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Entry:048:Device_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[48].sDevName
      - | io: input


    * - $(PREFIX):Entry:048:ID_RBV
      - longin
      - $(SYMBOL).epicsDataPool[48].nId
      - | io: input


    * - $(PREFIX):Entry:048:Live_RBV
      - bi
      - $(SYMBOL).epicsDataPool[48].LiveInTable
      - | io: input


    * - $(PREFIX):Entry:048:PhotonEnergyRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[48].neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:048:Rate_RBV
      - longin
      - $(SYMBOL).epicsDataPool[48].nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Entry:048:Transmission_RBV
      - ai
      - $(SYMBOL).epicsDataPool[48].nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Entry:048:Valid_RBV
      - bi
      - $(SYMBOL).epicsDataPool[48].xValid
      - | io: input


    * - $(PREFIX):Entry:048:Veto_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[48].aVetoDevices
      - | io: input


    * - $(PREFIX):Entry:049:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Entry:049:Device_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[49].sDevName
      - | io: input


    * - $(PREFIX):Entry:049:ID_RBV
      - longin
      - $(SYMBOL).epicsDataPool[49].nId
      - | io: input


    * - $(PREFIX):Entry:049:Live_RBV
      - bi
      - $(SYMBOL).epicsDataPool[49].LiveInTable
      - | io: input


    * - $(PREFIX):Entry:049:PhotonEnergyRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[49].neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:049:Rate_RBV
      - longin
      - $(SYMBOL).epicsDataPool[49].nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Entry:049:Transmission_RBV
      - ai
      - $(SYMBOL).epicsDataPool[49].nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Entry:049:Valid_RBV
      - bi
      - $(SYMBOL).epicsDataPool[49].xValid
      - | io: input


    * - $(PREFIX):Entry:049:Veto_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[49].aVetoDevices
      - | io: input


    * - $(PREFIX):Entry:050:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Entry:050:Device_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[50].sDevName
      - | io: input


    * - $(PREFIX):Entry:050:ID_RBV
      - longin
      - $(SYMBOL).epicsDataPool[50].nId
      - | io: input


    * - $(PREFIX):Entry:050:Live_RBV
      - bi
      - $(SYMBOL).epicsDataPool[50].LiveInTable
      - | io: input


    * - $(PREFIX):Entry:050:PhotonEnergyRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[50].neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:050:Rate_RBV
      - longin
      - $(SYMBOL).epicsDataPool[50].nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Entry:050:Transmission_RBV
      - ai
      - $(SYMBOL).epicsDataPool[50].nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Entry:050:Valid_RBV
      - bi
      - $(SYMBOL).epicsDataPool[50].xValid
      - | io: input


    * - $(PREFIX):Entry:050:Veto_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[50].aVetoDevices
      - | io: input


  
PMPS.FB_HardwareFFOutput
^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):ClearFault
      - bo
      - Might be overidden by PLC writes
      - | io: output


    * - $(PREFIX):ClearFault_RBV
      - bi
      - Might be overidden by PLC writes
      - | io: output


    * - $(PREFIX):EnableVeto
      - bo
      - $(SYMBOL).i_xVeto
      - | io: output


    * - $(PREFIX):EnableVeto_RBV
      - bi
      - $(SYMBOL).i_xVeto
      - | io: output


    * - $(PREFIX):FaultHWO_RBV
      - bi
      - Hardware Output Status
      - | io: input


    * - $(PREFIX):FF:0001:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[1].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0001:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[1].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0001:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[1].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0001:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[1].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0001:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[1].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0001:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[1].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0001:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[1].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0001:OK_RBV
      - bi
      - $(SYMBOL).astFF[1].OK
      - | io: input


    * - $(PREFIX):FF:0001:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[1].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0001:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[1].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0001:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[1].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0001:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[1].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0001:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[1].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0001:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[1].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0001:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[1].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0001:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[1].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0001:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[1].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0001:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[1].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0001:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[1].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0001:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[1].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0001:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[1].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0001:Reset
      - bo
      - $(SYMBOL).astFF[1].Reset
      - | io: output


    * - $(PREFIX):FF:0001:Reset_RBV
      - bi
      - $(SYMBOL).astFF[1].Reset
      - | io: output


    * - $(PREFIX):FF:0002:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[2].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0002:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[2].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0002:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[2].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0002:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[2].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0002:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[2].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0002:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[2].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0002:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[2].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0002:OK_RBV
      - bi
      - $(SYMBOL).astFF[2].OK
      - | io: input


    * - $(PREFIX):FF:0002:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[2].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0002:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[2].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0002:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[2].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0002:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[2].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0002:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[2].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0002:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[2].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0002:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[2].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0002:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[2].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0002:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[2].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0002:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[2].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0002:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[2].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0002:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[2].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0002:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[2].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0002:Reset
      - bo
      - $(SYMBOL).astFF[2].Reset
      - | io: output


    * - $(PREFIX):FF:0002:Reset_RBV
      - bi
      - $(SYMBOL).astFF[2].Reset
      - | io: output


    * - $(PREFIX):FF:0003:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[3].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0003:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[3].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0003:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[3].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0003:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[3].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0003:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[3].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0003:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[3].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0003:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[3].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0003:OK_RBV
      - bi
      - $(SYMBOL).astFF[3].OK
      - | io: input


    * - $(PREFIX):FF:0003:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[3].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0003:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[3].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0003:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[3].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0003:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[3].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0003:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[3].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0003:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[3].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0003:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[3].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0003:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[3].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0003:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[3].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0003:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[3].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0003:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[3].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0003:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[3].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0003:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[3].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0003:Reset
      - bo
      - $(SYMBOL).astFF[3].Reset
      - | io: output


    * - $(PREFIX):FF:0003:Reset_RBV
      - bi
      - $(SYMBOL).astFF[3].Reset
      - | io: output


    * - $(PREFIX):FF:0004:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[4].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0004:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[4].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0004:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[4].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0004:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[4].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0004:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[4].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0004:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[4].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0004:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[4].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0004:OK_RBV
      - bi
      - $(SYMBOL).astFF[4].OK
      - | io: input


    * - $(PREFIX):FF:0004:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[4].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0004:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[4].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0004:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[4].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0004:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[4].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0004:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[4].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0004:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[4].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0004:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[4].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0004:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[4].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0004:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[4].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0004:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[4].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0004:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[4].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0004:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[4].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0004:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[4].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0004:Reset
      - bo
      - $(SYMBOL).astFF[4].Reset
      - | io: output


    * - $(PREFIX):FF:0004:Reset_RBV
      - bi
      - $(SYMBOL).astFF[4].Reset
      - | io: output


    * - $(PREFIX):FF:0005:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[5].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0005:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[5].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0005:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[5].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0005:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[5].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0005:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[5].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0005:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[5].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0005:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[5].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0005:OK_RBV
      - bi
      - $(SYMBOL).astFF[5].OK
      - | io: input


    * - $(PREFIX):FF:0005:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[5].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0005:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[5].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0005:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[5].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0005:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[5].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0005:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[5].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0005:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[5].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0005:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[5].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0005:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[5].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0005:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[5].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0005:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[5].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0005:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[5].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0005:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[5].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0005:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[5].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0005:Reset
      - bo
      - $(SYMBOL).astFF[5].Reset
      - | io: output


    * - $(PREFIX):FF:0005:Reset_RBV
      - bi
      - $(SYMBOL).astFF[5].Reset
      - | io: output


    * - $(PREFIX):FF:0006:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[6].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0006:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[6].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0006:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[6].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0006:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[6].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0006:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[6].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0006:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[6].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0006:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[6].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0006:OK_RBV
      - bi
      - $(SYMBOL).astFF[6].OK
      - | io: input


    * - $(PREFIX):FF:0006:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[6].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0006:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[6].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0006:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[6].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0006:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[6].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0006:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[6].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0006:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[6].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0006:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[6].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0006:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[6].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0006:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[6].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0006:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[6].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0006:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[6].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0006:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[6].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0006:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[6].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0006:Reset
      - bo
      - $(SYMBOL).astFF[6].Reset
      - | io: output


    * - $(PREFIX):FF:0006:Reset_RBV
      - bi
      - $(SYMBOL).astFF[6].Reset
      - | io: output


    * - $(PREFIX):FF:0007:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[7].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0007:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[7].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0007:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[7].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0007:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[7].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0007:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[7].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0007:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[7].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0007:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[7].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0007:OK_RBV
      - bi
      - $(SYMBOL).astFF[7].OK
      - | io: input


    * - $(PREFIX):FF:0007:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[7].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0007:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[7].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0007:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[7].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0007:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[7].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0007:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[7].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0007:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[7].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0007:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[7].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0007:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[7].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0007:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[7].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0007:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[7].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0007:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[7].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0007:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[7].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0007:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[7].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0007:Reset
      - bo
      - $(SYMBOL).astFF[7].Reset
      - | io: output


    * - $(PREFIX):FF:0007:Reset_RBV
      - bi
      - $(SYMBOL).astFF[7].Reset
      - | io: output


    * - $(PREFIX):FF:0008:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[8].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0008:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[8].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0008:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[8].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0008:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[8].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0008:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[8].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0008:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[8].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0008:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[8].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0008:OK_RBV
      - bi
      - $(SYMBOL).astFF[8].OK
      - | io: input


    * - $(PREFIX):FF:0008:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[8].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0008:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[8].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0008:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[8].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0008:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[8].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0008:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[8].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0008:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[8].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0008:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[8].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0008:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[8].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0008:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[8].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0008:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[8].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0008:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[8].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0008:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[8].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0008:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[8].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0008:Reset
      - bo
      - $(SYMBOL).astFF[8].Reset
      - | io: output


    * - $(PREFIX):FF:0008:Reset_RBV
      - bi
      - $(SYMBOL).astFF[8].Reset
      - | io: output


    * - $(PREFIX):FF:0009:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[9].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0009:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[9].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0009:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[9].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0009:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[9].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0009:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[9].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0009:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[9].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0009:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[9].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0009:OK_RBV
      - bi
      - $(SYMBOL).astFF[9].OK
      - | io: input


    * - $(PREFIX):FF:0009:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[9].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0009:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[9].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0009:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[9].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0009:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[9].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0009:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[9].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0009:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[9].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0009:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[9].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0009:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[9].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0009:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[9].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0009:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[9].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0009:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[9].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0009:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[9].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0009:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[9].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0009:Reset
      - bo
      - $(SYMBOL).astFF[9].Reset
      - | io: output


    * - $(PREFIX):FF:0009:Reset_RBV
      - bi
      - $(SYMBOL).astFF[9].Reset
      - | io: output


    * - $(PREFIX):FF:0010:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[10].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0010:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[10].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0010:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[10].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0010:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[10].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0010:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[10].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0010:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[10].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0010:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[10].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0010:OK_RBV
      - bi
      - $(SYMBOL).astFF[10].OK
      - | io: input


    * - $(PREFIX):FF:0010:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[10].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0010:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[10].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0010:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[10].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0010:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[10].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0010:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[10].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0010:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[10].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0010:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[10].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0010:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[10].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0010:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[10].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0010:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[10].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0010:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[10].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0010:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[10].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0010:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[10].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0010:Reset
      - bo
      - $(SYMBOL).astFF[10].Reset
      - | io: output


    * - $(PREFIX):FF:0010:Reset_RBV
      - bi
      - $(SYMBOL).astFF[10].Reset
      - | io: output


    * - $(PREFIX):FF:0011:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[11].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0011:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[11].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0011:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[11].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0011:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[11].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0011:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[11].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0011:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[11].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0011:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[11].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0011:OK_RBV
      - bi
      - $(SYMBOL).astFF[11].OK
      - | io: input


    * - $(PREFIX):FF:0011:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[11].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0011:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[11].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0011:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[11].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0011:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[11].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0011:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[11].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0011:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[11].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0011:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[11].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0011:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[11].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0011:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[11].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0011:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[11].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0011:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[11].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0011:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[11].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0011:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[11].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0011:Reset
      - bo
      - $(SYMBOL).astFF[11].Reset
      - | io: output


    * - $(PREFIX):FF:0011:Reset_RBV
      - bi
      - $(SYMBOL).astFF[11].Reset
      - | io: output


    * - $(PREFIX):FF:0012:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[12].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0012:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[12].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0012:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[12].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0012:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[12].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0012:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[12].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0012:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[12].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0012:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[12].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0012:OK_RBV
      - bi
      - $(SYMBOL).astFF[12].OK
      - | io: input


    * - $(PREFIX):FF:0012:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[12].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0012:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[12].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0012:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[12].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0012:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[12].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0012:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[12].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0012:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[12].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0012:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[12].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0012:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[12].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0012:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[12].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0012:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[12].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0012:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[12].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0012:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[12].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0012:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[12].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0012:Reset
      - bo
      - $(SYMBOL).astFF[12].Reset
      - | io: output


    * - $(PREFIX):FF:0012:Reset_RBV
      - bi
      - $(SYMBOL).astFF[12].Reset
      - | io: output


    * - $(PREFIX):FF:0013:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[13].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0013:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[13].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0013:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[13].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0013:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[13].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0013:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[13].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0013:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[13].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0013:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[13].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0013:OK_RBV
      - bi
      - $(SYMBOL).astFF[13].OK
      - | io: input


    * - $(PREFIX):FF:0013:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[13].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0013:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[13].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0013:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[13].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0013:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[13].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0013:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[13].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0013:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[13].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0013:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[13].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0013:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[13].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0013:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[13].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0013:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[13].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0013:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[13].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0013:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[13].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0013:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[13].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0013:Reset
      - bo
      - $(SYMBOL).astFF[13].Reset
      - | io: output


    * - $(PREFIX):FF:0013:Reset_RBV
      - bi
      - $(SYMBOL).astFF[13].Reset
      - | io: output


    * - $(PREFIX):FF:0014:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[14].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0014:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[14].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0014:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[14].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0014:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[14].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0014:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[14].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0014:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[14].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0014:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[14].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0014:OK_RBV
      - bi
      - $(SYMBOL).astFF[14].OK
      - | io: input


    * - $(PREFIX):FF:0014:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[14].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0014:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[14].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0014:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[14].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0014:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[14].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0014:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[14].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0014:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[14].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0014:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[14].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0014:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[14].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0014:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[14].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0014:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[14].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0014:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[14].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0014:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[14].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0014:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[14].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0014:Reset
      - bo
      - $(SYMBOL).astFF[14].Reset
      - | io: output


    * - $(PREFIX):FF:0014:Reset_RBV
      - bi
      - $(SYMBOL).astFF[14].Reset
      - | io: output


    * - $(PREFIX):FF:0015:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[15].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0015:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[15].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0015:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[15].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0015:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[15].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0015:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[15].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0015:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[15].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0015:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[15].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0015:OK_RBV
      - bi
      - $(SYMBOL).astFF[15].OK
      - | io: input


    * - $(PREFIX):FF:0015:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[15].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0015:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[15].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0015:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[15].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0015:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[15].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0015:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[15].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0015:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[15].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0015:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[15].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0015:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[15].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0015:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[15].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0015:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[15].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0015:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[15].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0015:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[15].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0015:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[15].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0015:Reset
      - bo
      - $(SYMBOL).astFF[15].Reset
      - | io: output


    * - $(PREFIX):FF:0015:Reset_RBV
      - bi
      - $(SYMBOL).astFF[15].Reset
      - | io: output


    * - $(PREFIX):FF:0016:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[16].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0016:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[16].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0016:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[16].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0016:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[16].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0016:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[16].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0016:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[16].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0016:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[16].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0016:OK_RBV
      - bi
      - $(SYMBOL).astFF[16].OK
      - | io: input


    * - $(PREFIX):FF:0016:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[16].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0016:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[16].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0016:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[16].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0016:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[16].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0016:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[16].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0016:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[16].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0016:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[16].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0016:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[16].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0016:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[16].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0016:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[16].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0016:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[16].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0016:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[16].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0016:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[16].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0016:Reset
      - bo
      - $(SYMBOL).astFF[16].Reset
      - | io: output


    * - $(PREFIX):FF:0016:Reset_RBV
      - bi
      - $(SYMBOL).astFF[16].Reset
      - | io: output


    * - $(PREFIX):FF:0017:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[17].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0017:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[17].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0017:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[17].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0017:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[17].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0017:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[17].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0017:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[17].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0017:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[17].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0017:OK_RBV
      - bi
      - $(SYMBOL).astFF[17].OK
      - | io: input


    * - $(PREFIX):FF:0017:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[17].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0017:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[17].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0017:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[17].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0017:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[17].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0017:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[17].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0017:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[17].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0017:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[17].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0017:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[17].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0017:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[17].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0017:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[17].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0017:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[17].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0017:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[17].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0017:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[17].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0017:Reset
      - bo
      - $(SYMBOL).astFF[17].Reset
      - | io: output


    * - $(PREFIX):FF:0017:Reset_RBV
      - bi
      - $(SYMBOL).astFF[17].Reset
      - | io: output


    * - $(PREFIX):FF:0018:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[18].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0018:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[18].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0018:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[18].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0018:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[18].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0018:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[18].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0018:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[18].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0018:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[18].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0018:OK_RBV
      - bi
      - $(SYMBOL).astFF[18].OK
      - | io: input


    * - $(PREFIX):FF:0018:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[18].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0018:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[18].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0018:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[18].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0018:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[18].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0018:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[18].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0018:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[18].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0018:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[18].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0018:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[18].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0018:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[18].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0018:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[18].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0018:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[18].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0018:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[18].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0018:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[18].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0018:Reset
      - bo
      - $(SYMBOL).astFF[18].Reset
      - | io: output


    * - $(PREFIX):FF:0018:Reset_RBV
      - bi
      - $(SYMBOL).astFF[18].Reset
      - | io: output


    * - $(PREFIX):FF:0019:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[19].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0019:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[19].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0019:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[19].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0019:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[19].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0019:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[19].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0019:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[19].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0019:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[19].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0019:OK_RBV
      - bi
      - $(SYMBOL).astFF[19].OK
      - | io: input


    * - $(PREFIX):FF:0019:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[19].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0019:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[19].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0019:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[19].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0019:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[19].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0019:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[19].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0019:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[19].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0019:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[19].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0019:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[19].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0019:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[19].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0019:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[19].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0019:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[19].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0019:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[19].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0019:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[19].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0019:Reset
      - bo
      - $(SYMBOL).astFF[19].Reset
      - | io: output


    * - $(PREFIX):FF:0019:Reset_RBV
      - bi
      - $(SYMBOL).astFF[19].Reset
      - | io: output


    * - $(PREFIX):FF:0020:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[20].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0020:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[20].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0020:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[20].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0020:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[20].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0020:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[20].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0020:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[20].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0020:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[20].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0020:OK_RBV
      - bi
      - $(SYMBOL).astFF[20].OK
      - | io: input


    * - $(PREFIX):FF:0020:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[20].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0020:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[20].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0020:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[20].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0020:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[20].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0020:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[20].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0020:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[20].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0020:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[20].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0020:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[20].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0020:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[20].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0020:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[20].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0020:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[20].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0020:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[20].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0020:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[20].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0020:Reset
      - bo
      - $(SYMBOL).astFF[20].Reset
      - | io: output


    * - $(PREFIX):FF:0020:Reset_RBV
      - bi
      - $(SYMBOL).astFF[20].Reset
      - | io: output


    * - $(PREFIX):FF:0021:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[21].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0021:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[21].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0021:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[21].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0021:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[21].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0021:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[21].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0021:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[21].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0021:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[21].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0021:OK_RBV
      - bi
      - $(SYMBOL).astFF[21].OK
      - | io: input


    * - $(PREFIX):FF:0021:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[21].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0021:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[21].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0021:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[21].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0021:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[21].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0021:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[21].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0021:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[21].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0021:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[21].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0021:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[21].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0021:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[21].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0021:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[21].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0021:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[21].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0021:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[21].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0021:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[21].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0021:Reset
      - bo
      - $(SYMBOL).astFF[21].Reset
      - | io: output


    * - $(PREFIX):FF:0021:Reset_RBV
      - bi
      - $(SYMBOL).astFF[21].Reset
      - | io: output


    * - $(PREFIX):FF:0022:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[22].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0022:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[22].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0022:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[22].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0022:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[22].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0022:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[22].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0022:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[22].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0022:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[22].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0022:OK_RBV
      - bi
      - $(SYMBOL).astFF[22].OK
      - | io: input


    * - $(PREFIX):FF:0022:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[22].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0022:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[22].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0022:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[22].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0022:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[22].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0022:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[22].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0022:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[22].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0022:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[22].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0022:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[22].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0022:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[22].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0022:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[22].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0022:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[22].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0022:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[22].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0022:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[22].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0022:Reset
      - bo
      - $(SYMBOL).astFF[22].Reset
      - | io: output


    * - $(PREFIX):FF:0022:Reset_RBV
      - bi
      - $(SYMBOL).astFF[22].Reset
      - | io: output


    * - $(PREFIX):FF:0023:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[23].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0023:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[23].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0023:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[23].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0023:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[23].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0023:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[23].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0023:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[23].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0023:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[23].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0023:OK_RBV
      - bi
      - $(SYMBOL).astFF[23].OK
      - | io: input


    * - $(PREFIX):FF:0023:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[23].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0023:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[23].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0023:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[23].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0023:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[23].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0023:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[23].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0023:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[23].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0023:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[23].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0023:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[23].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0023:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[23].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0023:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[23].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0023:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[23].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0023:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[23].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0023:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[23].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0023:Reset
      - bo
      - $(SYMBOL).astFF[23].Reset
      - | io: output


    * - $(PREFIX):FF:0023:Reset_RBV
      - bi
      - $(SYMBOL).astFF[23].Reset
      - | io: output


    * - $(PREFIX):FF:0024:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[24].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0024:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[24].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0024:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[24].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0024:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[24].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0024:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[24].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0024:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[24].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0024:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[24].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0024:OK_RBV
      - bi
      - $(SYMBOL).astFF[24].OK
      - | io: input


    * - $(PREFIX):FF:0024:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[24].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0024:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[24].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0024:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[24].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0024:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[24].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0024:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[24].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0024:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[24].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0024:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[24].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0024:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[24].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0024:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[24].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0024:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[24].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0024:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[24].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0024:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[24].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0024:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[24].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0024:Reset
      - bo
      - $(SYMBOL).astFF[24].Reset
      - | io: output


    * - $(PREFIX):FF:0024:Reset_RBV
      - bi
      - $(SYMBOL).astFF[24].Reset
      - | io: output


    * - $(PREFIX):FF:0025:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[25].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0025:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[25].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0025:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[25].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0025:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[25].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0025:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[25].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0025:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[25].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0025:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[25].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0025:OK_RBV
      - bi
      - $(SYMBOL).astFF[25].OK
      - | io: input


    * - $(PREFIX):FF:0025:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[25].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0025:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[25].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0025:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[25].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0025:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[25].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0025:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[25].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0025:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[25].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0025:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[25].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0025:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[25].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0025:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[25].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0025:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[25].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0025:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[25].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0025:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[25].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0025:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[25].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0025:Reset
      - bo
      - $(SYMBOL).astFF[25].Reset
      - | io: output


    * - $(PREFIX):FF:0025:Reset_RBV
      - bi
      - $(SYMBOL).astFF[25].Reset
      - | io: output


    * - $(PREFIX):FF:0026:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[26].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0026:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[26].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0026:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[26].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0026:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[26].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0026:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[26].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0026:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[26].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0026:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[26].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0026:OK_RBV
      - bi
      - $(SYMBOL).astFF[26].OK
      - | io: input


    * - $(PREFIX):FF:0026:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[26].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0026:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[26].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0026:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[26].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0026:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[26].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0026:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[26].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0026:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[26].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0026:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[26].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0026:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[26].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0026:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[26].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0026:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[26].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0026:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[26].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0026:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[26].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0026:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[26].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0026:Reset
      - bo
      - $(SYMBOL).astFF[26].Reset
      - | io: output


    * - $(PREFIX):FF:0026:Reset_RBV
      - bi
      - $(SYMBOL).astFF[26].Reset
      - | io: output


    * - $(PREFIX):FF:0027:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[27].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0027:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[27].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0027:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[27].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0027:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[27].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0027:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[27].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0027:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[27].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0027:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[27].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0027:OK_RBV
      - bi
      - $(SYMBOL).astFF[27].OK
      - | io: input


    * - $(PREFIX):FF:0027:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[27].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0027:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[27].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0027:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[27].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0027:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[27].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0027:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[27].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0027:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[27].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0027:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[27].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0027:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[27].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0027:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[27].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0027:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[27].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0027:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[27].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0027:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[27].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0027:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[27].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0027:Reset
      - bo
      - $(SYMBOL).astFF[27].Reset
      - | io: output


    * - $(PREFIX):FF:0027:Reset_RBV
      - bi
      - $(SYMBOL).astFF[27].Reset
      - | io: output


    * - $(PREFIX):FF:0028:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[28].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0028:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[28].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0028:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[28].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0028:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[28].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0028:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[28].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0028:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[28].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0028:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[28].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0028:OK_RBV
      - bi
      - $(SYMBOL).astFF[28].OK
      - | io: input


    * - $(PREFIX):FF:0028:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[28].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0028:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[28].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0028:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[28].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0028:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[28].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0028:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[28].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0028:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[28].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0028:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[28].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0028:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[28].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0028:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[28].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0028:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[28].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0028:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[28].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0028:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[28].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0028:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[28].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0028:Reset
      - bo
      - $(SYMBOL).astFF[28].Reset
      - | io: output


    * - $(PREFIX):FF:0028:Reset_RBV
      - bi
      - $(SYMBOL).astFF[28].Reset
      - | io: output


    * - $(PREFIX):FF:0029:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[29].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0029:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[29].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0029:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[29].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0029:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[29].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0029:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[29].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0029:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[29].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0029:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[29].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0029:OK_RBV
      - bi
      - $(SYMBOL).astFF[29].OK
      - | io: input


    * - $(PREFIX):FF:0029:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[29].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0029:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[29].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0029:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[29].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0029:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[29].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0029:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[29].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0029:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[29].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0029:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[29].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0029:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[29].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0029:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[29].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0029:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[29].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0029:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[29].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0029:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[29].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0029:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[29].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0029:Reset
      - bo
      - $(SYMBOL).astFF[29].Reset
      - | io: output


    * - $(PREFIX):FF:0029:Reset_RBV
      - bi
      - $(SYMBOL).astFF[29].Reset
      - | io: output


    * - $(PREFIX):FF:0030:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[30].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0030:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[30].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0030:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[30].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0030:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[30].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0030:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[30].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0030:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[30].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0030:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[30].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0030:OK_RBV
      - bi
      - $(SYMBOL).astFF[30].OK
      - | io: input


    * - $(PREFIX):FF:0030:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[30].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0030:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[30].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0030:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[30].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0030:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[30].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0030:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[30].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0030:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[30].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0030:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[30].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0030:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[30].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0030:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[30].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0030:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[30].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0030:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[30].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0030:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[30].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0030:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[30].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0030:Reset
      - bo
      - $(SYMBOL).astFF[30].Reset
      - | io: output


    * - $(PREFIX):FF:0030:Reset_RBV
      - bi
      - $(SYMBOL).astFF[30].Reset
      - | io: output


    * - $(PREFIX):FF:0031:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[31].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0031:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[31].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0031:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[31].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0031:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[31].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0031:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[31].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0031:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[31].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0031:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[31].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0031:OK_RBV
      - bi
      - $(SYMBOL).astFF[31].OK
      - | io: input


    * - $(PREFIX):FF:0031:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[31].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0031:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[31].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0031:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[31].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0031:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[31].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0031:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[31].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0031:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[31].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0031:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[31].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0031:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[31].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0031:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[31].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0031:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[31].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0031:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[31].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0031:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[31].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0031:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[31].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0031:Reset
      - bo
      - $(SYMBOL).astFF[31].Reset
      - | io: output


    * - $(PREFIX):FF:0031:Reset_RBV
      - bi
      - $(SYMBOL).astFF[31].Reset
      - | io: output


    * - $(PREFIX):FF:0032:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[32].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0032:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[32].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0032:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[32].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0032:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[32].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0032:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[32].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0032:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[32].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0032:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[32].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0032:OK_RBV
      - bi
      - $(SYMBOL).astFF[32].OK
      - | io: input


    * - $(PREFIX):FF:0032:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[32].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0032:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[32].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0032:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[32].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0032:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[32].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0032:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[32].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0032:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[32].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0032:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[32].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0032:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[32].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0032:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[32].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0032:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[32].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0032:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[32].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0032:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[32].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0032:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[32].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0032:Reset
      - bo
      - $(SYMBOL).astFF[32].Reset
      - | io: output


    * - $(PREFIX):FF:0032:Reset_RBV
      - bi
      - $(SYMBOL).astFF[32].Reset
      - | io: output


    * - $(PREFIX):FF:0033:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[33].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0033:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[33].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0033:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[33].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0033:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[33].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0033:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[33].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0033:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[33].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0033:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[33].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0033:OK_RBV
      - bi
      - $(SYMBOL).astFF[33].OK
      - | io: input


    * - $(PREFIX):FF:0033:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[33].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0033:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[33].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0033:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[33].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0033:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[33].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0033:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[33].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0033:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[33].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0033:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[33].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0033:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[33].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0033:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[33].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0033:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[33].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0033:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[33].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0033:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[33].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0033:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[33].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0033:Reset
      - bo
      - $(SYMBOL).astFF[33].Reset
      - | io: output


    * - $(PREFIX):FF:0033:Reset_RBV
      - bi
      - $(SYMBOL).astFF[33].Reset
      - | io: output


    * - $(PREFIX):FF:0034:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[34].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0034:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[34].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0034:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[34].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0034:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[34].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0034:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[34].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0034:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[34].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0034:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[34].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0034:OK_RBV
      - bi
      - $(SYMBOL).astFF[34].OK
      - | io: input


    * - $(PREFIX):FF:0034:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[34].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0034:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[34].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0034:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[34].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0034:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[34].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0034:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[34].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0034:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[34].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0034:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[34].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0034:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[34].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0034:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[34].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0034:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[34].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0034:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[34].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0034:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[34].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0034:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[34].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0034:Reset
      - bo
      - $(SYMBOL).astFF[34].Reset
      - | io: output


    * - $(PREFIX):FF:0034:Reset_RBV
      - bi
      - $(SYMBOL).astFF[34].Reset
      - | io: output


    * - $(PREFIX):FF:0035:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[35].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0035:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[35].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0035:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[35].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0035:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[35].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0035:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[35].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0035:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[35].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0035:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[35].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0035:OK_RBV
      - bi
      - $(SYMBOL).astFF[35].OK
      - | io: input


    * - $(PREFIX):FF:0035:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[35].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0035:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[35].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0035:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[35].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0035:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[35].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0035:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[35].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0035:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[35].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0035:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[35].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0035:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[35].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0035:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[35].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0035:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[35].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0035:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[35].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0035:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[35].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0035:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[35].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0035:Reset
      - bo
      - $(SYMBOL).astFF[35].Reset
      - | io: output


    * - $(PREFIX):FF:0035:Reset_RBV
      - bi
      - $(SYMBOL).astFF[35].Reset
      - | io: output


    * - $(PREFIX):FF:0036:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[36].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0036:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[36].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0036:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[36].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0036:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[36].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0036:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[36].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0036:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[36].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0036:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[36].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0036:OK_RBV
      - bi
      - $(SYMBOL).astFF[36].OK
      - | io: input


    * - $(PREFIX):FF:0036:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[36].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0036:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[36].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0036:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[36].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0036:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[36].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0036:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[36].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0036:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[36].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0036:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[36].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0036:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[36].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0036:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[36].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0036:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[36].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0036:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[36].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0036:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[36].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0036:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[36].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0036:Reset
      - bo
      - $(SYMBOL).astFF[36].Reset
      - | io: output


    * - $(PREFIX):FF:0036:Reset_RBV
      - bi
      - $(SYMBOL).astFF[36].Reset
      - | io: output


    * - $(PREFIX):FF:0037:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[37].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0037:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[37].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0037:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[37].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0037:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[37].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0037:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[37].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0037:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[37].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0037:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[37].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0037:OK_RBV
      - bi
      - $(SYMBOL).astFF[37].OK
      - | io: input


    * - $(PREFIX):FF:0037:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[37].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0037:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[37].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0037:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[37].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0037:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[37].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0037:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[37].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0037:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[37].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0037:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[37].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0037:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[37].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0037:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[37].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0037:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[37].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0037:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[37].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0037:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[37].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0037:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[37].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0037:Reset
      - bo
      - $(SYMBOL).astFF[37].Reset
      - | io: output


    * - $(PREFIX):FF:0037:Reset_RBV
      - bi
      - $(SYMBOL).astFF[37].Reset
      - | io: output


    * - $(PREFIX):FF:0038:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[38].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0038:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[38].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0038:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[38].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0038:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[38].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0038:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[38].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0038:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[38].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0038:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[38].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0038:OK_RBV
      - bi
      - $(SYMBOL).astFF[38].OK
      - | io: input


    * - $(PREFIX):FF:0038:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[38].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0038:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[38].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0038:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[38].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0038:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[38].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0038:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[38].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0038:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[38].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0038:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[38].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0038:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[38].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0038:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[38].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0038:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[38].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0038:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[38].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0038:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[38].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0038:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[38].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0038:Reset
      - bo
      - $(SYMBOL).astFF[38].Reset
      - | io: output


    * - $(PREFIX):FF:0038:Reset_RBV
      - bi
      - $(SYMBOL).astFF[38].Reset
      - | io: output


    * - $(PREFIX):FF:0039:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[39].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0039:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[39].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0039:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[39].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0039:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[39].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0039:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[39].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0039:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[39].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0039:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[39].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0039:OK_RBV
      - bi
      - $(SYMBOL).astFF[39].OK
      - | io: input


    * - $(PREFIX):FF:0039:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[39].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0039:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[39].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0039:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[39].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0039:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[39].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0039:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[39].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0039:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[39].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0039:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[39].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0039:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[39].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0039:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[39].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0039:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[39].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0039:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[39].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0039:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[39].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0039:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[39].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0039:Reset
      - bo
      - $(SYMBOL).astFF[39].Reset
      - | io: output


    * - $(PREFIX):FF:0039:Reset_RBV
      - bi
      - $(SYMBOL).astFF[39].Reset
      - | io: output


    * - $(PREFIX):FF:0040:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[40].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0040:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[40].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0040:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[40].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0040:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[40].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0040:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[40].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0040:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[40].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0040:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[40].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0040:OK_RBV
      - bi
      - $(SYMBOL).astFF[40].OK
      - | io: input


    * - $(PREFIX):FF:0040:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[40].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0040:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[40].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0040:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[40].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0040:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[40].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0040:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[40].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0040:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[40].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0040:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[40].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0040:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[40].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0040:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[40].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0040:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[40].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0040:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[40].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0040:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[40].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0040:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[40].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0040:Reset
      - bo
      - $(SYMBOL).astFF[40].Reset
      - | io: output


    * - $(PREFIX):FF:0040:Reset_RBV
      - bi
      - $(SYMBOL).astFF[40].Reset
      - | io: output


    * - $(PREFIX):FF:0041:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[41].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0041:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[41].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0041:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[41].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0041:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[41].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0041:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[41].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0041:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[41].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0041:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[41].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0041:OK_RBV
      - bi
      - $(SYMBOL).astFF[41].OK
      - | io: input


    * - $(PREFIX):FF:0041:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[41].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0041:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[41].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0041:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[41].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0041:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[41].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0041:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[41].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0041:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[41].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0041:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[41].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0041:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[41].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0041:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[41].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0041:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[41].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0041:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[41].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0041:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[41].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0041:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[41].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0041:Reset
      - bo
      - $(SYMBOL).astFF[41].Reset
      - | io: output


    * - $(PREFIX):FF:0041:Reset_RBV
      - bi
      - $(SYMBOL).astFF[41].Reset
      - | io: output


    * - $(PREFIX):FF:0042:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[42].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0042:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[42].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0042:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[42].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0042:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[42].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0042:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[42].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0042:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[42].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0042:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[42].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0042:OK_RBV
      - bi
      - $(SYMBOL).astFF[42].OK
      - | io: input


    * - $(PREFIX):FF:0042:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[42].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0042:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[42].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0042:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[42].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0042:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[42].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0042:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[42].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0042:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[42].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0042:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[42].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0042:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[42].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0042:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[42].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0042:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[42].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0042:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[42].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0042:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[42].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0042:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[42].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0042:Reset
      - bo
      - $(SYMBOL).astFF[42].Reset
      - | io: output


    * - $(PREFIX):FF:0042:Reset_RBV
      - bi
      - $(SYMBOL).astFF[42].Reset
      - | io: output


    * - $(PREFIX):FF:0043:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[43].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0043:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[43].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0043:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[43].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0043:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[43].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0043:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[43].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0043:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[43].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0043:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[43].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0043:OK_RBV
      - bi
      - $(SYMBOL).astFF[43].OK
      - | io: input


    * - $(PREFIX):FF:0043:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[43].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0043:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[43].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0043:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[43].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0043:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[43].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0043:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[43].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0043:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[43].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0043:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[43].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0043:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[43].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0043:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[43].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0043:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[43].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0043:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[43].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0043:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[43].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0043:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[43].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0043:Reset
      - bo
      - $(SYMBOL).astFF[43].Reset
      - | io: output


    * - $(PREFIX):FF:0043:Reset_RBV
      - bi
      - $(SYMBOL).astFF[43].Reset
      - | io: output


    * - $(PREFIX):FF:0044:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[44].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0044:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[44].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0044:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[44].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0044:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[44].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0044:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[44].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0044:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[44].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0044:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[44].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0044:OK_RBV
      - bi
      - $(SYMBOL).astFF[44].OK
      - | io: input


    * - $(PREFIX):FF:0044:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[44].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0044:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[44].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0044:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[44].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0044:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[44].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0044:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[44].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0044:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[44].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0044:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[44].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0044:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[44].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0044:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[44].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0044:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[44].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0044:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[44].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0044:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[44].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0044:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[44].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0044:Reset
      - bo
      - $(SYMBOL).astFF[44].Reset
      - | io: output


    * - $(PREFIX):FF:0044:Reset_RBV
      - bi
      - $(SYMBOL).astFF[44].Reset
      - | io: output


    * - $(PREFIX):FF:0045:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[45].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0045:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[45].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0045:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[45].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0045:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[45].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0045:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[45].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0045:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[45].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0045:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[45].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0045:OK_RBV
      - bi
      - $(SYMBOL).astFF[45].OK
      - | io: input


    * - $(PREFIX):FF:0045:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[45].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0045:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[45].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0045:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[45].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0045:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[45].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0045:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[45].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0045:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[45].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0045:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[45].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0045:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[45].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0045:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[45].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0045:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[45].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0045:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[45].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0045:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[45].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0045:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[45].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0045:Reset
      - bo
      - $(SYMBOL).astFF[45].Reset
      - | io: output


    * - $(PREFIX):FF:0045:Reset_RBV
      - bi
      - $(SYMBOL).astFF[45].Reset
      - | io: output


    * - $(PREFIX):FF:0046:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[46].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0046:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[46].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0046:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[46].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0046:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[46].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0046:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[46].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0046:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[46].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0046:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[46].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0046:OK_RBV
      - bi
      - $(SYMBOL).astFF[46].OK
      - | io: input


    * - $(PREFIX):FF:0046:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[46].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0046:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[46].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0046:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[46].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0046:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[46].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0046:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[46].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0046:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[46].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0046:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[46].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0046:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[46].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0046:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[46].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0046:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[46].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0046:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[46].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0046:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[46].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0046:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[46].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0046:Reset
      - bo
      - $(SYMBOL).astFF[46].Reset
      - | io: output


    * - $(PREFIX):FF:0046:Reset_RBV
      - bi
      - $(SYMBOL).astFF[46].Reset
      - | io: output


    * - $(PREFIX):FF:0047:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[47].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0047:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[47].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0047:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[47].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0047:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[47].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0047:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[47].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0047:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[47].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0047:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[47].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0047:OK_RBV
      - bi
      - $(SYMBOL).astFF[47].OK
      - | io: input


    * - $(PREFIX):FF:0047:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[47].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0047:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[47].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0047:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[47].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0047:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[47].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0047:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[47].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0047:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[47].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0047:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[47].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0047:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[47].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0047:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[47].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0047:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[47].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0047:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[47].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0047:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[47].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0047:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[47].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0047:Reset
      - bo
      - $(SYMBOL).astFF[47].Reset
      - | io: output


    * - $(PREFIX):FF:0047:Reset_RBV
      - bi
      - $(SYMBOL).astFF[47].Reset
      - | io: output


    * - $(PREFIX):FF:0048:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[48].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0048:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[48].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0048:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[48].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0048:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[48].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0048:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[48].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0048:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[48].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0048:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[48].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0048:OK_RBV
      - bi
      - $(SYMBOL).astFF[48].OK
      - | io: input


    * - $(PREFIX):FF:0048:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[48].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0048:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[48].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0048:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[48].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0048:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[48].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0048:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[48].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0048:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[48].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0048:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[48].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0048:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[48].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0048:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[48].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0048:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[48].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0048:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[48].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0048:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[48].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0048:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[48].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0048:Reset
      - bo
      - $(SYMBOL).astFF[48].Reset
      - | io: output


    * - $(PREFIX):FF:0048:Reset_RBV
      - bi
      - $(SYMBOL).astFF[48].Reset
      - | io: output


    * - $(PREFIX):FF:0049:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[49].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0049:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[49].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0049:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[49].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0049:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[49].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0049:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[49].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0049:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[49].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0049:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[49].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0049:OK_RBV
      - bi
      - $(SYMBOL).astFF[49].OK
      - | io: input


    * - $(PREFIX):FF:0049:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[49].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0049:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[49].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0049:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[49].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0049:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[49].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0049:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[49].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0049:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[49].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0049:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[49].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0049:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[49].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0049:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[49].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0049:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[49].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0049:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[49].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0049:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[49].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0049:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[49].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0049:Reset
      - bo
      - $(SYMBOL).astFF[49].Reset
      - | io: output


    * - $(PREFIX):FF:0049:Reset_RBV
      - bi
      - $(SYMBOL).astFF[49].Reset
      - | io: output


    * - $(PREFIX):FF:0050:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[50].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0050:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[50].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0050:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[50].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0050:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[50].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0050:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[50].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0050:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[50].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0050:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[50].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0050:OK_RBV
      - bi
      - $(SYMBOL).astFF[50].OK
      - | io: input


    * - $(PREFIX):FF:0050:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[50].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0050:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[50].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0050:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[50].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0050:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[50].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0050:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[50].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0050:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[50].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0050:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[50].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0050:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[50].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0050:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[50].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0050:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[50].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0050:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[50].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0050:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[50].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0050:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[50].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0050:Reset
      - bo
      - $(SYMBOL).astFF[50].Reset
      - | io: output


    * - $(PREFIX):FF:0050:Reset_RBV
      - bi
      - $(SYMBOL).astFF[50].Reset
      - | io: output


    * - $(PREFIX):FF:0051:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[51].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0051:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[51].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0051:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[51].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0051:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[51].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0051:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[51].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0051:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[51].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0051:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[51].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0051:OK_RBV
      - bi
      - $(SYMBOL).astFF[51].OK
      - | io: input


    * - $(PREFIX):FF:0051:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[51].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0051:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[51].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0051:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[51].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0051:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[51].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0051:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[51].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0051:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[51].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0051:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[51].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0051:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[51].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0051:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[51].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0051:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[51].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0051:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[51].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0051:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[51].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0051:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[51].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0051:Reset
      - bo
      - $(SYMBOL).astFF[51].Reset
      - | io: output


    * - $(PREFIX):FF:0051:Reset_RBV
      - bi
      - $(SYMBOL).astFF[51].Reset
      - | io: output


    * - $(PREFIX):FF:0052:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[52].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0052:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[52].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0052:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[52].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0052:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[52].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0052:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[52].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0052:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[52].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0052:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[52].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0052:OK_RBV
      - bi
      - $(SYMBOL).astFF[52].OK
      - | io: input


    * - $(PREFIX):FF:0052:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[52].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0052:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[52].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0052:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[52].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0052:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[52].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0052:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[52].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0052:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[52].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0052:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[52].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0052:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[52].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0052:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[52].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0052:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[52].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0052:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[52].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0052:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[52].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0052:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[52].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0052:Reset
      - bo
      - $(SYMBOL).astFF[52].Reset
      - | io: output


    * - $(PREFIX):FF:0052:Reset_RBV
      - bi
      - $(SYMBOL).astFF[52].Reset
      - | io: output


    * - $(PREFIX):FF:0053:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[53].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0053:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[53].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0053:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[53].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0053:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[53].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0053:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[53].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0053:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[53].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0053:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[53].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0053:OK_RBV
      - bi
      - $(SYMBOL).astFF[53].OK
      - | io: input


    * - $(PREFIX):FF:0053:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[53].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0053:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[53].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0053:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[53].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0053:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[53].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0053:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[53].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0053:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[53].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0053:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[53].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0053:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[53].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0053:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[53].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0053:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[53].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0053:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[53].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0053:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[53].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0053:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[53].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0053:Reset
      - bo
      - $(SYMBOL).astFF[53].Reset
      - | io: output


    * - $(PREFIX):FF:0053:Reset_RBV
      - bi
      - $(SYMBOL).astFF[53].Reset
      - | io: output


    * - $(PREFIX):FF:0054:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[54].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0054:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[54].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0054:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[54].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0054:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[54].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0054:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[54].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0054:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[54].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0054:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[54].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0054:OK_RBV
      - bi
      - $(SYMBOL).astFF[54].OK
      - | io: input


    * - $(PREFIX):FF:0054:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[54].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0054:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[54].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0054:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[54].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0054:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[54].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0054:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[54].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0054:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[54].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0054:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[54].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0054:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[54].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0054:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[54].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0054:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[54].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0054:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[54].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0054:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[54].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0054:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[54].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0054:Reset
      - bo
      - $(SYMBOL).astFF[54].Reset
      - | io: output


    * - $(PREFIX):FF:0054:Reset_RBV
      - bi
      - $(SYMBOL).astFF[54].Reset
      - | io: output


    * - $(PREFIX):FF:0055:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[55].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0055:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[55].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0055:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[55].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0055:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[55].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0055:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[55].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0055:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[55].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0055:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[55].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0055:OK_RBV
      - bi
      - $(SYMBOL).astFF[55].OK
      - | io: input


    * - $(PREFIX):FF:0055:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[55].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0055:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[55].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0055:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[55].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0055:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[55].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0055:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[55].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0055:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[55].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0055:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[55].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0055:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[55].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0055:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[55].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0055:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[55].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0055:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[55].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0055:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[55].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0055:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[55].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0055:Reset
      - bo
      - $(SYMBOL).astFF[55].Reset
      - | io: output


    * - $(PREFIX):FF:0055:Reset_RBV
      - bi
      - $(SYMBOL).astFF[55].Reset
      - | io: output


    * - $(PREFIX):FF:0056:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[56].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0056:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[56].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0056:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[56].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0056:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[56].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0056:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[56].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0056:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[56].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0056:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[56].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0056:OK_RBV
      - bi
      - $(SYMBOL).astFF[56].OK
      - | io: input


    * - $(PREFIX):FF:0056:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[56].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0056:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[56].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0056:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[56].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0056:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[56].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0056:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[56].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0056:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[56].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0056:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[56].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0056:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[56].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0056:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[56].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0056:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[56].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0056:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[56].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0056:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[56].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0056:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[56].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0056:Reset
      - bo
      - $(SYMBOL).astFF[56].Reset
      - | io: output


    * - $(PREFIX):FF:0056:Reset_RBV
      - bi
      - $(SYMBOL).astFF[56].Reset
      - | io: output


    * - $(PREFIX):FF:0057:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[57].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0057:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[57].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0057:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[57].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0057:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[57].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0057:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[57].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0057:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[57].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0057:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[57].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0057:OK_RBV
      - bi
      - $(SYMBOL).astFF[57].OK
      - | io: input


    * - $(PREFIX):FF:0057:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[57].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0057:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[57].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0057:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[57].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0057:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[57].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0057:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[57].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0057:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[57].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0057:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[57].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0057:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[57].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0057:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[57].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0057:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[57].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0057:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[57].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0057:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[57].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0057:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[57].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0057:Reset
      - bo
      - $(SYMBOL).astFF[57].Reset
      - | io: output


    * - $(PREFIX):FF:0057:Reset_RBV
      - bi
      - $(SYMBOL).astFF[57].Reset
      - | io: output


    * - $(PREFIX):FF:0058:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[58].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0058:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[58].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0058:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[58].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0058:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[58].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0058:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[58].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0058:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[58].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0058:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[58].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0058:OK_RBV
      - bi
      - $(SYMBOL).astFF[58].OK
      - | io: input


    * - $(PREFIX):FF:0058:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[58].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0058:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[58].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0058:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[58].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0058:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[58].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0058:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[58].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0058:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[58].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0058:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[58].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0058:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[58].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0058:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[58].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0058:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[58].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0058:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[58].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0058:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[58].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0058:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[58].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0058:Reset
      - bo
      - $(SYMBOL).astFF[58].Reset
      - | io: output


    * - $(PREFIX):FF:0058:Reset_RBV
      - bi
      - $(SYMBOL).astFF[58].Reset
      - | io: output


    * - $(PREFIX):FF:0059:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[59].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0059:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[59].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0059:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[59].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0059:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[59].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0059:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[59].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0059:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[59].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0059:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[59].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0059:OK_RBV
      - bi
      - $(SYMBOL).astFF[59].OK
      - | io: input


    * - $(PREFIX):FF:0059:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[59].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0059:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[59].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0059:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[59].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0059:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[59].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0059:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[59].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0059:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[59].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0059:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[59].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0059:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[59].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0059:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[59].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0059:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[59].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0059:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[59].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0059:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[59].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0059:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[59].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0059:Reset
      - bo
      - $(SYMBOL).astFF[59].Reset
      - | io: output


    * - $(PREFIX):FF:0059:Reset_RBV
      - bi
      - $(SYMBOL).astFF[59].Reset
      - | io: output


    * - $(PREFIX):FF:0060:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[60].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0060:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[60].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0060:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[60].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0060:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[60].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0060:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[60].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0060:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[60].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0060:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[60].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0060:OK_RBV
      - bi
      - $(SYMBOL).astFF[60].OK
      - | io: input


    * - $(PREFIX):FF:0060:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[60].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0060:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[60].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0060:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[60].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0060:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[60].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0060:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[60].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0060:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[60].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0060:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[60].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0060:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[60].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0060:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[60].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0060:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[60].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0060:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[60].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0060:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[60].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0060:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[60].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0060:Reset
      - bo
      - $(SYMBOL).astFF[60].Reset
      - | io: output


    * - $(PREFIX):FF:0060:Reset_RBV
      - bi
      - $(SYMBOL).astFF[60].Reset
      - | io: output


    * - $(PREFIX):FF:0061:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[61].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0061:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[61].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0061:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[61].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0061:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[61].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0061:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[61].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0061:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[61].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0061:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[61].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0061:OK_RBV
      - bi
      - $(SYMBOL).astFF[61].OK
      - | io: input


    * - $(PREFIX):FF:0061:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[61].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0061:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[61].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0061:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[61].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0061:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[61].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0061:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[61].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0061:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[61].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0061:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[61].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0061:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[61].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0061:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[61].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0061:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[61].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0061:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[61].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0061:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[61].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0061:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[61].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0061:Reset
      - bo
      - $(SYMBOL).astFF[61].Reset
      - | io: output


    * - $(PREFIX):FF:0061:Reset_RBV
      - bi
      - $(SYMBOL).astFF[61].Reset
      - | io: output


    * - $(PREFIX):FF:0062:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[62].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0062:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[62].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0062:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[62].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0062:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[62].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0062:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[62].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0062:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[62].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0062:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[62].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0062:OK_RBV
      - bi
      - $(SYMBOL).astFF[62].OK
      - | io: input


    * - $(PREFIX):FF:0062:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[62].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0062:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[62].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0062:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[62].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0062:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[62].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0062:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[62].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0062:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[62].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0062:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[62].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0062:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[62].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0062:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[62].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0062:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[62].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0062:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[62].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0062:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[62].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0062:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[62].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0062:Reset
      - bo
      - $(SYMBOL).astFF[62].Reset
      - | io: output


    * - $(PREFIX):FF:0062:Reset_RBV
      - bi
      - $(SYMBOL).astFF[62].Reset
      - | io: output


    * - $(PREFIX):FF:0063:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[63].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0063:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[63].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0063:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[63].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0063:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[63].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0063:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[63].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0063:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[63].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0063:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[63].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0063:OK_RBV
      - bi
      - $(SYMBOL).astFF[63].OK
      - | io: input


    * - $(PREFIX):FF:0063:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[63].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0063:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[63].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0063:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[63].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0063:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[63].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0063:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[63].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0063:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[63].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0063:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[63].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0063:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[63].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0063:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[63].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0063:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[63].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0063:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[63].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0063:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[63].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0063:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[63].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0063:Reset
      - bo
      - $(SYMBOL).astFF[63].Reset
      - | io: output


    * - $(PREFIX):FF:0063:Reset_RBV
      - bi
      - $(SYMBOL).astFF[63].Reset
      - | io: output


    * - $(PREFIX):FF:0064:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[64].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0064:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[64].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0064:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[64].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0064:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[64].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0064:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[64].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0064:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[64].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0064:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[64].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0064:OK_RBV
      - bi
      - $(SYMBOL).astFF[64].OK
      - | io: input


    * - $(PREFIX):FF:0064:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[64].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0064:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[64].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0064:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[64].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0064:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[64].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0064:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[64].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0064:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[64].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0064:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[64].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0064:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[64].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0064:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[64].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0064:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[64].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0064:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[64].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0064:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[64].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0064:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[64].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0064:Reset
      - bo
      - $(SYMBOL).astFF[64].Reset
      - | io: output


    * - $(PREFIX):FF:0064:Reset_RBV
      - bi
      - $(SYMBOL).astFF[64].Reset
      - | io: output


    * - $(PREFIX):FF:0065:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[65].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0065:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[65].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0065:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[65].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0065:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[65].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0065:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[65].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0065:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[65].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0065:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[65].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0065:OK_RBV
      - bi
      - $(SYMBOL).astFF[65].OK
      - | io: input


    * - $(PREFIX):FF:0065:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[65].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0065:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[65].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0065:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[65].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0065:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[65].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0065:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[65].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0065:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[65].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0065:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[65].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0065:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[65].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0065:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[65].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0065:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[65].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0065:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[65].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0065:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[65].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0065:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[65].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0065:Reset
      - bo
      - $(SYMBOL).astFF[65].Reset
      - | io: output


    * - $(PREFIX):FF:0065:Reset_RBV
      - bi
      - $(SYMBOL).astFF[65].Reset
      - | io: output


    * - $(PREFIX):FF:0066:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[66].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0066:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[66].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0066:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[66].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0066:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[66].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0066:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[66].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0066:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[66].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0066:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[66].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0066:OK_RBV
      - bi
      - $(SYMBOL).astFF[66].OK
      - | io: input


    * - $(PREFIX):FF:0066:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[66].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0066:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[66].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0066:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[66].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0066:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[66].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0066:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[66].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0066:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[66].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0066:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[66].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0066:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[66].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0066:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[66].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0066:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[66].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0066:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[66].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0066:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[66].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0066:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[66].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0066:Reset
      - bo
      - $(SYMBOL).astFF[66].Reset
      - | io: output


    * - $(PREFIX):FF:0066:Reset_RBV
      - bi
      - $(SYMBOL).astFF[66].Reset
      - | io: output


    * - $(PREFIX):FF:0067:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[67].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0067:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[67].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0067:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[67].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0067:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[67].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0067:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[67].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0067:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[67].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0067:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[67].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0067:OK_RBV
      - bi
      - $(SYMBOL).astFF[67].OK
      - | io: input


    * - $(PREFIX):FF:0067:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[67].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0067:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[67].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0067:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[67].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0067:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[67].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0067:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[67].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0067:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[67].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0067:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[67].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0067:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[67].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0067:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[67].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0067:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[67].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0067:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[67].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0067:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[67].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0067:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[67].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0067:Reset
      - bo
      - $(SYMBOL).astFF[67].Reset
      - | io: output


    * - $(PREFIX):FF:0067:Reset_RBV
      - bi
      - $(SYMBOL).astFF[67].Reset
      - | io: output


    * - $(PREFIX):FF:0068:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[68].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0068:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[68].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0068:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[68].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0068:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[68].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0068:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[68].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0068:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[68].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0068:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[68].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0068:OK_RBV
      - bi
      - $(SYMBOL).astFF[68].OK
      - | io: input


    * - $(PREFIX):FF:0068:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[68].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0068:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[68].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0068:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[68].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0068:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[68].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0068:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[68].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0068:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[68].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0068:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[68].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0068:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[68].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0068:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[68].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0068:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[68].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0068:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[68].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0068:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[68].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0068:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[68].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0068:Reset
      - bo
      - $(SYMBOL).astFF[68].Reset
      - | io: output


    * - $(PREFIX):FF:0068:Reset_RBV
      - bi
      - $(SYMBOL).astFF[68].Reset
      - | io: output


    * - $(PREFIX):FF:0069:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[69].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0069:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[69].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0069:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[69].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0069:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[69].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0069:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[69].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0069:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[69].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0069:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[69].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0069:OK_RBV
      - bi
      - $(SYMBOL).astFF[69].OK
      - | io: input


    * - $(PREFIX):FF:0069:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[69].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0069:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[69].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0069:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[69].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0069:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[69].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0069:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[69].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0069:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[69].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0069:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[69].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0069:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[69].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0069:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[69].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0069:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[69].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0069:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[69].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0069:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[69].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0069:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[69].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0069:Reset
      - bo
      - $(SYMBOL).astFF[69].Reset
      - | io: output


    * - $(PREFIX):FF:0069:Reset_RBV
      - bi
      - $(SYMBOL).astFF[69].Reset
      - | io: output


    * - $(PREFIX):FF:0070:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[70].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0070:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[70].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0070:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[70].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0070:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[70].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0070:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[70].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0070:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[70].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0070:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[70].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0070:OK_RBV
      - bi
      - $(SYMBOL).astFF[70].OK
      - | io: input


    * - $(PREFIX):FF:0070:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[70].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0070:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[70].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0070:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[70].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0070:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[70].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0070:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[70].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0070:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[70].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0070:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[70].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0070:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[70].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0070:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[70].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0070:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[70].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0070:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[70].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0070:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[70].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0070:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[70].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0070:Reset
      - bo
      - $(SYMBOL).astFF[70].Reset
      - | io: output


    * - $(PREFIX):FF:0070:Reset_RBV
      - bi
      - $(SYMBOL).astFF[70].Reset
      - | io: output


    * - $(PREFIX):FF:0071:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[71].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0071:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[71].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0071:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[71].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0071:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[71].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0071:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[71].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0071:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[71].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0071:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[71].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0071:OK_RBV
      - bi
      - $(SYMBOL).astFF[71].OK
      - | io: input


    * - $(PREFIX):FF:0071:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[71].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0071:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[71].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0071:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[71].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0071:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[71].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0071:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[71].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0071:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[71].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0071:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[71].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0071:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[71].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0071:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[71].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0071:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[71].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0071:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[71].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0071:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[71].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0071:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[71].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0071:Reset
      - bo
      - $(SYMBOL).astFF[71].Reset
      - | io: output


    * - $(PREFIX):FF:0071:Reset_RBV
      - bi
      - $(SYMBOL).astFF[71].Reset
      - | io: output


    * - $(PREFIX):FF:0072:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[72].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0072:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[72].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0072:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[72].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0072:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[72].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0072:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[72].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0072:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[72].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0072:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[72].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0072:OK_RBV
      - bi
      - $(SYMBOL).astFF[72].OK
      - | io: input


    * - $(PREFIX):FF:0072:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[72].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0072:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[72].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0072:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[72].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0072:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[72].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0072:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[72].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0072:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[72].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0072:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[72].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0072:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[72].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0072:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[72].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0072:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[72].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0072:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[72].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0072:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[72].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0072:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[72].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0072:Reset
      - bo
      - $(SYMBOL).astFF[72].Reset
      - | io: output


    * - $(PREFIX):FF:0072:Reset_RBV
      - bi
      - $(SYMBOL).astFF[72].Reset
      - | io: output


    * - $(PREFIX):FF:0073:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[73].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0073:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[73].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0073:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[73].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0073:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[73].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0073:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[73].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0073:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[73].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0073:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[73].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0073:OK_RBV
      - bi
      - $(SYMBOL).astFF[73].OK
      - | io: input


    * - $(PREFIX):FF:0073:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[73].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0073:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[73].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0073:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[73].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0073:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[73].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0073:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[73].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0073:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[73].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0073:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[73].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0073:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[73].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0073:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[73].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0073:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[73].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0073:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[73].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0073:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[73].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0073:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[73].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0073:Reset
      - bo
      - $(SYMBOL).astFF[73].Reset
      - | io: output


    * - $(PREFIX):FF:0073:Reset_RBV
      - bi
      - $(SYMBOL).astFF[73].Reset
      - | io: output


    * - $(PREFIX):FF:0074:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[74].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0074:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[74].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0074:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[74].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0074:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[74].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0074:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[74].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0074:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[74].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0074:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[74].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0074:OK_RBV
      - bi
      - $(SYMBOL).astFF[74].OK
      - | io: input


    * - $(PREFIX):FF:0074:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[74].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0074:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[74].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0074:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[74].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0074:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[74].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0074:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[74].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0074:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[74].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0074:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[74].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0074:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[74].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0074:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[74].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0074:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[74].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0074:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[74].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0074:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[74].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0074:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[74].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0074:Reset
      - bo
      - $(SYMBOL).astFF[74].Reset
      - | io: output


    * - $(PREFIX):FF:0074:Reset_RBV
      - bi
      - $(SYMBOL).astFF[74].Reset
      - | io: output


    * - $(PREFIX):FF:0075:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[75].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0075:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[75].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0075:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[75].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0075:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[75].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0075:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[75].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0075:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[75].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0075:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[75].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0075:OK_RBV
      - bi
      - $(SYMBOL).astFF[75].OK
      - | io: input


    * - $(PREFIX):FF:0075:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[75].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0075:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[75].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0075:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[75].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0075:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[75].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0075:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[75].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0075:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[75].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0075:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[75].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0075:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[75].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0075:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[75].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0075:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[75].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0075:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[75].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0075:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[75].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0075:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[75].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0075:Reset
      - bo
      - $(SYMBOL).astFF[75].Reset
      - | io: output


    * - $(PREFIX):FF:0075:Reset_RBV
      - bi
      - $(SYMBOL).astFF[75].Reset
      - | io: output


    * - $(PREFIX):FF:0076:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[76].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0076:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[76].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0076:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[76].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0076:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[76].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0076:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[76].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0076:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[76].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0076:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[76].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0076:OK_RBV
      - bi
      - $(SYMBOL).astFF[76].OK
      - | io: input


    * - $(PREFIX):FF:0076:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[76].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0076:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[76].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0076:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[76].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0076:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[76].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0076:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[76].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0076:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[76].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0076:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[76].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0076:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[76].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0076:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[76].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0076:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[76].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0076:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[76].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0076:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[76].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0076:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[76].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0076:Reset
      - bo
      - $(SYMBOL).astFF[76].Reset
      - | io: output


    * - $(PREFIX):FF:0076:Reset_RBV
      - bi
      - $(SYMBOL).astFF[76].Reset
      - | io: output


    * - $(PREFIX):FF:0077:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[77].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0077:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[77].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0077:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[77].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0077:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[77].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0077:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[77].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0077:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[77].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0077:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[77].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0077:OK_RBV
      - bi
      - $(SYMBOL).astFF[77].OK
      - | io: input


    * - $(PREFIX):FF:0077:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[77].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0077:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[77].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0077:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[77].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0077:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[77].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0077:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[77].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0077:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[77].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0077:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[77].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0077:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[77].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0077:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[77].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0077:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[77].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0077:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[77].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0077:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[77].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0077:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[77].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0077:Reset
      - bo
      - $(SYMBOL).astFF[77].Reset
      - | io: output


    * - $(PREFIX):FF:0077:Reset_RBV
      - bi
      - $(SYMBOL).astFF[77].Reset
      - | io: output


    * - $(PREFIX):FF:0078:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[78].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0078:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[78].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0078:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[78].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0078:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[78].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0078:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[78].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0078:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[78].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0078:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[78].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0078:OK_RBV
      - bi
      - $(SYMBOL).astFF[78].OK
      - | io: input


    * - $(PREFIX):FF:0078:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[78].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0078:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[78].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0078:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[78].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0078:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[78].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0078:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[78].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0078:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[78].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0078:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[78].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0078:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[78].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0078:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[78].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0078:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[78].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0078:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[78].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0078:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[78].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0078:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[78].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0078:Reset
      - bo
      - $(SYMBOL).astFF[78].Reset
      - | io: output


    * - $(PREFIX):FF:0078:Reset_RBV
      - bi
      - $(SYMBOL).astFF[78].Reset
      - | io: output


    * - $(PREFIX):FF:0079:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[79].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0079:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[79].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0079:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[79].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0079:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[79].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0079:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[79].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0079:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[79].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0079:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[79].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0079:OK_RBV
      - bi
      - $(SYMBOL).astFF[79].OK
      - | io: input


    * - $(PREFIX):FF:0079:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[79].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0079:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[79].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0079:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[79].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0079:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[79].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0079:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[79].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0079:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[79].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0079:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[79].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0079:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[79].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0079:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[79].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0079:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[79].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0079:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[79].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0079:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[79].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0079:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[79].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0079:Reset
      - bo
      - $(SYMBOL).astFF[79].Reset
      - | io: output


    * - $(PREFIX):FF:0079:Reset_RBV
      - bi
      - $(SYMBOL).astFF[79].Reset
      - | io: output


    * - $(PREFIX):FF:0080:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[80].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0080:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[80].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0080:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[80].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0080:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[80].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0080:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[80].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0080:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[80].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0080:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[80].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0080:OK_RBV
      - bi
      - $(SYMBOL).astFF[80].OK
      - | io: input


    * - $(PREFIX):FF:0080:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[80].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0080:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[80].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0080:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[80].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0080:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[80].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0080:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[80].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0080:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[80].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0080:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[80].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0080:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[80].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0080:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[80].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0080:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[80].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0080:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[80].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0080:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[80].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0080:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[80].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0080:Reset
      - bo
      - $(SYMBOL).astFF[80].Reset
      - | io: output


    * - $(PREFIX):FF:0080:Reset_RBV
      - bi
      - $(SYMBOL).astFF[80].Reset
      - | io: output


    * - $(PREFIX):FF:0081:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[81].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0081:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[81].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0081:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[81].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0081:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[81].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0081:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[81].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0081:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[81].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0081:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[81].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0081:OK_RBV
      - bi
      - $(SYMBOL).astFF[81].OK
      - | io: input


    * - $(PREFIX):FF:0081:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[81].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0081:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[81].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0081:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[81].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0081:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[81].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0081:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[81].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0081:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[81].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0081:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[81].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0081:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[81].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0081:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[81].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0081:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[81].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0081:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[81].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0081:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[81].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0081:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[81].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0081:Reset
      - bo
      - $(SYMBOL).astFF[81].Reset
      - | io: output


    * - $(PREFIX):FF:0081:Reset_RBV
      - bi
      - $(SYMBOL).astFF[81].Reset
      - | io: output


    * - $(PREFIX):FF:0082:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[82].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0082:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[82].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0082:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[82].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0082:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[82].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0082:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[82].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0082:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[82].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0082:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[82].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0082:OK_RBV
      - bi
      - $(SYMBOL).astFF[82].OK
      - | io: input


    * - $(PREFIX):FF:0082:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[82].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0082:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[82].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0082:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[82].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0082:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[82].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0082:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[82].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0082:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[82].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0082:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[82].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0082:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[82].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0082:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[82].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0082:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[82].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0082:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[82].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0082:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[82].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0082:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[82].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0082:Reset
      - bo
      - $(SYMBOL).astFF[82].Reset
      - | io: output


    * - $(PREFIX):FF:0082:Reset_RBV
      - bi
      - $(SYMBOL).astFF[82].Reset
      - | io: output


    * - $(PREFIX):FF:0083:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[83].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0083:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[83].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0083:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[83].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0083:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[83].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0083:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[83].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0083:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[83].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0083:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[83].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0083:OK_RBV
      - bi
      - $(SYMBOL).astFF[83].OK
      - | io: input


    * - $(PREFIX):FF:0083:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[83].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0083:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[83].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0083:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[83].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0083:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[83].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0083:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[83].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0083:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[83].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0083:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[83].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0083:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[83].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0083:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[83].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0083:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[83].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0083:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[83].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0083:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[83].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0083:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[83].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0083:Reset
      - bo
      - $(SYMBOL).astFF[83].Reset
      - | io: output


    * - $(PREFIX):FF:0083:Reset_RBV
      - bi
      - $(SYMBOL).astFF[83].Reset
      - | io: output


    * - $(PREFIX):FF:0084:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[84].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0084:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[84].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0084:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[84].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0084:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[84].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0084:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[84].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0084:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[84].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0084:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[84].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0084:OK_RBV
      - bi
      - $(SYMBOL).astFF[84].OK
      - | io: input


    * - $(PREFIX):FF:0084:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[84].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0084:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[84].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0084:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[84].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0084:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[84].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0084:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[84].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0084:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[84].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0084:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[84].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0084:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[84].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0084:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[84].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0084:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[84].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0084:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[84].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0084:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[84].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0084:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[84].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0084:Reset
      - bo
      - $(SYMBOL).astFF[84].Reset
      - | io: output


    * - $(PREFIX):FF:0084:Reset_RBV
      - bi
      - $(SYMBOL).astFF[84].Reset
      - | io: output


    * - $(PREFIX):FF:0085:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[85].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0085:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[85].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0085:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[85].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0085:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[85].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0085:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[85].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0085:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[85].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0085:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[85].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0085:OK_RBV
      - bi
      - $(SYMBOL).astFF[85].OK
      - | io: input


    * - $(PREFIX):FF:0085:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[85].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0085:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[85].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0085:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[85].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0085:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[85].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0085:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[85].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0085:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[85].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0085:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[85].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0085:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[85].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0085:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[85].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0085:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[85].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0085:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[85].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0085:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[85].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0085:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[85].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0085:Reset
      - bo
      - $(SYMBOL).astFF[85].Reset
      - | io: output


    * - $(PREFIX):FF:0085:Reset_RBV
      - bi
      - $(SYMBOL).astFF[85].Reset
      - | io: output


    * - $(PREFIX):FF:0086:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[86].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0086:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[86].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0086:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[86].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0086:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[86].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0086:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[86].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0086:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[86].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0086:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[86].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0086:OK_RBV
      - bi
      - $(SYMBOL).astFF[86].OK
      - | io: input


    * - $(PREFIX):FF:0086:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[86].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0086:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[86].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0086:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[86].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0086:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[86].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0086:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[86].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0086:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[86].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0086:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[86].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0086:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[86].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0086:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[86].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0086:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[86].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0086:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[86].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0086:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[86].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0086:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[86].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0086:Reset
      - bo
      - $(SYMBOL).astFF[86].Reset
      - | io: output


    * - $(PREFIX):FF:0086:Reset_RBV
      - bi
      - $(SYMBOL).astFF[86].Reset
      - | io: output


    * - $(PREFIX):FF:0087:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[87].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0087:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[87].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0087:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[87].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0087:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[87].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0087:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[87].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0087:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[87].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0087:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[87].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0087:OK_RBV
      - bi
      - $(SYMBOL).astFF[87].OK
      - | io: input


    * - $(PREFIX):FF:0087:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[87].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0087:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[87].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0087:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[87].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0087:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[87].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0087:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[87].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0087:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[87].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0087:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[87].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0087:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[87].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0087:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[87].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0087:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[87].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0087:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[87].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0087:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[87].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0087:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[87].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0087:Reset
      - bo
      - $(SYMBOL).astFF[87].Reset
      - | io: output


    * - $(PREFIX):FF:0087:Reset_RBV
      - bi
      - $(SYMBOL).astFF[87].Reset
      - | io: output


    * - $(PREFIX):FF:0088:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[88].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0088:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[88].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0088:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[88].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0088:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[88].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0088:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[88].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0088:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[88].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0088:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[88].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0088:OK_RBV
      - bi
      - $(SYMBOL).astFF[88].OK
      - | io: input


    * - $(PREFIX):FF:0088:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[88].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0088:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[88].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0088:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[88].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0088:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[88].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0088:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[88].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0088:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[88].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0088:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[88].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0088:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[88].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0088:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[88].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0088:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[88].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0088:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[88].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0088:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[88].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0088:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[88].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0088:Reset
      - bo
      - $(SYMBOL).astFF[88].Reset
      - | io: output


    * - $(PREFIX):FF:0088:Reset_RBV
      - bi
      - $(SYMBOL).astFF[88].Reset
      - | io: output


    * - $(PREFIX):FF:0089:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[89].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0089:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[89].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0089:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[89].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0089:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[89].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0089:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[89].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0089:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[89].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0089:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[89].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0089:OK_RBV
      - bi
      - $(SYMBOL).astFF[89].OK
      - | io: input


    * - $(PREFIX):FF:0089:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[89].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0089:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[89].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0089:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[89].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0089:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[89].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0089:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[89].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0089:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[89].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0089:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[89].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0089:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[89].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0089:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[89].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0089:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[89].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0089:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[89].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0089:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[89].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0089:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[89].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0089:Reset
      - bo
      - $(SYMBOL).astFF[89].Reset
      - | io: output


    * - $(PREFIX):FF:0089:Reset_RBV
      - bi
      - $(SYMBOL).astFF[89].Reset
      - | io: output


    * - $(PREFIX):FF:0090:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[90].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0090:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[90].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0090:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[90].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0090:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[90].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0090:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[90].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0090:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[90].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0090:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[90].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0090:OK_RBV
      - bi
      - $(SYMBOL).astFF[90].OK
      - | io: input


    * - $(PREFIX):FF:0090:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[90].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0090:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[90].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0090:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[90].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0090:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[90].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0090:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[90].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0090:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[90].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0090:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[90].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0090:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[90].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0090:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[90].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0090:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[90].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0090:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[90].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0090:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[90].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0090:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[90].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0090:Reset
      - bo
      - $(SYMBOL).astFF[90].Reset
      - | io: output


    * - $(PREFIX):FF:0090:Reset_RBV
      - bi
      - $(SYMBOL).astFF[90].Reset
      - | io: output


    * - $(PREFIX):FF:0091:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[91].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0091:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[91].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0091:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[91].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0091:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[91].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0091:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[91].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0091:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[91].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0091:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[91].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0091:OK_RBV
      - bi
      - $(SYMBOL).astFF[91].OK
      - | io: input


    * - $(PREFIX):FF:0091:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[91].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0091:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[91].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0091:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[91].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0091:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[91].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0091:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[91].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0091:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[91].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0091:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[91].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0091:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[91].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0091:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[91].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0091:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[91].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0091:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[91].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0091:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[91].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0091:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[91].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0091:Reset
      - bo
      - $(SYMBOL).astFF[91].Reset
      - | io: output


    * - $(PREFIX):FF:0091:Reset_RBV
      - bi
      - $(SYMBOL).astFF[91].Reset
      - | io: output


    * - $(PREFIX):FF:0092:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[92].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0092:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[92].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0092:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[92].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0092:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[92].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0092:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[92].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0092:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[92].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0092:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[92].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0092:OK_RBV
      - bi
      - $(SYMBOL).astFF[92].OK
      - | io: input


    * - $(PREFIX):FF:0092:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[92].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0092:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[92].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0092:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[92].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0092:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[92].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0092:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[92].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0092:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[92].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0092:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[92].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0092:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[92].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0092:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[92].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0092:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[92].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0092:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[92].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0092:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[92].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0092:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[92].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0092:Reset
      - bo
      - $(SYMBOL).astFF[92].Reset
      - | io: output


    * - $(PREFIX):FF:0092:Reset_RBV
      - bi
      - $(SYMBOL).astFF[92].Reset
      - | io: output


    * - $(PREFIX):FF:0093:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[93].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0093:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[93].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0093:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[93].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0093:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[93].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0093:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[93].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0093:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[93].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0093:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[93].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0093:OK_RBV
      - bi
      - $(SYMBOL).astFF[93].OK
      - | io: input


    * - $(PREFIX):FF:0093:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[93].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0093:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[93].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0093:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[93].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0093:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[93].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0093:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[93].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0093:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[93].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0093:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[93].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0093:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[93].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0093:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[93].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0093:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[93].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0093:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[93].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0093:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[93].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0093:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[93].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0093:Reset
      - bo
      - $(SYMBOL).astFF[93].Reset
      - | io: output


    * - $(PREFIX):FF:0093:Reset_RBV
      - bi
      - $(SYMBOL).astFF[93].Reset
      - | io: output


    * - $(PREFIX):FF:0094:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[94].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0094:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[94].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0094:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[94].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0094:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[94].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0094:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[94].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0094:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[94].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0094:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[94].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0094:OK_RBV
      - bi
      - $(SYMBOL).astFF[94].OK
      - | io: input


    * - $(PREFIX):FF:0094:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[94].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0094:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[94].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0094:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[94].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0094:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[94].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0094:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[94].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0094:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[94].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0094:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[94].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0094:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[94].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0094:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[94].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0094:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[94].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0094:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[94].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0094:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[94].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0094:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[94].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0094:Reset
      - bo
      - $(SYMBOL).astFF[94].Reset
      - | io: output


    * - $(PREFIX):FF:0094:Reset_RBV
      - bi
      - $(SYMBOL).astFF[94].Reset
      - | io: output


    * - $(PREFIX):FF:0095:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[95].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0095:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[95].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0095:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[95].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0095:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[95].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0095:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[95].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0095:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[95].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0095:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[95].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0095:OK_RBV
      - bi
      - $(SYMBOL).astFF[95].OK
      - | io: input


    * - $(PREFIX):FF:0095:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[95].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0095:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[95].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0095:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[95].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0095:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[95].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0095:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[95].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0095:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[95].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0095:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[95].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0095:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[95].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0095:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[95].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0095:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[95].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0095:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[95].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0095:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[95].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0095:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[95].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0095:Reset
      - bo
      - $(SYMBOL).astFF[95].Reset
      - | io: output


    * - $(PREFIX):FF:0095:Reset_RBV
      - bi
      - $(SYMBOL).astFF[95].Reset
      - | io: output


    * - $(PREFIX):FF:0096:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[96].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0096:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[96].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0096:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[96].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0096:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[96].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0096:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[96].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0096:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[96].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0096:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[96].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0096:OK_RBV
      - bi
      - $(SYMBOL).astFF[96].OK
      - | io: input


    * - $(PREFIX):FF:0096:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[96].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0096:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[96].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0096:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[96].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0096:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[96].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0096:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[96].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0096:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[96].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0096:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[96].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0096:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[96].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0096:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[96].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0096:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[96].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0096:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[96].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0096:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[96].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0096:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[96].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0096:Reset
      - bo
      - $(SYMBOL).astFF[96].Reset
      - | io: output


    * - $(PREFIX):FF:0096:Reset_RBV
      - bi
      - $(SYMBOL).astFF[96].Reset
      - | io: output


    * - $(PREFIX):FF:0097:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[97].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0097:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[97].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0097:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[97].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0097:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[97].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0097:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[97].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0097:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[97].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0097:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[97].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0097:OK_RBV
      - bi
      - $(SYMBOL).astFF[97].OK
      - | io: input


    * - $(PREFIX):FF:0097:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[97].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0097:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[97].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0097:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[97].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0097:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[97].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0097:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[97].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0097:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[97].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0097:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[97].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0097:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[97].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0097:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[97].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0097:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[97].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0097:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[97].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0097:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[97].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0097:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[97].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0097:Reset
      - bo
      - $(SYMBOL).astFF[97].Reset
      - | io: output


    * - $(PREFIX):FF:0097:Reset_RBV
      - bi
      - $(SYMBOL).astFF[97].Reset
      - | io: output


    * - $(PREFIX):FF:0098:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[98].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0098:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[98].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0098:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[98].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0098:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[98].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0098:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[98].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0098:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[98].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0098:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[98].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0098:OK_RBV
      - bi
      - $(SYMBOL).astFF[98].OK
      - | io: input


    * - $(PREFIX):FF:0098:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[98].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0098:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[98].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0098:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[98].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0098:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[98].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0098:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[98].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0098:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[98].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0098:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[98].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0098:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[98].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0098:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[98].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0098:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[98].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0098:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[98].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0098:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[98].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0098:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[98].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0098:Reset
      - bo
      - $(SYMBOL).astFF[98].Reset
      - | io: output


    * - $(PREFIX):FF:0098:Reset_RBV
      - bi
      - $(SYMBOL).astFF[98].Reset
      - | io: output


    * - $(PREFIX):FF:0099:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[99].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0099:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[99].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0099:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[99].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0099:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[99].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0099:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[99].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0099:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[99].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0099:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[99].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0099:OK_RBV
      - bi
      - $(SYMBOL).astFF[99].OK
      - | io: input


    * - $(PREFIX):FF:0099:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[99].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0099:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[99].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0099:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[99].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0099:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[99].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0099:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[99].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0099:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[99].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0099:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[99].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0099:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[99].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0099:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[99].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0099:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[99].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0099:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[99].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0099:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[99].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0099:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[99].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0099:Reset
      - bo
      - $(SYMBOL).astFF[99].Reset
      - | io: output


    * - $(PREFIX):FF:0099:Reset_RBV
      - bi
      - $(SYMBOL).astFF[99].Reset
      - | io: output


    * - $(PREFIX):FF:0100:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[100].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0100:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[100].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0100:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[100].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0100:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[100].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0100:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[100].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0100:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[100].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0100:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[100].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0100:OK_RBV
      - bi
      - $(SYMBOL).astFF[100].OK
      - | io: input


    * - $(PREFIX):FF:0100:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[100].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0100:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[100].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0100:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[100].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0100:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[100].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0100:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[100].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0100:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[100].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0100:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[100].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0100:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[100].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0100:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[100].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0100:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[100].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0100:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[100].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0100:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[100].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0100:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[100].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0100:Reset
      - bo
      - $(SYMBOL).astFF[100].Reset
      - | io: output


    * - $(PREFIX):FF:0100:Reset_RBV
      - bi
      - $(SYMBOL).astFF[100].Reset
      - | io: output


    * - $(PREFIX):OK_RBV
      - bi
      - $(SYMBOL).xOK
      - | io: input


    * - $(PREFIX):RegistrationFailure
      - bo
      - $(SYMBOL).xFastFaultRegFail
      - | io: output


    * - $(PREFIX):RegistrationFailure_RBV
      - bi
      - $(SYMBOL).xFastFaultRegFail
      - | io: output


 
PMPS.FB_SubSysToArbiter_IO
^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):ActiveCohort_RBV
      - longin
      - $(SYMBOL).nActiveCohort
      - | io: input


    * - $(PREFIX):RequestCohort_RBV
      - longin
      - $(SYMBOL).nRequestCohort
      - | io: input


     
PMPS.ST_BeamParams
^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):PhotonEnergyRanges_RBV
      - longin
      - $(SYMBOL).neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Rate_RBV
      - longin
      - $(SYMBOL).nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Transmission_RBV
      - ai
      - $(SYMBOL).nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Valid_RBV
      - bi
      - $(SYMBOL).xValid
      - | io: input


    * - $(PREFIX):Veto_RBV
      - waveform
      - $(SYMBOL).aVetoDevices
      - | io: input


 
PMPS.ST_BP_ArbInternal
^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Device_RBV
      - waveform
      - $(SYMBOL).sDevName
      - | io: input


    * - $(PREFIX):ID_RBV
      - longin
      - $(SYMBOL).nId
      - | io: input


    * - $(PREFIX):Live_RBV
      - bi
      - $(SYMBOL).LiveInTable
      - | io: input


    * - $(PREFIX):PhotonEnergyRanges_RBV
      - longin
      - $(SYMBOL).neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Rate_RBV
      - longin
      - $(SYMBOL).nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Transmission_RBV
      - ai
      - $(SYMBOL).nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Valid_RBV
      - bi
      - $(SYMBOL).xValid
      - | io: input


    * - $(PREFIX):Veto_RBV
      - waveform
      - $(SYMBOL).aVetoDevices
      - | io: input


 
PMPS.ST_FF
^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):BeamPermitted_RBV
      - bi
      - $(SYMBOL).BeamPermitted
      - | io: input


    * - $(PREFIX):Info:Desc_RBV
      - waveform
      - $(SYMBOL).Info.Desc
      - | io: input


    * - $(PREFIX):Info:DevName_RBV
      - waveform
      - $(SYMBOL).Info.DevName
      - | io: input


    * - $(PREFIX):Info:InfoString_RBV
      - waveform
      - $(SYMBOL).Info.InfoString
      - | io: input


    * - $(PREFIX):Info:InUse_RBV
      - bi
      - $(SYMBOL).Info.InUse
      - | io: input


    * - $(PREFIX):Info:Path_RBV
      - waveform
      - $(SYMBOL).Info.sPath
      - | io: input


    * - $(PREFIX):Info:TypeCode_RBV
      - longin
      - $(SYMBOL).Info.TypeCode
      - | io: input


    * - $(PREFIX):OK_RBV
      - bi
      - $(SYMBOL).OK
      - | io: input


    * - $(PREFIX):Ovrd:Activate
      - bo
      - $(SYMBOL).Ovrd.Activate
      - | io: output


    * - $(PREFIX):Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).Ovrd.Activate
      - | io: output


    * - $(PREFIX):Ovrd:Active_RBV
      - bi
      - $(SYMBOL).Ovrd.Active
      - | io: input


    * - $(PREFIX):Ovrd:Deactivate
      - bo
      - $(SYMBOL).Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):Ovrd:Duration
      - longout
      - $(SYMBOL).Ovrd.Duration
      - | io: output


    * - $(PREFIX):Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).Ovrd.Duration
      - | io: output


    * - $(PREFIX):Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):Ovrd:Expiration
      - longout
      - $(SYMBOL).Ovrd.Expiration
      - | io: output


    * - $(PREFIX):Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).Ovrd.Expiration
      - | io: output


    * - $(PREFIX):Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):Ovrd:StartDT
      - longout
      - $(SYMBOL).Ovrd.StartDT
      - | io: output


    * - $(PREFIX):Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).Ovrd.StartDT
      - | io: output


    * - $(PREFIX):Reset
      - bo
      - $(SYMBOL).Reset
      - | io: output


    * - $(PREFIX):Reset_RBV
      - bi
      - $(SYMBOL).Reset
      - | io: output


 
PMPS.ST_FFInfo
^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):Desc_RBV
      - waveform
      - $(SYMBOL).Desc
      - | io: input


    * - $(PREFIX):DevName_RBV
      - waveform
      - $(SYMBOL).DevName
      - | io: input


    * - $(PREFIX):InfoString_RBV
      - waveform
      - $(SYMBOL).InfoString
      - | io: input


    * - $(PREFIX):InUse_RBV
      - bi
      - $(SYMBOL).InUse
      - | io: input


    * - $(PREFIX):Path_RBV
      - waveform
      - $(SYMBOL).sPath
      - | io: input


    * - $(PREFIX):TypeCode_RBV
      - longin
      - $(SYMBOL).TypeCode
      - | io: input


 
PMPS.ST_FFOverride
^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):Activate
      - bo
      - $(SYMBOL).Activate
      - | io: output


    * - $(PREFIX):Activate_RBV
      - bi
      - $(SYMBOL).Activate
      - | io: output


    * - $(PREFIX):Active_RBV
      - bi
      - $(SYMBOL).Active
      - | io: input


    * - $(PREFIX):Deactivate
      - bo
      - $(SYMBOL).Deactivate
      - | io: output


    * - $(PREFIX):Deactivate_RBV
      - bi
      - $(SYMBOL).Deactivate
      - | io: output


    * - $(PREFIX):Duration
      - longout
      - $(SYMBOL).Duration
      - | io: output


    * - $(PREFIX):Duration_RBV
      - longin
      - $(SYMBOL).Duration
      - | io: output


    * - $(PREFIX):ElapsedTime_RBV
      - longin
      - $(SYMBOL).ElapsedTime
      - | io: input


    * - $(PREFIX):Expiration
      - longout
      - $(SYMBOL).Expiration
      - | io: output


    * - $(PREFIX):Expiration_RBV
      - longin
      - $(SYMBOL).Expiration
      - | io: output


    * - $(PREFIX):RemainingTime_RBV
      - longin
      - $(SYMBOL).RemainingTime
      - | io: input


    * - $(PREFIX):StartDT
      - longout
      - $(SYMBOL).StartDT
      - | io: output


    * - $(PREFIX):StartDT_RBV
      - longin
      - $(SYMBOL).StartDT
      - | io: output


 
PMPS.ST_PMPS_Aperture
^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):Height_RBV
      - ai
      - $(SYMBOL).Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):OK_RBV
      - bi
      - $(SYMBOL).xOK
      - | io: input


    * - $(PREFIX):Width_RBV
      - ai
      - $(SYMBOL).Width
      - | field: EGU mm
        | io: input


  
PMPS.T_HashTableEntry
^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):Key_RBV
      - longin
      - $(SYMBOL).key
      - | io: input


 
ST_BeamParams_IO
^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):Attenuation_RBV
      - ai
      - $(SYMBOL).nTran
      - | io: input


    * - $(PREFIX):Attenuation_RBV
      - longin
      - $(SYMBOL).nCohortInt
      - | io: input


    * - $(PREFIX):AuxAttenuator_RBV
      - waveform
      - $(SYMBOL).aVetoDevices
      - | io: input


    * - $(PREFIX):PhotonEnergy_RBV
      - longin
      - $(SYMBOL).neVRange
      - | io: input


    * - $(PREFIX):Rate_RBV
      - longin
      - $(SYMBOL).nRate
      - | io: input


    * - $(PREFIX):Valid_RBV
      - bi
      - $(SYMBOL).xValid
      - | io: input


  
ST_LoggingEventInfo
^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):EventClass_RBV
      - waveform
      - TwinCAT Event class
      - | io: input


    * - $(PREFIX):EventType_RBV
      - mbbi
      - The event type
      - | io: input


    * - $(PREFIX):Hostname_RBV
      - waveform
      - PLC Hostname
      - | io: input


    * - $(PREFIX):Message_RBV
      - waveform
      - $(SYMBOL).msg
      - | io: input


    * - $(PREFIX):MessageID_RBV
      - longin
      - TwinCAT Message ID
      - | io: input


    * - $(PREFIX):MessageJSON_RBV
      - waveform
      - Metadata with the message
      - | io: input


    * - $(PREFIX):Schema_RBV
      - waveform
      - Schema string
      - | io: input


    * - $(PREFIX):Severity_RBV
      - mbbi
      - TcEventSeverity
      - | field: ONST Info
        | field: THST Error
        | field: TWST Warning
        | field: ZRST Verbose
        | io: input


    * - $(PREFIX):Source_RBV
      - waveform
      - $(SYMBOL).source
      - | io: input


    * - $(PREFIX):Timestamp_RBV
      - ai
      - Unix timestamp
      - | io: input


 
ST_PMPS_Aperture_IO
^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):Height_RBV
      - ai
      - $(SYMBOL).Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):OK_RBV
      - bi
      - $(SYMBOL).xOK
      - | io: input


    * - $(PREFIX):Width_RBV
      - ai
      - $(SYMBOL).Width
      - | field: EGU mm
        | io: input


                         
Database Records
----------------

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX)0RateBeamCnst:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)0RateBeamCnst:PhotonEnergyRanges_RBV
      - longin
      - 0-rate beam constant
      - | archive: 1s monitor
        | field: EGU eV
        | io: input


    * - $(PREFIX)0RateBeamCnst:Rate_RBV
      - longin
      - 0-rate beam constant
      - | archive: 1s monitor
        | field: EGU Hz
        | io: input


    * - $(PREFIX)0RateBeamCnst:Transmission_RBV
      - ai
      - 0-rate beam constant
      - | archive: 1s monitor
        | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX)0RateBeamCnst:Valid_RBV
      - bi
      - 0-rate beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)0RateBeamCnst:Veto_RBV
      - waveform
      - 0-rate beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)AccumulatedFastFaults_RBV
      - longin
      - PMPS_GVL.AccumulatedFF
      - | io: input


    * - $(PREFIX)CurrentBP:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)CurrentBP:PhotonEnergyRanges_RBV
      - longin
      - PMPS_GVL.stCurrentBeamParameters.neVRange
      - | archive: 1s monitor
        | field: EGU eV
        | io: input


    * - $(PREFIX)CurrentBP:Rate_RBV
      - longin
      - PMPS_GVL.stCurrentBeamParameters.nRate
      - | archive: 1s monitor
        | field: EGU Hz
        | io: input


    * - $(PREFIX)CurrentBP:Transmission_RBV
      - ai
      - PMPS_GVL.stCurrentBeamParameters.nTran
      - | archive: 1s monitor
        | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX)CurrentBP:Valid_RBV
      - bi
      - PMPS_GVL.stCurrentBeamParameters.xValid
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)CurrentBP:Veto_RBV
      - waveform
      - PMPS_GVL.stCurrentBeamParameters.aVetoDevices
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)eVRangeCnst_RBV
      - waveform
      - Active eV Range constants
      - | archive: 1s monitor
        | field: EGU eV
        | io: input


    * - $(PREFIX)eVRangeHyst_RBV
      - ai
      - eV Range hystersis
      - | archive: 1s monitor
        | field: EGU eV
        | io: input


    * - $(PREFIX)FullBeamCnst:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)FullBeamCnst:PhotonEnergyRanges_RBV
      - longin
      - Full beam constant
      - | archive: 1s monitor
        | field: EGU eV
        | io: input


    * - $(PREFIX)FullBeamCnst:Rate_RBV
      - longin
      - Full beam constant
      - | archive: 1s monitor
        | field: EGU Hz
        | io: input


    * - $(PREFIX)FullBeamCnst:Transmission_RBV
      - ai
      - Full beam constant
      - | archive: 1s monitor
        | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX)FullBeamCnst:Valid_RBV
      - bi
      - Full beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)FullBeamCnst:Veto_RBV
      - waveform
      - Full beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)K:eVRangeCnst_RBV
      - waveform
      - eV Range constants
      - | archive: 1s monitor
        | field: EGU eV
        | io: input


    * - $(PREFIX)L:eVRangeCnst_RBV
      - waveform
      - eV Range constants
      - | archive: 1s monitor
        | field: EGU eV
        | io: input


    * - $(PREFIX)LCLSGeneral:GlobalLogTrickleTrip_RBV
      - bi
      - Tripped by overall log count
      - | io: input


    * - $(PREFIX)LCLSGeneral:LogHost
      - waveform
      - The log host IP address
      - | io: output


    * - $(PREFIX)LCLSGeneral:LogHost_RBV
      - waveform
      - The log host IP address
      - | io: output


    * - $(PREFIX)LCLSGeneral:LogMessageCount_RBV
      - longin
      - Total log messages on the last cycle
      - | io: input


    * - $(PREFIX)LCLSGeneral:LogPort
      - longout
      - The log host UDP port
      - | io: output


    * - $(PREFIX)LCLSGeneral:LogPort_RBV
      - longin
      - The log host UDP port
      - | io: output


    * - $(PREFIX)RequestedBP:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)RequestedBP:PhotonEnergyRanges_RBV
      - longin
      - PMPS_GVL.stRequestedBeamParameters.neVRange
      - | archive: 1s monitor
        | field: EGU eV
        | io: input


    * - $(PREFIX)RequestedBP:Rate_RBV
      - longin
      - PMPS_GVL.stRequestedBeamParameters.nRate
      - | archive: 1s monitor
        | field: EGU Hz
        | io: input


    * - $(PREFIX)RequestedBP:Transmission_RBV
      - ai
      - PMPS_GVL.stRequestedBeamParameters.nTran
      - | archive: 1s monitor
        | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX)RequestedBP:Valid_RBV
      - bi
      - PMPS_GVL.stRequestedBeamParameters.xValid
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)RequestedBP:Veto_RBV
      - waveform
      - PMPS_GVL.stRequestedBeamParameters.aVetoDevices
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)SafeBeamCnst:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)SafeBeamCnst:PhotonEnergyRanges_RBV
      - longin
      - Safe beam constant
      - | archive: 1s monitor
        | field: EGU eV
        | io: input


    * - $(PREFIX)SafeBeamCnst:Rate_RBV
      - longin
      - Safe beam constant
      - | archive: 1s monitor
        | field: EGU Hz
        | io: input


    * - $(PREFIX)SafeBeamCnst:Transmission_RBV
      - ai
      - Safe beam constant
      - | archive: 1s monitor
        | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX)SafeBeamCnst:Valid_RBV
      - bi
      - Safe beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)SafeBeamCnst:Veto_RBV
      - waveform
      - Safe beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)SuccessfulPreemptions_RBV
      - longin
      - PMPS_GVL.SuccessfulPreemption
      - | io: input


    * - AL1K2:L2SI:LAS:PCT
      - ao
      - PRG_AL1K2_L2SI.fbAL1K2.fbLaser.fLaserPercent
      - | io: output


    * - AL1K2:L2SI:LAS:PCT_RBV
      - ai
      - PRG_AL1K2_L2SI.fbAL1K2.fbLaser.fLaserPercent
      - | io: output


    * - AL1K2:L2SI:MMS:PLC:bAllBackwardEnable_RBV
      - bi
      - Summary of axis permission to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AL1K2:L2SI:MMS:PLC:bAllEnable_RBV
      - bi
      - Summary of axis permission to have power
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AL1K2:L2SI:MMS:PLC:bAllForwardEnable_RBV
      - bi
      - Summary of axis permission to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AL1K2:L2SI:MMS:PLC:bBrakeRelease_RBV
      - bi
      - TRUE if brake released
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AL1K2:L2SI:MMS:PLC:bBusy_RBV
      - bi
      - TRUE if in the middle of a command
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AL1K2:L2SI:MMS:PLC:bDone_RBV
      - bi
      - TRUE if command finished successfully
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AL1K2:L2SI:MMS:PLC:bEnable
      - bo
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AL1K2:L2SI:MMS:PLC:bEnable_RBV
      - bi
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AL1K2:L2SI:MMS:PLC:bEnableDone_RBV
      - bi
      - TRUE if done enabling
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AL1K2:L2SI:MMS:PLC:bError_RBV
      - bi
      - TRUE if we
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AL1K2:L2SI:MMS:PLC:bExecute
      - bo
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AL1K2:L2SI:MMS:PLC:bExecute_RBV
      - bi
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AL1K2:L2SI:MMS:PLC:bGantryAxis_RBV
      - bi
      - TRUE if gantry EPS active
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AL1K2:L2SI:MMS:PLC:bGantryBackwardEnable_RBV
      - bi
      - TRUE if gantry ok to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AL1K2:L2SI:MMS:PLC:bGantryForwardEnable_RBV
      - bi
      - TRUE if gantry ok to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AL1K2:L2SI:MMS:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AL1K2:L2SI:MMS:PLC:bHome_RBV
      - bi
      - TRUE if at homing switch
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AL1K2:L2SI:MMS:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - AL1K2:L2SI:MMS:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - AL1K2:L2SI:MMS:PLC:bHomed_RBV
      - bi
      - TRUE if the motor has been homed
      - | io: input


    * - AL1K2:L2SI:MMS:PLC:bLimitBackwardEnable_RBV
      - bi
      - FALSE if reverse limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AL1K2:L2SI:MMS:PLC:bLimitForwardEnable_RBV
      - bi
      - FALSE if forward limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AL1K2:L2SI:MMS:PLC:bMoveCmd
      - bo
      - Start a move
      - | io: output


    * - AL1K2:L2SI:MMS:PLC:bMoveCmd_RBV
      - bi
      - Start a move
      - | io: output


    * - AL1K2:L2SI:MMS:PLC:bPowerSelf_RBV
      - bi
      - FALSE if axis is in PMPS
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AL1K2:L2SI:MMS:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AL1K2:L2SI:MMS:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AL1K2:L2SI:MMS:PLC:bSafetyReady_RBV
      - bi
      - TRUE if safe to start a move
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AL1K2:L2SI:MMS:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - AL1K2:L2SI:MMS:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - AL1K2:L2SI:MMS:PLC:fAcceleration
      - ao
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - AL1K2:L2SI:MMS:PLC:fAcceleration_RBV
      - ai
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - AL1K2:L2SI:MMS:PLC:fDeceleration
      - ao
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - AL1K2:L2SI:MMS:PLC:fDeceleration_RBV
      - ai
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - AL1K2:L2SI:MMS:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - AL1K2:L2SI:MMS:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - AL1K2:L2SI:MMS:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - AL1K2:L2SI:MMS:PLC:fPosition
      - ao
      - Used internally and by the IOC as the set position
      - | io: output


    * - AL1K2:L2SI:MMS:PLC:fPosition_RBV
      - ai
      - Used internally and by the IOC as the set position
      - | io: output


    * - AL1K2:L2SI:MMS:PLC:fVelocity
      - ao
      - Used internally and by the IOC to set velocity
      - | io: output


    * - AL1K2:L2SI:MMS:PLC:fVelocity_RBV
      - ai
      - Used internally and by the IOC to set velocity
      - | io: output


    * - AL1K2:L2SI:MMS:PLC:nBrakeMode_RBV
      - mbbi
      - Describes when the brake will be released
      - | io: input


    * - AL1K2:L2SI:MMS:PLC:nCmdData
      - longout
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - AL1K2:L2SI:MMS:PLC:nCmdData_RBV
      - longin
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - AL1K2:L2SI:MMS:PLC:nCommand
      - longout
      - Used internally and by the IOC to pick move type
      - | io: output


    * - AL1K2:L2SI:MMS:PLC:nCommand_RBV
      - longin
      - Used internally and by the IOC to pick move type
      - | io: output


    * - AL1K2:L2SI:MMS:PLC:nEnableMode_RBV
      - mbbi
      - Describes when the axis will automatically get power
      - | io: input


    * - AL1K2:L2SI:MMS:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - AL1K2:L2SI:MMS:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input


    * - AL1K2:L2SI:MMS:PLC:nHomingMode_RBV
      - mbbi
      - Describes our homing strategy
      - | io: input


    * - AL1K2:L2SI:MMS:PLC:nMotionAxisID_RBV
      - longin
      - Unique ID assigned to each axis in the NC
      - | io: input


    * - AL1K2:L2SI:MMS:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input


    * - AL1K2:L2SI:MMS:PLC:sName_RBV
      - waveform
      - PLC program name
      - | io: input


    * - AL1K2:L2SI:MMS:STATE:01:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AL1K2:L2SI:MMS:STATE:01:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AL1K2:L2SI:MMS:STATE:01:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AL1K2:L2SI:MMS:STATE:01:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AL1K2:L2SI:MMS:STATE:01:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AL1K2:L2SI:MMS:STATE:01:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AL1K2:L2SI:MMS:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AL1K2:L2SI:MMS:STATE:01:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AL1K2:L2SI:MMS:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AL1K2:L2SI:MMS:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AL1K2:L2SI:MMS:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AL1K2:L2SI:MMS:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AL1K2:L2SI:MMS:STATE:01:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AL1K2:L2SI:MMS:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AL1K2:L2SI:MMS:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AL1K2:L2SI:MMS:STATE:02:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AL1K2:L2SI:MMS:STATE:02:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AL1K2:L2SI:MMS:STATE:02:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AL1K2:L2SI:MMS:STATE:02:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AL1K2:L2SI:MMS:STATE:02:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AL1K2:L2SI:MMS:STATE:02:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AL1K2:L2SI:MMS:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AL1K2:L2SI:MMS:STATE:02:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AL1K2:L2SI:MMS:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AL1K2:L2SI:MMS:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AL1K2:L2SI:MMS:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AL1K2:L2SI:MMS:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AL1K2:L2SI:MMS:STATE:02:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AL1K2:L2SI:MMS:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AL1K2:L2SI:MMS:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AL1K2:L2SI:MMS:STATE:03:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AL1K2:L2SI:MMS:STATE:03:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AL1K2:L2SI:MMS:STATE:03:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AL1K2:L2SI:MMS:STATE:03:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AL1K2:L2SI:MMS:STATE:03:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AL1K2:L2SI:MMS:STATE:03:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AL1K2:L2SI:MMS:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AL1K2:L2SI:MMS:STATE:03:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AL1K2:L2SI:MMS:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AL1K2:L2SI:MMS:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AL1K2:L2SI:MMS:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AL1K2:L2SI:MMS:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AL1K2:L2SI:MMS:STATE:03:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AL1K2:L2SI:MMS:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AL1K2:L2SI:MMS:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AL1K2:L2SI:MMS:STATE:04:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AL1K2:L2SI:MMS:STATE:04:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AL1K2:L2SI:MMS:STATE:04:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AL1K2:L2SI:MMS:STATE:04:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AL1K2:L2SI:MMS:STATE:04:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AL1K2:L2SI:MMS:STATE:04:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AL1K2:L2SI:MMS:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AL1K2:L2SI:MMS:STATE:04:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AL1K2:L2SI:MMS:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AL1K2:L2SI:MMS:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AL1K2:L2SI:MMS:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AL1K2:L2SI:MMS:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AL1K2:L2SI:MMS:STATE:04:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AL1K2:L2SI:MMS:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AL1K2:L2SI:MMS:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AL1K2:L2SI:MMS:STATE:05:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AL1K2:L2SI:MMS:STATE:05:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AL1K2:L2SI:MMS:STATE:05:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AL1K2:L2SI:MMS:STATE:05:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AL1K2:L2SI:MMS:STATE:05:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AL1K2:L2SI:MMS:STATE:05:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AL1K2:L2SI:MMS:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AL1K2:L2SI:MMS:STATE:05:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AL1K2:L2SI:MMS:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AL1K2:L2SI:MMS:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AL1K2:L2SI:MMS:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AL1K2:L2SI:MMS:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AL1K2:L2SI:MMS:STATE:05:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AL1K2:L2SI:MMS:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AL1K2:L2SI:MMS:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AL1K2:L2SI:MMS:STATE:06:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AL1K2:L2SI:MMS:STATE:06:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AL1K2:L2SI:MMS:STATE:06:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AL1K2:L2SI:MMS:STATE:06:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AL1K2:L2SI:MMS:STATE:06:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AL1K2:L2SI:MMS:STATE:06:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AL1K2:L2SI:MMS:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AL1K2:L2SI:MMS:STATE:06:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AL1K2:L2SI:MMS:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AL1K2:L2SI:MMS:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AL1K2:L2SI:MMS:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AL1K2:L2SI:MMS:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AL1K2:L2SI:MMS:STATE:06:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AL1K2:L2SI:MMS:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AL1K2:L2SI:MMS:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AL1K2:L2SI:MMS:STATE:07:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AL1K2:L2SI:MMS:STATE:07:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AL1K2:L2SI:MMS:STATE:07:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AL1K2:L2SI:MMS:STATE:07:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AL1K2:L2SI:MMS:STATE:07:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AL1K2:L2SI:MMS:STATE:07:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AL1K2:L2SI:MMS:STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AL1K2:L2SI:MMS:STATE:07:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AL1K2:L2SI:MMS:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AL1K2:L2SI:MMS:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AL1K2:L2SI:MMS:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AL1K2:L2SI:MMS:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AL1K2:L2SI:MMS:STATE:07:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AL1K2:L2SI:MMS:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AL1K2:L2SI:MMS:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AL1K2:L2SI:MMS:STATE:08:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AL1K2:L2SI:MMS:STATE:08:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AL1K2:L2SI:MMS:STATE:08:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AL1K2:L2SI:MMS:STATE:08:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AL1K2:L2SI:MMS:STATE:08:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AL1K2:L2SI:MMS:STATE:08:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AL1K2:L2SI:MMS:STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AL1K2:L2SI:MMS:STATE:08:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AL1K2:L2SI:MMS:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AL1K2:L2SI:MMS:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AL1K2:L2SI:MMS:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AL1K2:L2SI:MMS:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AL1K2:L2SI:MMS:STATE:08:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AL1K2:L2SI:MMS:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AL1K2:L2SI:MMS:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AL1K2:L2SI:MMS:STATE:09:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AL1K2:L2SI:MMS:STATE:09:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AL1K2:L2SI:MMS:STATE:09:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AL1K2:L2SI:MMS:STATE:09:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AL1K2:L2SI:MMS:STATE:09:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AL1K2:L2SI:MMS:STATE:09:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AL1K2:L2SI:MMS:STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AL1K2:L2SI:MMS:STATE:09:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AL1K2:L2SI:MMS:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AL1K2:L2SI:MMS:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AL1K2:L2SI:MMS:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AL1K2:L2SI:MMS:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AL1K2:L2SI:MMS:STATE:09:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AL1K2:L2SI:MMS:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AL1K2:L2SI:MMS:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AL1K2:L2SI:MMS:STATE:BUSY_RBV
      - bi
      - PRG_AL1K2_L2SI.fbAL1K2.fbStates.bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AL1K2:L2SI:MMS:STATE:DONE_RBV
      - bi
      - PRG_AL1K2_L2SI.fbAL1K2.fbStates.bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AL1K2:L2SI:MMS:STATE:ERR_RBV
      - bi
      - PRG_AL1K2_L2SI.fbAL1K2.fbStates.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AL1K2:L2SI:MMS:STATE:ERRID_RBV
      - longin
      - PRG_AL1K2_L2SI.fbAL1K2.fbStates.nErrorId
      - | io: input


    * - AL1K2:L2SI:MMS:STATE:ERRMSG_RBV
      - waveform
      - PRG_AL1K2_L2SI.fbAL1K2.fbStates.sErrorMessage
      - | io: input


    * - AL1K2:L2SI:MMS:STATE:GET_RBV
      - mbbi
      - PRG_AL1K2_L2SI.fbAL1K2.fbStates.enumGet
      - | io: input


    * - AL1K2:L2SI:MMS:STATE:PMPS:ARB:ENABLE
      - bo
      - PRG_AL1K2_L2SI.fbAL1K2.fbStates.bArbiterEnabled
      - | io: output


    * - AL1K2:L2SI:MMS:STATE:PMPS:ARB:ENABLE_RBV
      - bi
      - PRG_AL1K2_L2SI.fbAL1K2.fbStates.bArbiterEnabled
      - | io: output


    * - AL1K2:L2SI:MMS:STATE:PMPS:MAINT
      - bo
      - PRG_AL1K2_L2SI.fbAL1K2.fbStates.fbStatePMPS.bMaintMode
      - | io: output


    * - AL1K2:L2SI:MMS:STATE:PMPS:MAINT_RBV
      - bi
      - PRG_AL1K2_L2SI.fbAL1K2.fbStates.fbStatePMPS.bMaintMode
      - | io: output


    * - AL1K2:L2SI:MMS:STATE:RESET
      - bo
      - PRG_AL1K2_L2SI.fbAL1K2.fbStates.bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - AL1K2:L2SI:MMS:STATE:RESET_RBV
      - bi
      - PRG_AL1K2_L2SI.fbAL1K2.fbStates.bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - AL1K2:L2SI:MMS:STATE:SET
      - mbbo
      - PRG_AL1K2_L2SI.fbAL1K2.fbStates.enumSet
      - | io: output


    * - AL1K2:L2SI:MMS:STATE:SET_RBV
      - mbbi
      - PRG_AL1K2_L2SI.fbAL1K2.fbStates.enumSet
      - | io: output


    * - AT2K2:L2SI:MMS:01:FILTERS:01:MATERIAL_RBV
      - waveform
      - Filter material name
      - | io: input


    * - AT2K2:L2SI:MMS:01:FILTERS:01:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | field: EGU um
        | io: input


    * - AT2K2:L2SI:MMS:01:FILTERS:02:MATERIAL_RBV
      - waveform
      - Filter material name
      - | io: input


    * - AT2K2:L2SI:MMS:01:FILTERS:02:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | field: EGU um
        | io: input


    * - AT2K2:L2SI:MMS:01:FILTERS:03:MATERIAL_RBV
      - waveform
      - Filter material name
      - | io: input


    * - AT2K2:L2SI:MMS:01:FILTERS:03:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | field: EGU um
        | io: input


    * - AT2K2:L2SI:MMS:01:FILTERS:04:MATERIAL_RBV
      - waveform
      - Filter material name
      - | io: input


    * - AT2K2:L2SI:MMS:01:FILTERS:04:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | field: EGU um
        | io: input


    * - AT2K2:L2SI:MMS:01:FILTERS:05:MATERIAL_RBV
      - waveform
      - Filter material name
      - | io: input


    * - AT2K2:L2SI:MMS:01:FILTERS:05:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | field: EGU um
        | io: input


    * - AT2K2:L2SI:MMS:01:FILTERS:06:MATERIAL_RBV
      - waveform
      - Filter material name
      - | io: input


    * - AT2K2:L2SI:MMS:01:FILTERS:06:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | field: EGU um
        | io: input


    * - AT2K2:L2SI:MMS:01:FILTERS:07:MATERIAL_RBV
      - waveform
      - Filter material name
      - | io: input


    * - AT2K2:L2SI:MMS:01:FILTERS:07:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | field: EGU um
        | io: input


    * - AT2K2:L2SI:MMS:01:FILTERS:08:MATERIAL_RBV
      - waveform
      - Filter material name
      - | io: input


    * - AT2K2:L2SI:MMS:01:FILTERS:08:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | field: EGU um
        | io: input


    * - AT2K2:L2SI:MMS:01:MATERIAL_RBV
      - waveform
      - PRG_AT2K2_SOLID.fbStage1.sActiveFilterMaterial
      - | io: input


    * - AT2K2:L2SI:MMS:01:PLC:bAllBackwardEnable_RBV
      - bi
      - Summary of axis permission to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:01:PLC:bAllEnable_RBV
      - bi
      - Summary of axis permission to have power
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:01:PLC:bAllForwardEnable_RBV
      - bi
      - Summary of axis permission to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:01:PLC:bBrakeRelease_RBV
      - bi
      - TRUE if brake released
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:01:PLC:bBusy_RBV
      - bi
      - TRUE if in the middle of a command
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:01:PLC:bDone_RBV
      - bi
      - TRUE if command finished successfully
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:01:PLC:bEnable
      - bo
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2K2:L2SI:MMS:01:PLC:bEnable_RBV
      - bi
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2K2:L2SI:MMS:01:PLC:bEnableDone_RBV
      - bi
      - TRUE if done enabling
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:01:PLC:bError_RBV
      - bi
      - TRUE if we
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:01:PLC:bExecute
      - bo
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2K2:L2SI:MMS:01:PLC:bExecute_RBV
      - bi
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2K2:L2SI:MMS:01:PLC:bGantryAxis_RBV
      - bi
      - TRUE if gantry EPS active
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:01:PLC:bGantryBackwardEnable_RBV
      - bi
      - TRUE if gantry ok to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:01:PLC:bGantryForwardEnable_RBV
      - bi
      - TRUE if gantry ok to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:01:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:01:PLC:bHome_RBV
      - bi
      - TRUE if at homing switch
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:01:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - AT2K2:L2SI:MMS:01:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - AT2K2:L2SI:MMS:01:PLC:bHomed_RBV
      - bi
      - TRUE if the motor has been homed
      - | io: input


    * - AT2K2:L2SI:MMS:01:PLC:bLimitBackwardEnable_RBV
      - bi
      - FALSE if reverse limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:01:PLC:bLimitForwardEnable_RBV
      - bi
      - FALSE if forward limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:01:PLC:bMoveCmd
      - bo
      - Start a move
      - | io: output


    * - AT2K2:L2SI:MMS:01:PLC:bMoveCmd_RBV
      - bi
      - Start a move
      - | io: output


    * - AT2K2:L2SI:MMS:01:PLC:bPowerSelf_RBV
      - bi
      - FALSE if axis is in PMPS
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:01:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2K2:L2SI:MMS:01:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2K2:L2SI:MMS:01:PLC:bSafetyReady_RBV
      - bi
      - TRUE if safe to start a move
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:01:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - AT2K2:L2SI:MMS:01:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - AT2K2:L2SI:MMS:01:PLC:fAcceleration
      - ao
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - AT2K2:L2SI:MMS:01:PLC:fAcceleration_RBV
      - ai
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - AT2K2:L2SI:MMS:01:PLC:fDeceleration
      - ao
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - AT2K2:L2SI:MMS:01:PLC:fDeceleration_RBV
      - ai
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - AT2K2:L2SI:MMS:01:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - AT2K2:L2SI:MMS:01:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - AT2K2:L2SI:MMS:01:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - AT2K2:L2SI:MMS:01:PLC:fPosition
      - ao
      - Used internally and by the IOC as the set position
      - | io: output


    * - AT2K2:L2SI:MMS:01:PLC:fPosition_RBV
      - ai
      - Used internally and by the IOC as the set position
      - | io: output


    * - AT2K2:L2SI:MMS:01:PLC:fVelocity
      - ao
      - Used internally and by the IOC to set velocity
      - | io: output


    * - AT2K2:L2SI:MMS:01:PLC:fVelocity_RBV
      - ai
      - Used internally and by the IOC to set velocity
      - | io: output


    * - AT2K2:L2SI:MMS:01:PLC:nBrakeMode_RBV
      - mbbi
      - Describes when the brake will be released
      - | io: input


    * - AT2K2:L2SI:MMS:01:PLC:nCmdData
      - longout
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - AT2K2:L2SI:MMS:01:PLC:nCmdData_RBV
      - longin
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - AT2K2:L2SI:MMS:01:PLC:nCommand
      - longout
      - Used internally and by the IOC to pick move type
      - | io: output


    * - AT2K2:L2SI:MMS:01:PLC:nCommand_RBV
      - longin
      - Used internally and by the IOC to pick move type
      - | io: output


    * - AT2K2:L2SI:MMS:01:PLC:nEnableMode_RBV
      - mbbi
      - Describes when the axis will automatically get power
      - | io: input


    * - AT2K2:L2SI:MMS:01:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - AT2K2:L2SI:MMS:01:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input


    * - AT2K2:L2SI:MMS:01:PLC:nHomingMode_RBV
      - mbbi
      - Describes our homing strategy
      - | io: input


    * - AT2K2:L2SI:MMS:01:PLC:nMotionAxisID_RBV
      - longin
      - Unique ID assigned to each axis in the NC
      - | io: input


    * - AT2K2:L2SI:MMS:01:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input


    * - AT2K2:L2SI:MMS:01:PLC:sName_RBV
      - waveform
      - PLC program name
      - | io: input


    * - AT2K2:L2SI:MMS:01:RTD:1:CONN_RBV
      - bi
      - PRG_AT2K2_SOLID.fbStage1.fbRTD_1.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - AT2K2:L2SI:MMS:01:RTD:1:ERR_RBV
      - bi
      - PRG_AT2K2_SOLID.fbStage1.fbRTD_1.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2K2:L2SI:MMS:01:RTD:1:TEMP_RBV
      - ai
      - PRG_AT2K2_SOLID.fbStage1.fbRTD_1.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - AT2K2:L2SI:MMS:01:RTD:2:CONN_RBV
      - bi
      - PRG_AT2K2_SOLID.fbStage1.fbRTD_2.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - AT2K2:L2SI:MMS:01:RTD:2:ERR_RBV
      - bi
      - PRG_AT2K2_SOLID.fbStage1.fbRTD_2.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2K2:L2SI:MMS:01:RTD:2:TEMP_RBV
      - ai
      - PRG_AT2K2_SOLID.fbStage1.fbRTD_2.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - AT2K2:L2SI:MMS:01:STATE:01:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:01:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:01:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:01:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:01:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:01:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2K2:L2SI:MMS:01:STATE:01:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:01:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:01:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2K2:L2SI:MMS:01:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:01:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:01:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:02:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:02:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:02:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:02:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:02:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:02:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2K2:L2SI:MMS:01:STATE:02:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:01:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:01:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2K2:L2SI:MMS:01:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:02:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:01:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:03:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:03:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:03:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:03:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:03:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:03:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2K2:L2SI:MMS:01:STATE:03:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:01:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:01:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2K2:L2SI:MMS:01:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:03:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:01:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:04:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:04:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:04:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:04:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:04:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:04:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2K2:L2SI:MMS:01:STATE:04:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:01:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:01:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2K2:L2SI:MMS:01:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:04:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:01:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:05:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:05:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:05:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:05:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:05:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:05:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2K2:L2SI:MMS:01:STATE:05:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:01:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:01:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2K2:L2SI:MMS:01:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:05:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:01:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:06:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:06:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:06:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:06:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:06:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:06:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2K2:L2SI:MMS:01:STATE:06:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:01:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:01:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2K2:L2SI:MMS:01:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:06:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:01:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:07:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:07:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:07:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:07:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:07:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:07:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2K2:L2SI:MMS:01:STATE:07:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:01:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:01:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2K2:L2SI:MMS:01:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:07:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:01:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:08:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:08:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:08:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:08:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:08:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:08:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2K2:L2SI:MMS:01:STATE:08:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:01:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:01:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2K2:L2SI:MMS:01:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:08:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:01:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:09:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:09:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:09:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:09:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:09:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:09:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2K2:L2SI:MMS:01:STATE:09:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:01:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:01:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2K2:L2SI:MMS:01:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:09:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:01:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:BUSY_RBV
      - bi
      - PRG_AT2K2_SOLID.fbStage1.fbState.bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2K2:L2SI:MMS:01:STATE:DONE_RBV
      - bi
      - PRG_AT2K2_SOLID.fbStage1.fbState.bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2K2:L2SI:MMS:01:STATE:ERR_RBV
      - bi
      - PRG_AT2K2_SOLID.fbStage1.fbState.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2K2:L2SI:MMS:01:STATE:ERRID_RBV
      - longin
      - PRG_AT2K2_SOLID.fbStage1.fbState.nErrorId
      - | io: input


    * - AT2K2:L2SI:MMS:01:STATE:ERRMSG_RBV
      - waveform
      - PRG_AT2K2_SOLID.fbStage1.fbState.sErrorMessage
      - | io: input


    * - AT2K2:L2SI:MMS:01:STATE:GET_RBV
      - mbbi
      - PRG_AT2K2_SOLID.fbStage1.fbState.enumGet
      - | io: input


    * - AT2K2:L2SI:MMS:01:STATE:RESET
      - bo
      - PRG_AT2K2_SOLID.fbStage1.fbState.bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:RESET_RBV
      - bi
      - PRG_AT2K2_SOLID.fbStage1.fbState.bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - AT2K2:L2SI:MMS:01:STATE:SET
      - mbbo
      - PRG_AT2K2_SOLID.fbStage1.fbState.enumSet
      - | io: output


    * - AT2K2:L2SI:MMS:01:STATE:SET_RBV
      - mbbi
      - PRG_AT2K2_SOLID.fbStage1.fbState.enumSet
      - | io: output


    * - AT2K2:L2SI:MMS:01:THICKNESS_RBV
      - ai
      - PRG_AT2K2_SOLID.fbStage1.fActiveFilterThickness_um
      - | field: EGU um
        | io: input


    * - AT2K2:L2SI:MMS:01:TRANSMISSION_RBV
      - ai
      - Filter transmission
      - | io: input


    * - AT2K2:L2SI:MMS:02:FILTERS:01:MATERIAL_RBV
      - waveform
      - Filter material name
      - | io: input


    * - AT2K2:L2SI:MMS:02:FILTERS:01:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | field: EGU um
        | io: input


    * - AT2K2:L2SI:MMS:02:FILTERS:02:MATERIAL_RBV
      - waveform
      - Filter material name
      - | io: input


    * - AT2K2:L2SI:MMS:02:FILTERS:02:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | field: EGU um
        | io: input


    * - AT2K2:L2SI:MMS:02:FILTERS:03:MATERIAL_RBV
      - waveform
      - Filter material name
      - | io: input


    * - AT2K2:L2SI:MMS:02:FILTERS:03:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | field: EGU um
        | io: input


    * - AT2K2:L2SI:MMS:02:FILTERS:04:MATERIAL_RBV
      - waveform
      - Filter material name
      - | io: input


    * - AT2K2:L2SI:MMS:02:FILTERS:04:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | field: EGU um
        | io: input


    * - AT2K2:L2SI:MMS:02:FILTERS:05:MATERIAL_RBV
      - waveform
      - Filter material name
      - | io: input


    * - AT2K2:L2SI:MMS:02:FILTERS:05:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | field: EGU um
        | io: input


    * - AT2K2:L2SI:MMS:02:FILTERS:06:MATERIAL_RBV
      - waveform
      - Filter material name
      - | io: input


    * - AT2K2:L2SI:MMS:02:FILTERS:06:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | field: EGU um
        | io: input


    * - AT2K2:L2SI:MMS:02:FILTERS:07:MATERIAL_RBV
      - waveform
      - Filter material name
      - | io: input


    * - AT2K2:L2SI:MMS:02:FILTERS:07:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | field: EGU um
        | io: input


    * - AT2K2:L2SI:MMS:02:FILTERS:08:MATERIAL_RBV
      - waveform
      - Filter material name
      - | io: input


    * - AT2K2:L2SI:MMS:02:FILTERS:08:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | field: EGU um
        | io: input


    * - AT2K2:L2SI:MMS:02:MATERIAL_RBV
      - waveform
      - PRG_AT2K2_SOLID.fbStage2.sActiveFilterMaterial
      - | io: input


    * - AT2K2:L2SI:MMS:02:PLC:bAllBackwardEnable_RBV
      - bi
      - Summary of axis permission to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:02:PLC:bAllEnable_RBV
      - bi
      - Summary of axis permission to have power
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:02:PLC:bAllForwardEnable_RBV
      - bi
      - Summary of axis permission to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:02:PLC:bBrakeRelease_RBV
      - bi
      - TRUE if brake released
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:02:PLC:bBusy_RBV
      - bi
      - TRUE if in the middle of a command
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:02:PLC:bDone_RBV
      - bi
      - TRUE if command finished successfully
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:02:PLC:bEnable
      - bo
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2K2:L2SI:MMS:02:PLC:bEnable_RBV
      - bi
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2K2:L2SI:MMS:02:PLC:bEnableDone_RBV
      - bi
      - TRUE if done enabling
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:02:PLC:bError_RBV
      - bi
      - TRUE if we
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:02:PLC:bExecute
      - bo
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2K2:L2SI:MMS:02:PLC:bExecute_RBV
      - bi
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2K2:L2SI:MMS:02:PLC:bGantryAxis_RBV
      - bi
      - TRUE if gantry EPS active
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:02:PLC:bGantryBackwardEnable_RBV
      - bi
      - TRUE if gantry ok to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:02:PLC:bGantryForwardEnable_RBV
      - bi
      - TRUE if gantry ok to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:02:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:02:PLC:bHome_RBV
      - bi
      - TRUE if at homing switch
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:02:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - AT2K2:L2SI:MMS:02:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - AT2K2:L2SI:MMS:02:PLC:bHomed_RBV
      - bi
      - TRUE if the motor has been homed
      - | io: input


    * - AT2K2:L2SI:MMS:02:PLC:bLimitBackwardEnable_RBV
      - bi
      - FALSE if reverse limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:02:PLC:bLimitForwardEnable_RBV
      - bi
      - FALSE if forward limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:02:PLC:bMoveCmd
      - bo
      - Start a move
      - | io: output


    * - AT2K2:L2SI:MMS:02:PLC:bMoveCmd_RBV
      - bi
      - Start a move
      - | io: output


    * - AT2K2:L2SI:MMS:02:PLC:bPowerSelf_RBV
      - bi
      - FALSE if axis is in PMPS
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:02:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2K2:L2SI:MMS:02:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2K2:L2SI:MMS:02:PLC:bSafetyReady_RBV
      - bi
      - TRUE if safe to start a move
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:02:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - AT2K2:L2SI:MMS:02:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - AT2K2:L2SI:MMS:02:PLC:fAcceleration
      - ao
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - AT2K2:L2SI:MMS:02:PLC:fAcceleration_RBV
      - ai
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - AT2K2:L2SI:MMS:02:PLC:fDeceleration
      - ao
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - AT2K2:L2SI:MMS:02:PLC:fDeceleration_RBV
      - ai
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - AT2K2:L2SI:MMS:02:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - AT2K2:L2SI:MMS:02:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - AT2K2:L2SI:MMS:02:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - AT2K2:L2SI:MMS:02:PLC:fPosition
      - ao
      - Used internally and by the IOC as the set position
      - | io: output


    * - AT2K2:L2SI:MMS:02:PLC:fPosition_RBV
      - ai
      - Used internally and by the IOC as the set position
      - | io: output


    * - AT2K2:L2SI:MMS:02:PLC:fVelocity
      - ao
      - Used internally and by the IOC to set velocity
      - | io: output


    * - AT2K2:L2SI:MMS:02:PLC:fVelocity_RBV
      - ai
      - Used internally and by the IOC to set velocity
      - | io: output


    * - AT2K2:L2SI:MMS:02:PLC:nBrakeMode_RBV
      - mbbi
      - Describes when the brake will be released
      - | io: input


    * - AT2K2:L2SI:MMS:02:PLC:nCmdData
      - longout
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - AT2K2:L2SI:MMS:02:PLC:nCmdData_RBV
      - longin
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - AT2K2:L2SI:MMS:02:PLC:nCommand
      - longout
      - Used internally and by the IOC to pick move type
      - | io: output


    * - AT2K2:L2SI:MMS:02:PLC:nCommand_RBV
      - longin
      - Used internally and by the IOC to pick move type
      - | io: output


    * - AT2K2:L2SI:MMS:02:PLC:nEnableMode_RBV
      - mbbi
      - Describes when the axis will automatically get power
      - | io: input


    * - AT2K2:L2SI:MMS:02:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - AT2K2:L2SI:MMS:02:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input


    * - AT2K2:L2SI:MMS:02:PLC:nHomingMode_RBV
      - mbbi
      - Describes our homing strategy
      - | io: input


    * - AT2K2:L2SI:MMS:02:PLC:nMotionAxisID_RBV
      - longin
      - Unique ID assigned to each axis in the NC
      - | io: input


    * - AT2K2:L2SI:MMS:02:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input


    * - AT2K2:L2SI:MMS:02:PLC:sName_RBV
      - waveform
      - PLC program name
      - | io: input


    * - AT2K2:L2SI:MMS:02:RTD:1:CONN_RBV
      - bi
      - PRG_AT2K2_SOLID.fbStage2.fbRTD_1.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - AT2K2:L2SI:MMS:02:RTD:1:ERR_RBV
      - bi
      - PRG_AT2K2_SOLID.fbStage2.fbRTD_1.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2K2:L2SI:MMS:02:RTD:1:TEMP_RBV
      - ai
      - PRG_AT2K2_SOLID.fbStage2.fbRTD_1.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - AT2K2:L2SI:MMS:02:RTD:2:CONN_RBV
      - bi
      - PRG_AT2K2_SOLID.fbStage2.fbRTD_2.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - AT2K2:L2SI:MMS:02:RTD:2:ERR_RBV
      - bi
      - PRG_AT2K2_SOLID.fbStage2.fbRTD_2.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2K2:L2SI:MMS:02:RTD:2:TEMP_RBV
      - ai
      - PRG_AT2K2_SOLID.fbStage2.fbRTD_2.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - AT2K2:L2SI:MMS:02:STATE:01:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:01:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:01:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:01:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:01:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:01:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2K2:L2SI:MMS:02:STATE:01:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:02:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:02:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2K2:L2SI:MMS:02:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:01:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:02:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:02:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:02:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:02:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:02:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:02:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:02:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2K2:L2SI:MMS:02:STATE:02:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:02:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:02:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2K2:L2SI:MMS:02:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:02:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:02:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:03:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:03:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:03:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:03:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:03:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:03:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2K2:L2SI:MMS:02:STATE:03:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:02:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:02:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2K2:L2SI:MMS:02:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:03:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:02:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:04:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:04:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:04:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:04:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:04:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:04:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2K2:L2SI:MMS:02:STATE:04:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:02:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:02:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2K2:L2SI:MMS:02:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:04:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:02:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:05:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:05:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:05:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:05:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:05:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:05:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2K2:L2SI:MMS:02:STATE:05:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:02:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:02:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2K2:L2SI:MMS:02:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:05:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:02:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:06:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:06:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:06:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:06:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:06:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:06:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2K2:L2SI:MMS:02:STATE:06:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:02:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:02:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2K2:L2SI:MMS:02:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:06:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:02:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:07:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:07:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:07:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:07:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:07:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:07:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2K2:L2SI:MMS:02:STATE:07:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:02:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:02:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2K2:L2SI:MMS:02:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:07:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:02:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:08:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:08:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:08:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:08:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:08:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:08:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2K2:L2SI:MMS:02:STATE:08:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:02:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:02:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2K2:L2SI:MMS:02:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:08:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:02:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:09:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:09:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:09:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:09:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:09:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:09:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2K2:L2SI:MMS:02:STATE:09:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:02:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:02:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2K2:L2SI:MMS:02:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:09:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:02:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:BUSY_RBV
      - bi
      - PRG_AT2K2_SOLID.fbStage2.fbState.bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2K2:L2SI:MMS:02:STATE:DONE_RBV
      - bi
      - PRG_AT2K2_SOLID.fbStage2.fbState.bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2K2:L2SI:MMS:02:STATE:ERR_RBV
      - bi
      - PRG_AT2K2_SOLID.fbStage2.fbState.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2K2:L2SI:MMS:02:STATE:ERRID_RBV
      - longin
      - PRG_AT2K2_SOLID.fbStage2.fbState.nErrorId
      - | io: input


    * - AT2K2:L2SI:MMS:02:STATE:ERRMSG_RBV
      - waveform
      - PRG_AT2K2_SOLID.fbStage2.fbState.sErrorMessage
      - | io: input


    * - AT2K2:L2SI:MMS:02:STATE:GET_RBV
      - mbbi
      - PRG_AT2K2_SOLID.fbStage2.fbState.enumGet
      - | io: input


    * - AT2K2:L2SI:MMS:02:STATE:RESET
      - bo
      - PRG_AT2K2_SOLID.fbStage2.fbState.bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:RESET_RBV
      - bi
      - PRG_AT2K2_SOLID.fbStage2.fbState.bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - AT2K2:L2SI:MMS:02:STATE:SET
      - mbbo
      - PRG_AT2K2_SOLID.fbStage2.fbState.enumSet
      - | io: output


    * - AT2K2:L2SI:MMS:02:STATE:SET_RBV
      - mbbi
      - PRG_AT2K2_SOLID.fbStage2.fbState.enumSet
      - | io: output


    * - AT2K2:L2SI:MMS:02:THICKNESS_RBV
      - ai
      - PRG_AT2K2_SOLID.fbStage2.fActiveFilterThickness_um
      - | field: EGU um
        | io: input


    * - AT2K2:L2SI:MMS:02:TRANSMISSION_RBV
      - ai
      - Filter transmission
      - | io: input


    * - AT2K2:L2SI:MMS:03:FILTERS:01:MATERIAL_RBV
      - waveform
      - Filter material name
      - | io: input


    * - AT2K2:L2SI:MMS:03:FILTERS:01:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | field: EGU um
        | io: input


    * - AT2K2:L2SI:MMS:03:FILTERS:02:MATERIAL_RBV
      - waveform
      - Filter material name
      - | io: input


    * - AT2K2:L2SI:MMS:03:FILTERS:02:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | field: EGU um
        | io: input


    * - AT2K2:L2SI:MMS:03:FILTERS:03:MATERIAL_RBV
      - waveform
      - Filter material name
      - | io: input


    * - AT2K2:L2SI:MMS:03:FILTERS:03:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | field: EGU um
        | io: input


    * - AT2K2:L2SI:MMS:03:FILTERS:04:MATERIAL_RBV
      - waveform
      - Filter material name
      - | io: input


    * - AT2K2:L2SI:MMS:03:FILTERS:04:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | field: EGU um
        | io: input


    * - AT2K2:L2SI:MMS:03:FILTERS:05:MATERIAL_RBV
      - waveform
      - Filter material name
      - | io: input


    * - AT2K2:L2SI:MMS:03:FILTERS:05:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | field: EGU um
        | io: input


    * - AT2K2:L2SI:MMS:03:FILTERS:06:MATERIAL_RBV
      - waveform
      - Filter material name
      - | io: input


    * - AT2K2:L2SI:MMS:03:FILTERS:06:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | field: EGU um
        | io: input


    * - AT2K2:L2SI:MMS:03:FILTERS:07:MATERIAL_RBV
      - waveform
      - Filter material name
      - | io: input


    * - AT2K2:L2SI:MMS:03:FILTERS:07:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | field: EGU um
        | io: input


    * - AT2K2:L2SI:MMS:03:FILTERS:08:MATERIAL_RBV
      - waveform
      - Filter material name
      - | io: input


    * - AT2K2:L2SI:MMS:03:FILTERS:08:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | field: EGU um
        | io: input


    * - AT2K2:L2SI:MMS:03:MATERIAL_RBV
      - waveform
      - PRG_AT2K2_SOLID.fbStage3.sActiveFilterMaterial
      - | io: input


    * - AT2K2:L2SI:MMS:03:PLC:bAllBackwardEnable_RBV
      - bi
      - Summary of axis permission to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:03:PLC:bAllEnable_RBV
      - bi
      - Summary of axis permission to have power
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:03:PLC:bAllForwardEnable_RBV
      - bi
      - Summary of axis permission to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:03:PLC:bBrakeRelease_RBV
      - bi
      - TRUE if brake released
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:03:PLC:bBusy_RBV
      - bi
      - TRUE if in the middle of a command
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:03:PLC:bDone_RBV
      - bi
      - TRUE if command finished successfully
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:03:PLC:bEnable
      - bo
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2K2:L2SI:MMS:03:PLC:bEnable_RBV
      - bi
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2K2:L2SI:MMS:03:PLC:bEnableDone_RBV
      - bi
      - TRUE if done enabling
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:03:PLC:bError_RBV
      - bi
      - TRUE if we
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:03:PLC:bExecute
      - bo
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2K2:L2SI:MMS:03:PLC:bExecute_RBV
      - bi
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2K2:L2SI:MMS:03:PLC:bGantryAxis_RBV
      - bi
      - TRUE if gantry EPS active
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:03:PLC:bGantryBackwardEnable_RBV
      - bi
      - TRUE if gantry ok to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:03:PLC:bGantryForwardEnable_RBV
      - bi
      - TRUE if gantry ok to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:03:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:03:PLC:bHome_RBV
      - bi
      - TRUE if at homing switch
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:03:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - AT2K2:L2SI:MMS:03:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - AT2K2:L2SI:MMS:03:PLC:bHomed_RBV
      - bi
      - TRUE if the motor has been homed
      - | io: input


    * - AT2K2:L2SI:MMS:03:PLC:bLimitBackwardEnable_RBV
      - bi
      - FALSE if reverse limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:03:PLC:bLimitForwardEnable_RBV
      - bi
      - FALSE if forward limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:03:PLC:bMoveCmd
      - bo
      - Start a move
      - | io: output


    * - AT2K2:L2SI:MMS:03:PLC:bMoveCmd_RBV
      - bi
      - Start a move
      - | io: output


    * - AT2K2:L2SI:MMS:03:PLC:bPowerSelf_RBV
      - bi
      - FALSE if axis is in PMPS
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:03:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2K2:L2SI:MMS:03:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2K2:L2SI:MMS:03:PLC:bSafetyReady_RBV
      - bi
      - TRUE if safe to start a move
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:03:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - AT2K2:L2SI:MMS:03:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - AT2K2:L2SI:MMS:03:PLC:fAcceleration
      - ao
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - AT2K2:L2SI:MMS:03:PLC:fAcceleration_RBV
      - ai
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - AT2K2:L2SI:MMS:03:PLC:fDeceleration
      - ao
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - AT2K2:L2SI:MMS:03:PLC:fDeceleration_RBV
      - ai
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - AT2K2:L2SI:MMS:03:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - AT2K2:L2SI:MMS:03:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - AT2K2:L2SI:MMS:03:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - AT2K2:L2SI:MMS:03:PLC:fPosition
      - ao
      - Used internally and by the IOC as the set position
      - | io: output


    * - AT2K2:L2SI:MMS:03:PLC:fPosition_RBV
      - ai
      - Used internally and by the IOC as the set position
      - | io: output


    * - AT2K2:L2SI:MMS:03:PLC:fVelocity
      - ao
      - Used internally and by the IOC to set velocity
      - | io: output


    * - AT2K2:L2SI:MMS:03:PLC:fVelocity_RBV
      - ai
      - Used internally and by the IOC to set velocity
      - | io: output


    * - AT2K2:L2SI:MMS:03:PLC:nBrakeMode_RBV
      - mbbi
      - Describes when the brake will be released
      - | io: input


    * - AT2K2:L2SI:MMS:03:PLC:nCmdData
      - longout
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - AT2K2:L2SI:MMS:03:PLC:nCmdData_RBV
      - longin
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - AT2K2:L2SI:MMS:03:PLC:nCommand
      - longout
      - Used internally and by the IOC to pick move type
      - | io: output


    * - AT2K2:L2SI:MMS:03:PLC:nCommand_RBV
      - longin
      - Used internally and by the IOC to pick move type
      - | io: output


    * - AT2K2:L2SI:MMS:03:PLC:nEnableMode_RBV
      - mbbi
      - Describes when the axis will automatically get power
      - | io: input


    * - AT2K2:L2SI:MMS:03:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - AT2K2:L2SI:MMS:03:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input


    * - AT2K2:L2SI:MMS:03:PLC:nHomingMode_RBV
      - mbbi
      - Describes our homing strategy
      - | io: input


    * - AT2K2:L2SI:MMS:03:PLC:nMotionAxisID_RBV
      - longin
      - Unique ID assigned to each axis in the NC
      - | io: input


    * - AT2K2:L2SI:MMS:03:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input


    * - AT2K2:L2SI:MMS:03:PLC:sName_RBV
      - waveform
      - PLC program name
      - | io: input


    * - AT2K2:L2SI:MMS:03:RTD:1:CONN_RBV
      - bi
      - PRG_AT2K2_SOLID.fbStage3.fbRTD_1.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - AT2K2:L2SI:MMS:03:RTD:1:ERR_RBV
      - bi
      - PRG_AT2K2_SOLID.fbStage3.fbRTD_1.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2K2:L2SI:MMS:03:RTD:1:TEMP_RBV
      - ai
      - PRG_AT2K2_SOLID.fbStage3.fbRTD_1.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - AT2K2:L2SI:MMS:03:RTD:2:CONN_RBV
      - bi
      - PRG_AT2K2_SOLID.fbStage3.fbRTD_2.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - AT2K2:L2SI:MMS:03:RTD:2:ERR_RBV
      - bi
      - PRG_AT2K2_SOLID.fbStage3.fbRTD_2.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2K2:L2SI:MMS:03:RTD:2:TEMP_RBV
      - ai
      - PRG_AT2K2_SOLID.fbStage3.fbRTD_2.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - AT2K2:L2SI:MMS:03:STATE:01:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:01:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:01:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:01:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:01:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:01:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2K2:L2SI:MMS:03:STATE:01:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:03:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:03:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2K2:L2SI:MMS:03:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:01:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:03:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:02:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:02:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:02:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:02:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:02:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:02:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2K2:L2SI:MMS:03:STATE:02:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:03:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:03:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2K2:L2SI:MMS:03:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:02:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:03:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:03:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:03:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:03:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:03:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:03:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:03:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2K2:L2SI:MMS:03:STATE:03:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:03:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:03:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2K2:L2SI:MMS:03:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:03:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:03:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:04:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:04:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:04:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:04:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:04:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:04:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2K2:L2SI:MMS:03:STATE:04:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:03:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:03:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2K2:L2SI:MMS:03:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:04:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:03:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:05:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:05:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:05:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:05:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:05:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:05:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2K2:L2SI:MMS:03:STATE:05:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:03:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:03:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2K2:L2SI:MMS:03:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:05:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:03:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:06:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:06:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:06:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:06:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:06:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:06:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2K2:L2SI:MMS:03:STATE:06:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:03:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:03:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2K2:L2SI:MMS:03:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:06:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:03:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:07:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:07:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:07:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:07:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:07:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:07:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2K2:L2SI:MMS:03:STATE:07:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:03:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:03:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2K2:L2SI:MMS:03:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:07:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:03:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:08:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:08:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:08:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:08:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:08:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:08:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2K2:L2SI:MMS:03:STATE:08:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:03:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:03:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2K2:L2SI:MMS:03:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:08:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:03:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:09:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:09:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:09:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:09:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:09:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:09:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2K2:L2SI:MMS:03:STATE:09:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:03:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:03:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2K2:L2SI:MMS:03:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:09:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:03:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:BUSY_RBV
      - bi
      - PRG_AT2K2_SOLID.fbStage3.fbState.bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2K2:L2SI:MMS:03:STATE:DONE_RBV
      - bi
      - PRG_AT2K2_SOLID.fbStage3.fbState.bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2K2:L2SI:MMS:03:STATE:ERR_RBV
      - bi
      - PRG_AT2K2_SOLID.fbStage3.fbState.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2K2:L2SI:MMS:03:STATE:ERRID_RBV
      - longin
      - PRG_AT2K2_SOLID.fbStage3.fbState.nErrorId
      - | io: input


    * - AT2K2:L2SI:MMS:03:STATE:ERRMSG_RBV
      - waveform
      - PRG_AT2K2_SOLID.fbStage3.fbState.sErrorMessage
      - | io: input


    * - AT2K2:L2SI:MMS:03:STATE:GET_RBV
      - mbbi
      - PRG_AT2K2_SOLID.fbStage3.fbState.enumGet
      - | io: input


    * - AT2K2:L2SI:MMS:03:STATE:RESET
      - bo
      - PRG_AT2K2_SOLID.fbStage3.fbState.bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:RESET_RBV
      - bi
      - PRG_AT2K2_SOLID.fbStage3.fbState.bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - AT2K2:L2SI:MMS:03:STATE:SET
      - mbbo
      - PRG_AT2K2_SOLID.fbStage3.fbState.enumSet
      - | io: output


    * - AT2K2:L2SI:MMS:03:STATE:SET_RBV
      - mbbi
      - PRG_AT2K2_SOLID.fbStage3.fbState.enumSet
      - | io: output


    * - AT2K2:L2SI:MMS:03:THICKNESS_RBV
      - ai
      - PRG_AT2K2_SOLID.fbStage3.fActiveFilterThickness_um
      - | field: EGU um
        | io: input


    * - AT2K2:L2SI:MMS:03:TRANSMISSION_RBV
      - ai
      - Filter transmission
      - | io: input


    * - AT2K2:L2SI:MMS:04:FILTERS:01:MATERIAL_RBV
      - waveform
      - Filter material name
      - | io: input


    * - AT2K2:L2SI:MMS:04:FILTERS:01:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | field: EGU um
        | io: input


    * - AT2K2:L2SI:MMS:04:FILTERS:02:MATERIAL_RBV
      - waveform
      - Filter material name
      - | io: input


    * - AT2K2:L2SI:MMS:04:FILTERS:02:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | field: EGU um
        | io: input


    * - AT2K2:L2SI:MMS:04:FILTERS:03:MATERIAL_RBV
      - waveform
      - Filter material name
      - | io: input


    * - AT2K2:L2SI:MMS:04:FILTERS:03:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | field: EGU um
        | io: input


    * - AT2K2:L2SI:MMS:04:FILTERS:04:MATERIAL_RBV
      - waveform
      - Filter material name
      - | io: input


    * - AT2K2:L2SI:MMS:04:FILTERS:04:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | field: EGU um
        | io: input


    * - AT2K2:L2SI:MMS:04:FILTERS:05:MATERIAL_RBV
      - waveform
      - Filter material name
      - | io: input


    * - AT2K2:L2SI:MMS:04:FILTERS:05:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | field: EGU um
        | io: input


    * - AT2K2:L2SI:MMS:04:FILTERS:06:MATERIAL_RBV
      - waveform
      - Filter material name
      - | io: input


    * - AT2K2:L2SI:MMS:04:FILTERS:06:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | field: EGU um
        | io: input


    * - AT2K2:L2SI:MMS:04:FILTERS:07:MATERIAL_RBV
      - waveform
      - Filter material name
      - | io: input


    * - AT2K2:L2SI:MMS:04:FILTERS:07:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | field: EGU um
        | io: input


    * - AT2K2:L2SI:MMS:04:FILTERS:08:MATERIAL_RBV
      - waveform
      - Filter material name
      - | io: input


    * - AT2K2:L2SI:MMS:04:FILTERS:08:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | field: EGU um
        | io: input


    * - AT2K2:L2SI:MMS:04:MATERIAL_RBV
      - waveform
      - PRG_AT2K2_SOLID.fbStage4.sActiveFilterMaterial
      - | io: input


    * - AT2K2:L2SI:MMS:04:PLC:bAllBackwardEnable_RBV
      - bi
      - Summary of axis permission to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:04:PLC:bAllEnable_RBV
      - bi
      - Summary of axis permission to have power
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:04:PLC:bAllForwardEnable_RBV
      - bi
      - Summary of axis permission to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:04:PLC:bBrakeRelease_RBV
      - bi
      - TRUE if brake released
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:04:PLC:bBusy_RBV
      - bi
      - TRUE if in the middle of a command
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:04:PLC:bDone_RBV
      - bi
      - TRUE if command finished successfully
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:04:PLC:bEnable
      - bo
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2K2:L2SI:MMS:04:PLC:bEnable_RBV
      - bi
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2K2:L2SI:MMS:04:PLC:bEnableDone_RBV
      - bi
      - TRUE if done enabling
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:04:PLC:bError_RBV
      - bi
      - TRUE if we
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:04:PLC:bExecute
      - bo
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2K2:L2SI:MMS:04:PLC:bExecute_RBV
      - bi
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2K2:L2SI:MMS:04:PLC:bGantryAxis_RBV
      - bi
      - TRUE if gantry EPS active
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:04:PLC:bGantryBackwardEnable_RBV
      - bi
      - TRUE if gantry ok to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:04:PLC:bGantryForwardEnable_RBV
      - bi
      - TRUE if gantry ok to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:04:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:04:PLC:bHome_RBV
      - bi
      - TRUE if at homing switch
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:04:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - AT2K2:L2SI:MMS:04:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - AT2K2:L2SI:MMS:04:PLC:bHomed_RBV
      - bi
      - TRUE if the motor has been homed
      - | io: input


    * - AT2K2:L2SI:MMS:04:PLC:bLimitBackwardEnable_RBV
      - bi
      - FALSE if reverse limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:04:PLC:bLimitForwardEnable_RBV
      - bi
      - FALSE if forward limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:04:PLC:bMoveCmd
      - bo
      - Start a move
      - | io: output


    * - AT2K2:L2SI:MMS:04:PLC:bMoveCmd_RBV
      - bi
      - Start a move
      - | io: output


    * - AT2K2:L2SI:MMS:04:PLC:bPowerSelf_RBV
      - bi
      - FALSE if axis is in PMPS
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:04:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2K2:L2SI:MMS:04:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2K2:L2SI:MMS:04:PLC:bSafetyReady_RBV
      - bi
      - TRUE if safe to start a move
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:04:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - AT2K2:L2SI:MMS:04:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - AT2K2:L2SI:MMS:04:PLC:fAcceleration
      - ao
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - AT2K2:L2SI:MMS:04:PLC:fAcceleration_RBV
      - ai
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - AT2K2:L2SI:MMS:04:PLC:fDeceleration
      - ao
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - AT2K2:L2SI:MMS:04:PLC:fDeceleration_RBV
      - ai
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - AT2K2:L2SI:MMS:04:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - AT2K2:L2SI:MMS:04:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - AT2K2:L2SI:MMS:04:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - AT2K2:L2SI:MMS:04:PLC:fPosition
      - ao
      - Used internally and by the IOC as the set position
      - | io: output


    * - AT2K2:L2SI:MMS:04:PLC:fPosition_RBV
      - ai
      - Used internally and by the IOC as the set position
      - | io: output


    * - AT2K2:L2SI:MMS:04:PLC:fVelocity
      - ao
      - Used internally and by the IOC to set velocity
      - | io: output


    * - AT2K2:L2SI:MMS:04:PLC:fVelocity_RBV
      - ai
      - Used internally and by the IOC to set velocity
      - | io: output


    * - AT2K2:L2SI:MMS:04:PLC:nBrakeMode_RBV
      - mbbi
      - Describes when the brake will be released
      - | io: input


    * - AT2K2:L2SI:MMS:04:PLC:nCmdData
      - longout
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - AT2K2:L2SI:MMS:04:PLC:nCmdData_RBV
      - longin
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - AT2K2:L2SI:MMS:04:PLC:nCommand
      - longout
      - Used internally and by the IOC to pick move type
      - | io: output


    * - AT2K2:L2SI:MMS:04:PLC:nCommand_RBV
      - longin
      - Used internally and by the IOC to pick move type
      - | io: output


    * - AT2K2:L2SI:MMS:04:PLC:nEnableMode_RBV
      - mbbi
      - Describes when the axis will automatically get power
      - | io: input


    * - AT2K2:L2SI:MMS:04:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - AT2K2:L2SI:MMS:04:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input


    * - AT2K2:L2SI:MMS:04:PLC:nHomingMode_RBV
      - mbbi
      - Describes our homing strategy
      - | io: input


    * - AT2K2:L2SI:MMS:04:PLC:nMotionAxisID_RBV
      - longin
      - Unique ID assigned to each axis in the NC
      - | io: input


    * - AT2K2:L2SI:MMS:04:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input


    * - AT2K2:L2SI:MMS:04:PLC:sName_RBV
      - waveform
      - PLC program name
      - | io: input


    * - AT2K2:L2SI:MMS:04:RTD:1:CONN_RBV
      - bi
      - PRG_AT2K2_SOLID.fbStage4.fbRTD_1.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - AT2K2:L2SI:MMS:04:RTD:1:ERR_RBV
      - bi
      - PRG_AT2K2_SOLID.fbStage4.fbRTD_1.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2K2:L2SI:MMS:04:RTD:1:TEMP_RBV
      - ai
      - PRG_AT2K2_SOLID.fbStage4.fbRTD_1.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - AT2K2:L2SI:MMS:04:RTD:2:CONN_RBV
      - bi
      - PRG_AT2K2_SOLID.fbStage4.fbRTD_2.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - AT2K2:L2SI:MMS:04:RTD:2:ERR_RBV
      - bi
      - PRG_AT2K2_SOLID.fbStage4.fbRTD_2.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2K2:L2SI:MMS:04:RTD:2:TEMP_RBV
      - ai
      - PRG_AT2K2_SOLID.fbStage4.fbRTD_2.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - AT2K2:L2SI:MMS:04:STATE:01:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:01:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:01:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:01:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:01:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:01:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2K2:L2SI:MMS:04:STATE:01:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:04:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:04:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2K2:L2SI:MMS:04:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:01:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:04:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:02:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:02:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:02:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:02:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:02:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:02:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2K2:L2SI:MMS:04:STATE:02:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:04:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:04:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2K2:L2SI:MMS:04:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:02:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:04:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:03:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:03:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:03:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:03:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:03:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:03:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2K2:L2SI:MMS:04:STATE:03:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:04:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:04:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2K2:L2SI:MMS:04:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:03:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:04:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:04:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:04:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:04:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:04:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:04:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:04:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2K2:L2SI:MMS:04:STATE:04:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:04:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:04:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2K2:L2SI:MMS:04:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:04:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:04:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:05:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:05:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:05:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:05:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:05:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:05:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2K2:L2SI:MMS:04:STATE:05:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:04:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:04:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2K2:L2SI:MMS:04:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:05:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:04:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:06:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:06:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:06:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:06:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:06:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:06:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2K2:L2SI:MMS:04:STATE:06:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:04:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:04:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2K2:L2SI:MMS:04:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:06:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:04:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:07:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:07:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:07:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:07:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:07:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:07:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2K2:L2SI:MMS:04:STATE:07:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:04:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:04:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2K2:L2SI:MMS:04:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:07:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:04:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:08:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:08:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:08:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:08:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:08:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:08:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2K2:L2SI:MMS:04:STATE:08:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:04:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:04:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2K2:L2SI:MMS:04:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:08:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:04:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:09:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:09:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:09:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:09:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:09:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:09:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2K2:L2SI:MMS:04:STATE:09:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:04:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:04:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2K2:L2SI:MMS:04:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:09:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2K2:L2SI:MMS:04:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:BUSY_RBV
      - bi
      - PRG_AT2K2_SOLID.fbStage4.fbState.bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2K2:L2SI:MMS:04:STATE:DONE_RBV
      - bi
      - PRG_AT2K2_SOLID.fbStage4.fbState.bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2K2:L2SI:MMS:04:STATE:ERR_RBV
      - bi
      - PRG_AT2K2_SOLID.fbStage4.fbState.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2K2:L2SI:MMS:04:STATE:ERRID_RBV
      - longin
      - PRG_AT2K2_SOLID.fbStage4.fbState.nErrorId
      - | io: input


    * - AT2K2:L2SI:MMS:04:STATE:ERRMSG_RBV
      - waveform
      - PRG_AT2K2_SOLID.fbStage4.fbState.sErrorMessage
      - | io: input


    * - AT2K2:L2SI:MMS:04:STATE:GET_RBV
      - mbbi
      - PRG_AT2K2_SOLID.fbStage4.fbState.enumGet
      - | io: input


    * - AT2K2:L2SI:MMS:04:STATE:RESET
      - bo
      - PRG_AT2K2_SOLID.fbStage4.fbState.bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:RESET_RBV
      - bi
      - PRG_AT2K2_SOLID.fbStage4.fbState.bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - AT2K2:L2SI:MMS:04:STATE:SET
      - mbbo
      - PRG_AT2K2_SOLID.fbStage4.fbState.enumSet
      - | io: output


    * - AT2K2:L2SI:MMS:04:STATE:SET_RBV
      - mbbi
      - PRG_AT2K2_SOLID.fbStage4.fbState.enumSet
      - | io: output


    * - AT2K2:L2SI:MMS:04:THICKNESS_RBV
      - ai
      - PRG_AT2K2_SOLID.fbStage4.fActiveFilterThickness_um
      - | field: EGU um
        | io: input


    * - AT2K2:L2SI:MMS:04:TRANSMISSION_RBV
      - ai
      - Filter transmission
      - | io: input


    * - IM1K1:PPM:CAM:CIL:PCT
      - ao
      - PRG_IM1K1_PPM.fbIM1K1.fbGige.fIlluminatorPercent
      - | EGU: %
        | io: output


    * - IM1K1:PPM:CAM:CIL:PCT_RBV
      - ai
      - PRG_IM1K1_PPM.fbIM1K1.fbGige.fIlluminatorPercent
      - | EGU: %
        | io: output


    * - IM1K1:PPM:CAM:PWR
      - bo
      - PRG_IM1K1_PPM.fbIM1K1.fbGige.bGigePower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - IM1K1:PPM:CAM:PWR_RBV
      - bi
      - PRG_IM1K1_PPM.fbIM1K1.fbGige.bGigePower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - IM1K1:PPM:MMS:PLC:bAllBackwardEnable_RBV
      - bi
      - Summary of axis permission to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:PLC:bAllEnable_RBV
      - bi
      - Summary of axis permission to have power
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:PLC:bAllForwardEnable_RBV
      - bi
      - Summary of axis permission to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:PLC:bBrakeRelease_RBV
      - bi
      - TRUE if brake released
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:PLC:bBusy_RBV
      - bi
      - TRUE if in the middle of a command
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:PLC:bDone_RBV
      - bi
      - TRUE if command finished successfully
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:PLC:bEnable
      - bo
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM1K1:PPM:MMS:PLC:bEnable_RBV
      - bi
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM1K1:PPM:MMS:PLC:bEnableDone_RBV
      - bi
      - TRUE if done enabling
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:PLC:bError_RBV
      - bi
      - TRUE if we
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:PLC:bExecute
      - bo
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM1K1:PPM:MMS:PLC:bExecute_RBV
      - bi
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM1K1:PPM:MMS:PLC:bGantryAxis_RBV
      - bi
      - TRUE if gantry EPS active
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:PLC:bGantryBackwardEnable_RBV
      - bi
      - TRUE if gantry ok to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:PLC:bGantryForwardEnable_RBV
      - bi
      - TRUE if gantry ok to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:PLC:bHome_RBV
      - bi
      - TRUE if at homing switch
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - IM1K1:PPM:MMS:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - IM1K1:PPM:MMS:PLC:bHomed_RBV
      - bi
      - TRUE if the motor has been homed
      - | io: input


    * - IM1K1:PPM:MMS:PLC:bLimitBackwardEnable_RBV
      - bi
      - FALSE if reverse limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:PLC:bLimitForwardEnable_RBV
      - bi
      - FALSE if forward limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:PLC:bMoveCmd
      - bo
      - Start a move
      - | io: output


    * - IM1K1:PPM:MMS:PLC:bMoveCmd_RBV
      - bi
      - Start a move
      - | io: output


    * - IM1K1:PPM:MMS:PLC:bPowerSelf_RBV
      - bi
      - FALSE if axis is in PMPS
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM1K1:PPM:MMS:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM1K1:PPM:MMS:PLC:bSafetyReady_RBV
      - bi
      - TRUE if safe to start a move
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - IM1K1:PPM:MMS:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - IM1K1:PPM:MMS:PLC:fAcceleration
      - ao
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - IM1K1:PPM:MMS:PLC:fAcceleration_RBV
      - ai
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - IM1K1:PPM:MMS:PLC:fDeceleration
      - ao
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - IM1K1:PPM:MMS:PLC:fDeceleration_RBV
      - ai
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - IM1K1:PPM:MMS:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - IM1K1:PPM:MMS:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - IM1K1:PPM:MMS:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - IM1K1:PPM:MMS:PLC:fPosition
      - ao
      - Used internally and by the IOC as the set position
      - | io: output


    * - IM1K1:PPM:MMS:PLC:fPosition_RBV
      - ai
      - Used internally and by the IOC as the set position
      - | io: output


    * - IM1K1:PPM:MMS:PLC:fVelocity
      - ao
      - Used internally and by the IOC to set velocity
      - | io: output


    * - IM1K1:PPM:MMS:PLC:fVelocity_RBV
      - ai
      - Used internally and by the IOC to set velocity
      - | io: output


    * - IM1K1:PPM:MMS:PLC:nBrakeMode_RBV
      - mbbi
      - Describes when the brake will be released
      - | io: input


    * - IM1K1:PPM:MMS:PLC:nCmdData
      - longout
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - IM1K1:PPM:MMS:PLC:nCmdData_RBV
      - longin
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - IM1K1:PPM:MMS:PLC:nCommand
      - longout
      - Used internally and by the IOC to pick move type
      - | io: output


    * - IM1K1:PPM:MMS:PLC:nCommand_RBV
      - longin
      - Used internally and by the IOC to pick move type
      - | io: output


    * - IM1K1:PPM:MMS:PLC:nEnableMode_RBV
      - mbbi
      - Describes when the axis will automatically get power
      - | io: input


    * - IM1K1:PPM:MMS:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - IM1K1:PPM:MMS:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input


    * - IM1K1:PPM:MMS:PLC:nHomingMode_RBV
      - mbbi
      - Describes our homing strategy
      - | io: input


    * - IM1K1:PPM:MMS:PLC:nMotionAxisID_RBV
      - longin
      - Unique ID assigned to each axis in the NC
      - | io: input


    * - IM1K1:PPM:MMS:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input


    * - IM1K1:PPM:MMS:PLC:sName_RBV
      - waveform
      - PLC program name
      - | io: input


    * - IM1K1:PPM:MMS:STATE:01:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:01:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:01:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:01:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:01:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1K1:PPM:MMS:STATE:01:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1K1:PPM:MMS:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM1K1:PPM:MMS:STATE:01:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM1K1:PPM:MMS:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:01:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:02:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:02:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:02:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:02:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:02:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1K1:PPM:MMS:STATE:02:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1K1:PPM:MMS:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM1K1:PPM:MMS:STATE:02:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM1K1:PPM:MMS:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:02:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:03:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:03:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:03:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:03:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:03:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1K1:PPM:MMS:STATE:03:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1K1:PPM:MMS:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM1K1:PPM:MMS:STATE:03:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM1K1:PPM:MMS:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:03:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:04:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:04:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:04:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:04:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:04:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1K1:PPM:MMS:STATE:04:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1K1:PPM:MMS:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM1K1:PPM:MMS:STATE:04:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM1K1:PPM:MMS:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:04:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:05:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:05:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:05:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:05:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:05:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1K1:PPM:MMS:STATE:05:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1K1:PPM:MMS:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM1K1:PPM:MMS:STATE:05:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM1K1:PPM:MMS:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:05:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:06:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:06:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:06:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:06:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:06:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1K1:PPM:MMS:STATE:06:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1K1:PPM:MMS:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM1K1:PPM:MMS:STATE:06:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM1K1:PPM:MMS:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:06:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:07:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:07:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:07:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:07:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:07:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1K1:PPM:MMS:STATE:07:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1K1:PPM:MMS:STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM1K1:PPM:MMS:STATE:07:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM1K1:PPM:MMS:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:07:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:08:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:08:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:08:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:08:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:08:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1K1:PPM:MMS:STATE:08:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1K1:PPM:MMS:STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM1K1:PPM:MMS:STATE:08:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM1K1:PPM:MMS:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:08:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:09:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:09:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:09:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:09:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:09:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1K1:PPM:MMS:STATE:09:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1K1:PPM:MMS:STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM1K1:PPM:MMS:STATE:09:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM1K1:PPM:MMS:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:09:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K1:PPM:MMS:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1K1:PPM:MMS:STATE:BUSY_RBV
      - bi
      - PRG_IM1K1_PPM.fbIM1K1.fbStates.bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - IM1K1:PPM:MMS:STATE:DONE_RBV
      - bi
      - PRG_IM1K1_PPM.fbIM1K1.fbStates.bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - IM1K1:PPM:MMS:STATE:ERR_RBV
      - bi
      - PRG_IM1K1_PPM.fbIM1K1.fbStates.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - IM1K1:PPM:MMS:STATE:ERRID_RBV
      - longin
      - PRG_IM1K1_PPM.fbIM1K1.fbStates.nErrorId
      - | io: input


    * - IM1K1:PPM:MMS:STATE:ERRMSG_RBV
      - waveform
      - PRG_IM1K1_PPM.fbIM1K1.fbStates.sErrorMessage
      - | io: input


    * - IM1K1:PPM:MMS:STATE:GET_RBV
      - mbbi
      - PRG_IM1K1_PPM.fbIM1K1.fbStates.enumGet
      - | io: input


    * - IM1K1:PPM:MMS:STATE:PMPS:ARB:ENABLE
      - bo
      - PRG_IM1K1_PPM.fbIM1K1.fbStates.bArbiterEnabled
      - | io: output


    * - IM1K1:PPM:MMS:STATE:PMPS:ARB:ENABLE_RBV
      - bi
      - PRG_IM1K1_PPM.fbIM1K1.fbStates.bArbiterEnabled
      - | io: output


    * - IM1K1:PPM:MMS:STATE:PMPS:MAINT
      - bo
      - PRG_IM1K1_PPM.fbIM1K1.fbStates.fbStatePMPS.bMaintMode
      - | io: output


    * - IM1K1:PPM:MMS:STATE:PMPS:MAINT_RBV
      - bi
      - PRG_IM1K1_PPM.fbIM1K1.fbStates.fbStatePMPS.bMaintMode
      - | io: output


    * - IM1K1:PPM:MMS:STATE:RESET
      - bo
      - PRG_IM1K1_PPM.fbIM1K1.fbStates.bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - IM1K1:PPM:MMS:STATE:RESET_RBV
      - bi
      - PRG_IM1K1_PPM.fbIM1K1.fbStates.bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - IM1K1:PPM:MMS:STATE:SET
      - mbbo
      - PRG_IM1K1_PPM.fbIM1K1.fbStates.enumSet
      - | io: output


    * - IM1K1:PPM:MMS:STATE:SET_RBV
      - mbbi
      - PRG_IM1K1_PPM.fbIM1K1.fbStates.enumSet
      - | io: output


    * - IM1K1:PPM:SFM:FLOW_RBV
      - ai
      - PRG_IM1K1_PPM.fbIM1K1.fbFlowMeter.fFlowRate
      - | io: input


    * - IM1K1:PPM:SFM:MA_RBV
      - longin
      - PRG_IM1K1_PPM.fbIM1K1.fbFlowMeter.fRaw
      - | io: input


    * - IM1K1:PPM:SPM:CALIB:MJ_RATIO
      - ao
      - PRG_IM1K1_PPM.fbIM1K1.fbPowerMeter.fCalibMJRatio
      - | io: output


    * - IM1K1:PPM:SPM:CALIB:MJ_RATIO_RBV
      - ai
      - PRG_IM1K1_PPM.fbIM1K1.fbPowerMeter.fCalibMJRatio
      - | io: output


    * - IM1K1:PPM:SPM:CALIB:OFFSET
      - ao
      - PRG_IM1K1_PPM.fbIM1K1.fbPowerMeter.fCalibRelOffset
      - | io: output


    * - IM1K1:PPM:SPM:CALIB:OFFSET_RBV
      - ai
      - PRG_IM1K1_PPM.fbIM1K1.fbPowerMeter.fCalibRelOffset
      - | io: output


    * - IM1K1:PPM:SPM:CALIB:RATIO
      - ao
      - PRG_IM1K1_PPM.fbIM1K1.fbPowerMeter.fCalibRelRatio
      - | io: output


    * - IM1K1:PPM:SPM:CALIB:RATIO_RBV
      - ai
      - PRG_IM1K1_PPM.fbIM1K1.fbPowerMeter.fCalibRelRatio
      - | io: output


    * - IM1K1:PPM:SPM:CALIB_BUFFER_RBV
      - waveform
      - PRG_IM1K1_PPM.fbIM1K1.fbPowerMeter.fCalibBaseBuffer
      - | io: input


    * - IM1K1:PPM:SPM:CALIB_RBV
      - ai
      - PRG_IM1K1_PPM.fbIM1K1.fbPowerMeter.fCalibBase
      - | io: input


    * - IM1K1:PPM:SPM:MJ_BUFFER_RBV
      - waveform
      - PRG_IM1K1_PPM.fbIM1K1.fbPowerMeter.fCalibMJBuffer
      - | field: EGU mJ
        | io: input


    * - IM1K1:PPM:SPM:MJ_RBV
      - ai
      - PRG_IM1K1_PPM.fbIM1K1.fbPowerMeter.fCalibMJ
      - | field: EGU mJ
        | io: input


    * - IM1K1:PPM:SPM:STC:CONN_RBV
      - bi
      - PRG_IM1K1_PPM.fbIM1K1.fbPowerMeter.fbThermoCouple.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - IM1K1:PPM:SPM:STC:ERR_RBV
      - bi
      - PRG_IM1K1_PPM.fbIM1K1.fbPowerMeter.fbThermoCouple.bError
      - | io: input


    * - IM1K1:PPM:SPM:STC:TEMP_RBV
      - ai
      - PRG_IM1K1_PPM.fbIM1K1.fbPowerMeter.fbThermoCouple.fTemp
      - | io: input


    * - IM1K1:PPM:SPM:VOLT_BUFFER_RBV
      - waveform
      - PRG_IM1K1_PPM.fbIM1K1.fbPowerMeter.fVoltageBuffer
      - | field: EGU mV
        | io: input


    * - IM1K1:PPM:SPM:VOLT_RBV
      - ai
      - PRG_IM1K1_PPM.fbIM1K1.fbPowerMeter.fVoltage
      - | field: EGU mV
        | io: input


    * - IM1K1:PPM:YAG:STC:CONN_RBV
      - bi
      - PRG_IM1K1_PPM.fbIM1K1.fbYagThermoCouple.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - IM1K1:PPM:YAG:STC:ERR_RBV
      - bi
      - PRG_IM1K1_PPM.fbIM1K1.fbYagThermoCouple.bError
      - | io: input


    * - IM1K1:PPM:YAG:STC:TEMP_RBV
      - ai
      - PRG_IM1K1_PPM.fbIM1K1.fbYagThermoCouple.fTemp
      - | io: input


    * - IM1K2:PPM:CAM:CIL:PCT
      - ao
      - PRG_IM1K2_PPM.fbIM1K2.fbGige.fIlluminatorPercent
      - | EGU: %
        | io: output


    * - IM1K2:PPM:CAM:CIL:PCT_RBV
      - ai
      - PRG_IM1K2_PPM.fbIM1K2.fbGige.fIlluminatorPercent
      - | EGU: %
        | io: output


    * - IM1K2:PPM:CAM:PWR
      - bo
      - PRG_IM1K2_PPM.fbIM1K2.fbGige.bGigePower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - IM1K2:PPM:CAM:PWR_RBV
      - bi
      - PRG_IM1K2_PPM.fbIM1K2.fbGige.bGigePower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - IM1K2:PPM:MMS:PLC:bAllBackwardEnable_RBV
      - bi
      - Summary of axis permission to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K2:PPM:MMS:PLC:bAllEnable_RBV
      - bi
      - Summary of axis permission to have power
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K2:PPM:MMS:PLC:bAllForwardEnable_RBV
      - bi
      - Summary of axis permission to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K2:PPM:MMS:PLC:bBrakeRelease_RBV
      - bi
      - TRUE if brake released
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K2:PPM:MMS:PLC:bBusy_RBV
      - bi
      - TRUE if in the middle of a command
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K2:PPM:MMS:PLC:bDone_RBV
      - bi
      - TRUE if command finished successfully
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K2:PPM:MMS:PLC:bEnable
      - bo
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM1K2:PPM:MMS:PLC:bEnable_RBV
      - bi
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM1K2:PPM:MMS:PLC:bEnableDone_RBV
      - bi
      - TRUE if done enabling
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K2:PPM:MMS:PLC:bError_RBV
      - bi
      - TRUE if we
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K2:PPM:MMS:PLC:bExecute
      - bo
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM1K2:PPM:MMS:PLC:bExecute_RBV
      - bi
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM1K2:PPM:MMS:PLC:bGantryAxis_RBV
      - bi
      - TRUE if gantry EPS active
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K2:PPM:MMS:PLC:bGantryBackwardEnable_RBV
      - bi
      - TRUE if gantry ok to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K2:PPM:MMS:PLC:bGantryForwardEnable_RBV
      - bi
      - TRUE if gantry ok to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K2:PPM:MMS:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K2:PPM:MMS:PLC:bHome_RBV
      - bi
      - TRUE if at homing switch
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K2:PPM:MMS:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - IM1K2:PPM:MMS:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - IM1K2:PPM:MMS:PLC:bHomed_RBV
      - bi
      - TRUE if the motor has been homed
      - | io: input


    * - IM1K2:PPM:MMS:PLC:bLimitBackwardEnable_RBV
      - bi
      - FALSE if reverse limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K2:PPM:MMS:PLC:bLimitForwardEnable_RBV
      - bi
      - FALSE if forward limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K2:PPM:MMS:PLC:bMoveCmd
      - bo
      - Start a move
      - | io: output


    * - IM1K2:PPM:MMS:PLC:bMoveCmd_RBV
      - bi
      - Start a move
      - | io: output


    * - IM1K2:PPM:MMS:PLC:bPowerSelf_RBV
      - bi
      - FALSE if axis is in PMPS
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K2:PPM:MMS:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM1K2:PPM:MMS:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM1K2:PPM:MMS:PLC:bSafetyReady_RBV
      - bi
      - TRUE if safe to start a move
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K2:PPM:MMS:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - IM1K2:PPM:MMS:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - IM1K2:PPM:MMS:PLC:fAcceleration
      - ao
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - IM1K2:PPM:MMS:PLC:fAcceleration_RBV
      - ai
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - IM1K2:PPM:MMS:PLC:fDeceleration
      - ao
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - IM1K2:PPM:MMS:PLC:fDeceleration_RBV
      - ai
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - IM1K2:PPM:MMS:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - IM1K2:PPM:MMS:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - IM1K2:PPM:MMS:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - IM1K2:PPM:MMS:PLC:fPosition
      - ao
      - Used internally and by the IOC as the set position
      - | io: output


    * - IM1K2:PPM:MMS:PLC:fPosition_RBV
      - ai
      - Used internally and by the IOC as the set position
      - | io: output


    * - IM1K2:PPM:MMS:PLC:fVelocity
      - ao
      - Used internally and by the IOC to set velocity
      - | io: output


    * - IM1K2:PPM:MMS:PLC:fVelocity_RBV
      - ai
      - Used internally and by the IOC to set velocity
      - | io: output


    * - IM1K2:PPM:MMS:PLC:nBrakeMode_RBV
      - mbbi
      - Describes when the brake will be released
      - | io: input


    * - IM1K2:PPM:MMS:PLC:nCmdData
      - longout
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - IM1K2:PPM:MMS:PLC:nCmdData_RBV
      - longin
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - IM1K2:PPM:MMS:PLC:nCommand
      - longout
      - Used internally and by the IOC to pick move type
      - | io: output


    * - IM1K2:PPM:MMS:PLC:nCommand_RBV
      - longin
      - Used internally and by the IOC to pick move type
      - | io: output


    * - IM1K2:PPM:MMS:PLC:nEnableMode_RBV
      - mbbi
      - Describes when the axis will automatically get power
      - | io: input


    * - IM1K2:PPM:MMS:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - IM1K2:PPM:MMS:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input


    * - IM1K2:PPM:MMS:PLC:nHomingMode_RBV
      - mbbi
      - Describes our homing strategy
      - | io: input


    * - IM1K2:PPM:MMS:PLC:nMotionAxisID_RBV
      - longin
      - Unique ID assigned to each axis in the NC
      - | io: input


    * - IM1K2:PPM:MMS:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input


    * - IM1K2:PPM:MMS:PLC:sName_RBV
      - waveform
      - PLC program name
      - | io: input


    * - IM1K2:PPM:MMS:STATE:01:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K2:PPM:MMS:STATE:01:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K2:PPM:MMS:STATE:01:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K2:PPM:MMS:STATE:01:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K2:PPM:MMS:STATE:01:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1K2:PPM:MMS:STATE:01:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1K2:PPM:MMS:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM1K2:PPM:MMS:STATE:01:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K2:PPM:MMS:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K2:PPM:MMS:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM1K2:PPM:MMS:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1K2:PPM:MMS:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1K2:PPM:MMS:STATE:01:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K2:PPM:MMS:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1K2:PPM:MMS:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1K2:PPM:MMS:STATE:02:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K2:PPM:MMS:STATE:02:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K2:PPM:MMS:STATE:02:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K2:PPM:MMS:STATE:02:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K2:PPM:MMS:STATE:02:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1K2:PPM:MMS:STATE:02:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1K2:PPM:MMS:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM1K2:PPM:MMS:STATE:02:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K2:PPM:MMS:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K2:PPM:MMS:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM1K2:PPM:MMS:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1K2:PPM:MMS:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1K2:PPM:MMS:STATE:02:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K2:PPM:MMS:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1K2:PPM:MMS:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1K2:PPM:MMS:STATE:03:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K2:PPM:MMS:STATE:03:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K2:PPM:MMS:STATE:03:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K2:PPM:MMS:STATE:03:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K2:PPM:MMS:STATE:03:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1K2:PPM:MMS:STATE:03:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1K2:PPM:MMS:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM1K2:PPM:MMS:STATE:03:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K2:PPM:MMS:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K2:PPM:MMS:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM1K2:PPM:MMS:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1K2:PPM:MMS:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1K2:PPM:MMS:STATE:03:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K2:PPM:MMS:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1K2:PPM:MMS:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1K2:PPM:MMS:STATE:04:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K2:PPM:MMS:STATE:04:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K2:PPM:MMS:STATE:04:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K2:PPM:MMS:STATE:04:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K2:PPM:MMS:STATE:04:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1K2:PPM:MMS:STATE:04:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1K2:PPM:MMS:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM1K2:PPM:MMS:STATE:04:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K2:PPM:MMS:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K2:PPM:MMS:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM1K2:PPM:MMS:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1K2:PPM:MMS:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1K2:PPM:MMS:STATE:04:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K2:PPM:MMS:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1K2:PPM:MMS:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1K2:PPM:MMS:STATE:05:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K2:PPM:MMS:STATE:05:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K2:PPM:MMS:STATE:05:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K2:PPM:MMS:STATE:05:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K2:PPM:MMS:STATE:05:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1K2:PPM:MMS:STATE:05:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1K2:PPM:MMS:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM1K2:PPM:MMS:STATE:05:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K2:PPM:MMS:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K2:PPM:MMS:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM1K2:PPM:MMS:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1K2:PPM:MMS:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1K2:PPM:MMS:STATE:05:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K2:PPM:MMS:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1K2:PPM:MMS:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1K2:PPM:MMS:STATE:06:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K2:PPM:MMS:STATE:06:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K2:PPM:MMS:STATE:06:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K2:PPM:MMS:STATE:06:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K2:PPM:MMS:STATE:06:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1K2:PPM:MMS:STATE:06:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1K2:PPM:MMS:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM1K2:PPM:MMS:STATE:06:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K2:PPM:MMS:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K2:PPM:MMS:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM1K2:PPM:MMS:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1K2:PPM:MMS:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1K2:PPM:MMS:STATE:06:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K2:PPM:MMS:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1K2:PPM:MMS:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1K2:PPM:MMS:STATE:07:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K2:PPM:MMS:STATE:07:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K2:PPM:MMS:STATE:07:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K2:PPM:MMS:STATE:07:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K2:PPM:MMS:STATE:07:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1K2:PPM:MMS:STATE:07:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1K2:PPM:MMS:STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM1K2:PPM:MMS:STATE:07:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K2:PPM:MMS:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K2:PPM:MMS:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM1K2:PPM:MMS:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1K2:PPM:MMS:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1K2:PPM:MMS:STATE:07:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K2:PPM:MMS:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1K2:PPM:MMS:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1K2:PPM:MMS:STATE:08:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K2:PPM:MMS:STATE:08:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K2:PPM:MMS:STATE:08:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K2:PPM:MMS:STATE:08:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K2:PPM:MMS:STATE:08:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1K2:PPM:MMS:STATE:08:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1K2:PPM:MMS:STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM1K2:PPM:MMS:STATE:08:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K2:PPM:MMS:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K2:PPM:MMS:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM1K2:PPM:MMS:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1K2:PPM:MMS:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1K2:PPM:MMS:STATE:08:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K2:PPM:MMS:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1K2:PPM:MMS:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1K2:PPM:MMS:STATE:09:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K2:PPM:MMS:STATE:09:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K2:PPM:MMS:STATE:09:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K2:PPM:MMS:STATE:09:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1K2:PPM:MMS:STATE:09:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1K2:PPM:MMS:STATE:09:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1K2:PPM:MMS:STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM1K2:PPM:MMS:STATE:09:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K2:PPM:MMS:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K2:PPM:MMS:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM1K2:PPM:MMS:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1K2:PPM:MMS:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1K2:PPM:MMS:STATE:09:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1K2:PPM:MMS:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1K2:PPM:MMS:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1K2:PPM:MMS:STATE:BUSY_RBV
      - bi
      - PRG_IM1K2_PPM.fbIM1K2.fbStates.bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - IM1K2:PPM:MMS:STATE:DONE_RBV
      - bi
      - PRG_IM1K2_PPM.fbIM1K2.fbStates.bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - IM1K2:PPM:MMS:STATE:ERR_RBV
      - bi
      - PRG_IM1K2_PPM.fbIM1K2.fbStates.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - IM1K2:PPM:MMS:STATE:ERRID_RBV
      - longin
      - PRG_IM1K2_PPM.fbIM1K2.fbStates.nErrorId
      - | io: input


    * - IM1K2:PPM:MMS:STATE:ERRMSG_RBV
      - waveform
      - PRG_IM1K2_PPM.fbIM1K2.fbStates.sErrorMessage
      - | io: input


    * - IM1K2:PPM:MMS:STATE:GET_RBV
      - mbbi
      - PRG_IM1K2_PPM.fbIM1K2.fbStates.enumGet
      - | io: input


    * - IM1K2:PPM:MMS:STATE:PMPS:ARB:ENABLE
      - bo
      - PRG_IM1K2_PPM.fbIM1K2.fbStates.bArbiterEnabled
      - | io: output


    * - IM1K2:PPM:MMS:STATE:PMPS:ARB:ENABLE_RBV
      - bi
      - PRG_IM1K2_PPM.fbIM1K2.fbStates.bArbiterEnabled
      - | io: output


    * - IM1K2:PPM:MMS:STATE:PMPS:MAINT
      - bo
      - PRG_IM1K2_PPM.fbIM1K2.fbStates.fbStatePMPS.bMaintMode
      - | io: output


    * - IM1K2:PPM:MMS:STATE:PMPS:MAINT_RBV
      - bi
      - PRG_IM1K2_PPM.fbIM1K2.fbStates.fbStatePMPS.bMaintMode
      - | io: output


    * - IM1K2:PPM:MMS:STATE:RESET
      - bo
      - PRG_IM1K2_PPM.fbIM1K2.fbStates.bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - IM1K2:PPM:MMS:STATE:RESET_RBV
      - bi
      - PRG_IM1K2_PPM.fbIM1K2.fbStates.bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - IM1K2:PPM:MMS:STATE:SET
      - mbbo
      - PRG_IM1K2_PPM.fbIM1K2.fbStates.enumSet
      - | io: output


    * - IM1K2:PPM:MMS:STATE:SET_RBV
      - mbbi
      - PRG_IM1K2_PPM.fbIM1K2.fbStates.enumSet
      - | io: output


    * - IM1K2:PPM:SFM:FLOW_RBV
      - ai
      - PRG_IM1K2_PPM.fbIM1K2.fbFlowMeter.fFlowRate
      - | io: input


    * - IM1K2:PPM:SFM:MA_RBV
      - longin
      - PRG_IM1K2_PPM.fbIM1K2.fbFlowMeter.fRaw
      - | io: input


    * - IM1K2:PPM:SPM:CALIB:MJ_RATIO
      - ao
      - PRG_IM1K2_PPM.fbIM1K2.fbPowerMeter.fCalibMJRatio
      - | io: output


    * - IM1K2:PPM:SPM:CALIB:MJ_RATIO_RBV
      - ai
      - PRG_IM1K2_PPM.fbIM1K2.fbPowerMeter.fCalibMJRatio
      - | io: output


    * - IM1K2:PPM:SPM:CALIB:OFFSET
      - ao
      - PRG_IM1K2_PPM.fbIM1K2.fbPowerMeter.fCalibRelOffset
      - | io: output


    * - IM1K2:PPM:SPM:CALIB:OFFSET_RBV
      - ai
      - PRG_IM1K2_PPM.fbIM1K2.fbPowerMeter.fCalibRelOffset
      - | io: output


    * - IM1K2:PPM:SPM:CALIB:RATIO
      - ao
      - PRG_IM1K2_PPM.fbIM1K2.fbPowerMeter.fCalibRelRatio
      - | io: output


    * - IM1K2:PPM:SPM:CALIB:RATIO_RBV
      - ai
      - PRG_IM1K2_PPM.fbIM1K2.fbPowerMeter.fCalibRelRatio
      - | io: output


    * - IM1K2:PPM:SPM:CALIB_BUFFER_RBV
      - waveform
      - PRG_IM1K2_PPM.fbIM1K2.fbPowerMeter.fCalibBaseBuffer
      - | io: input


    * - IM1K2:PPM:SPM:CALIB_RBV
      - ai
      - PRG_IM1K2_PPM.fbIM1K2.fbPowerMeter.fCalibBase
      - | io: input


    * - IM1K2:PPM:SPM:MJ_BUFFER_RBV
      - waveform
      - PRG_IM1K2_PPM.fbIM1K2.fbPowerMeter.fCalibMJBuffer
      - | field: EGU mJ
        | io: input


    * - IM1K2:PPM:SPM:MJ_RBV
      - ai
      - PRG_IM1K2_PPM.fbIM1K2.fbPowerMeter.fCalibMJ
      - | field: EGU mJ
        | io: input


    * - IM1K2:PPM:SPM:STC:CONN_RBV
      - bi
      - PRG_IM1K2_PPM.fbIM1K2.fbPowerMeter.fbThermoCouple.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - IM1K2:PPM:SPM:STC:ERR_RBV
      - bi
      - PRG_IM1K2_PPM.fbIM1K2.fbPowerMeter.fbThermoCouple.bError
      - | io: input


    * - IM1K2:PPM:SPM:STC:TEMP_RBV
      - ai
      - PRG_IM1K2_PPM.fbIM1K2.fbPowerMeter.fbThermoCouple.fTemp
      - | io: input


    * - IM1K2:PPM:SPM:VOLT_BUFFER_RBV
      - waveform
      - PRG_IM1K2_PPM.fbIM1K2.fbPowerMeter.fVoltageBuffer
      - | field: EGU mV
        | io: input


    * - IM1K2:PPM:SPM:VOLT_RBV
      - ai
      - PRG_IM1K2_PPM.fbIM1K2.fbPowerMeter.fVoltage
      - | field: EGU mV
        | io: input


    * - IM1K2:PPM:YAG:STC:CONN_RBV
      - bi
      - PRG_IM1K2_PPM.fbIM1K2.fbYagThermoCouple.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - IM1K2:PPM:YAG:STC:ERR_RBV
      - bi
      - PRG_IM1K2_PPM.fbIM1K2.fbYagThermoCouple.bError
      - | io: input


    * - IM1K2:PPM:YAG:STC:TEMP_RBV
      - ai
      - PRG_IM1K2_PPM.fbIM1K2.fbYagThermoCouple.fTemp
      - | io: input


    * - IM2K1:PPM:CAM:CIL:PCT
      - ao
      - PRG_IM2K1_PPM.fbIM2K1.fbGige.fIlluminatorPercent
      - | EGU: %
        | io: output


    * - IM2K1:PPM:CAM:CIL:PCT_RBV
      - ai
      - PRG_IM2K1_PPM.fbIM2K1.fbGige.fIlluminatorPercent
      - | EGU: %
        | io: output


    * - IM2K1:PPM:CAM:PWR
      - bo
      - PRG_IM2K1_PPM.fbIM2K1.fbGige.bGigePower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - IM2K1:PPM:CAM:PWR_RBV
      - bi
      - PRG_IM2K1_PPM.fbIM2K1.fbGige.bGigePower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - IM2K1:PPM:MMS:PLC:bAllBackwardEnable_RBV
      - bi
      - Summary of axis permission to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:PLC:bAllEnable_RBV
      - bi
      - Summary of axis permission to have power
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:PLC:bAllForwardEnable_RBV
      - bi
      - Summary of axis permission to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:PLC:bBrakeRelease_RBV
      - bi
      - TRUE if brake released
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:PLC:bBusy_RBV
      - bi
      - TRUE if in the middle of a command
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:PLC:bDone_RBV
      - bi
      - TRUE if command finished successfully
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:PLC:bEnable
      - bo
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM2K1:PPM:MMS:PLC:bEnable_RBV
      - bi
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM2K1:PPM:MMS:PLC:bEnableDone_RBV
      - bi
      - TRUE if done enabling
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:PLC:bError_RBV
      - bi
      - TRUE if we
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:PLC:bExecute
      - bo
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM2K1:PPM:MMS:PLC:bExecute_RBV
      - bi
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM2K1:PPM:MMS:PLC:bGantryAxis_RBV
      - bi
      - TRUE if gantry EPS active
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:PLC:bGantryBackwardEnable_RBV
      - bi
      - TRUE if gantry ok to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:PLC:bGantryForwardEnable_RBV
      - bi
      - TRUE if gantry ok to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:PLC:bHome_RBV
      - bi
      - TRUE if at homing switch
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - IM2K1:PPM:MMS:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - IM2K1:PPM:MMS:PLC:bHomed_RBV
      - bi
      - TRUE if the motor has been homed
      - | io: input


    * - IM2K1:PPM:MMS:PLC:bLimitBackwardEnable_RBV
      - bi
      - FALSE if reverse limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:PLC:bLimitForwardEnable_RBV
      - bi
      - FALSE if forward limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:PLC:bMoveCmd
      - bo
      - Start a move
      - | io: output


    * - IM2K1:PPM:MMS:PLC:bMoveCmd_RBV
      - bi
      - Start a move
      - | io: output


    * - IM2K1:PPM:MMS:PLC:bPowerSelf_RBV
      - bi
      - FALSE if axis is in PMPS
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM2K1:PPM:MMS:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM2K1:PPM:MMS:PLC:bSafetyReady_RBV
      - bi
      - TRUE if safe to start a move
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - IM2K1:PPM:MMS:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - IM2K1:PPM:MMS:PLC:fAcceleration
      - ao
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - IM2K1:PPM:MMS:PLC:fAcceleration_RBV
      - ai
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - IM2K1:PPM:MMS:PLC:fDeceleration
      - ao
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - IM2K1:PPM:MMS:PLC:fDeceleration_RBV
      - ai
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - IM2K1:PPM:MMS:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - IM2K1:PPM:MMS:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - IM2K1:PPM:MMS:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - IM2K1:PPM:MMS:PLC:fPosition
      - ao
      - Used internally and by the IOC as the set position
      - | io: output


    * - IM2K1:PPM:MMS:PLC:fPosition_RBV
      - ai
      - Used internally and by the IOC as the set position
      - | io: output


    * - IM2K1:PPM:MMS:PLC:fVelocity
      - ao
      - Used internally and by the IOC to set velocity
      - | io: output


    * - IM2K1:PPM:MMS:PLC:fVelocity_RBV
      - ai
      - Used internally and by the IOC to set velocity
      - | io: output


    * - IM2K1:PPM:MMS:PLC:nBrakeMode_RBV
      - mbbi
      - Describes when the brake will be released
      - | io: input


    * - IM2K1:PPM:MMS:PLC:nCmdData
      - longout
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - IM2K1:PPM:MMS:PLC:nCmdData_RBV
      - longin
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - IM2K1:PPM:MMS:PLC:nCommand
      - longout
      - Used internally and by the IOC to pick move type
      - | io: output


    * - IM2K1:PPM:MMS:PLC:nCommand_RBV
      - longin
      - Used internally and by the IOC to pick move type
      - | io: output


    * - IM2K1:PPM:MMS:PLC:nEnableMode_RBV
      - mbbi
      - Describes when the axis will automatically get power
      - | io: input


    * - IM2K1:PPM:MMS:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - IM2K1:PPM:MMS:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input


    * - IM2K1:PPM:MMS:PLC:nHomingMode_RBV
      - mbbi
      - Describes our homing strategy
      - | io: input


    * - IM2K1:PPM:MMS:PLC:nMotionAxisID_RBV
      - longin
      - Unique ID assigned to each axis in the NC
      - | io: input


    * - IM2K1:PPM:MMS:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input


    * - IM2K1:PPM:MMS:PLC:sName_RBV
      - waveform
      - PLC program name
      - | io: input


    * - IM2K1:PPM:MMS:STATE:01:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:01:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:01:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:01:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:01:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM2K1:PPM:MMS:STATE:01:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM2K1:PPM:MMS:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM2K1:PPM:MMS:STATE:01:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM2K1:PPM:MMS:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:01:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:02:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:02:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:02:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:02:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:02:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM2K1:PPM:MMS:STATE:02:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM2K1:PPM:MMS:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM2K1:PPM:MMS:STATE:02:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM2K1:PPM:MMS:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:02:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:03:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:03:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:03:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:03:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:03:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM2K1:PPM:MMS:STATE:03:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM2K1:PPM:MMS:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM2K1:PPM:MMS:STATE:03:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM2K1:PPM:MMS:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:03:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:04:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:04:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:04:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:04:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:04:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM2K1:PPM:MMS:STATE:04:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM2K1:PPM:MMS:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM2K1:PPM:MMS:STATE:04:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM2K1:PPM:MMS:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:04:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:05:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:05:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:05:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:05:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:05:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM2K1:PPM:MMS:STATE:05:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM2K1:PPM:MMS:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM2K1:PPM:MMS:STATE:05:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM2K1:PPM:MMS:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:05:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:06:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:06:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:06:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:06:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:06:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM2K1:PPM:MMS:STATE:06:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM2K1:PPM:MMS:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM2K1:PPM:MMS:STATE:06:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM2K1:PPM:MMS:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:06:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:07:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:07:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:07:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:07:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:07:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM2K1:PPM:MMS:STATE:07:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM2K1:PPM:MMS:STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM2K1:PPM:MMS:STATE:07:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM2K1:PPM:MMS:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:07:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:08:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:08:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:08:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:08:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:08:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM2K1:PPM:MMS:STATE:08:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM2K1:PPM:MMS:STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM2K1:PPM:MMS:STATE:08:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM2K1:PPM:MMS:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:08:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:09:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:09:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:09:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:09:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:09:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM2K1:PPM:MMS:STATE:09:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM2K1:PPM:MMS:STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM2K1:PPM:MMS:STATE:09:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM2K1:PPM:MMS:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:09:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K1:PPM:MMS:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM2K1:PPM:MMS:STATE:BUSY_RBV
      - bi
      - PRG_IM2K1_PPM.fbIM2K1.fbStates.bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - IM2K1:PPM:MMS:STATE:DONE_RBV
      - bi
      - PRG_IM2K1_PPM.fbIM2K1.fbStates.bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - IM2K1:PPM:MMS:STATE:ERR_RBV
      - bi
      - PRG_IM2K1_PPM.fbIM2K1.fbStates.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - IM2K1:PPM:MMS:STATE:ERRID_RBV
      - longin
      - PRG_IM2K1_PPM.fbIM2K1.fbStates.nErrorId
      - | io: input


    * - IM2K1:PPM:MMS:STATE:ERRMSG_RBV
      - waveform
      - PRG_IM2K1_PPM.fbIM2K1.fbStates.sErrorMessage
      - | io: input


    * - IM2K1:PPM:MMS:STATE:GET_RBV
      - mbbi
      - PRG_IM2K1_PPM.fbIM2K1.fbStates.enumGet
      - | io: input


    * - IM2K1:PPM:MMS:STATE:PMPS:ARB:ENABLE
      - bo
      - PRG_IM2K1_PPM.fbIM2K1.fbStates.bArbiterEnabled
      - | io: output


    * - IM2K1:PPM:MMS:STATE:PMPS:ARB:ENABLE_RBV
      - bi
      - PRG_IM2K1_PPM.fbIM2K1.fbStates.bArbiterEnabled
      - | io: output


    * - IM2K1:PPM:MMS:STATE:PMPS:MAINT
      - bo
      - PRG_IM2K1_PPM.fbIM2K1.fbStates.fbStatePMPS.bMaintMode
      - | io: output


    * - IM2K1:PPM:MMS:STATE:PMPS:MAINT_RBV
      - bi
      - PRG_IM2K1_PPM.fbIM2K1.fbStates.fbStatePMPS.bMaintMode
      - | io: output


    * - IM2K1:PPM:MMS:STATE:RESET
      - bo
      - PRG_IM2K1_PPM.fbIM2K1.fbStates.bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - IM2K1:PPM:MMS:STATE:RESET_RBV
      - bi
      - PRG_IM2K1_PPM.fbIM2K1.fbStates.bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - IM2K1:PPM:MMS:STATE:SET
      - mbbo
      - PRG_IM2K1_PPM.fbIM2K1.fbStates.enumSet
      - | io: output


    * - IM2K1:PPM:MMS:STATE:SET_RBV
      - mbbi
      - PRG_IM2K1_PPM.fbIM2K1.fbStates.enumSet
      - | io: output


    * - IM2K1:PPM:SFM:FLOW_RBV
      - ai
      - PRG_IM2K1_PPM.fbIM2K1.fbFlowMeter.fFlowRate
      - | io: input


    * - IM2K1:PPM:SFM:MA_RBV
      - longin
      - PRG_IM2K1_PPM.fbIM2K1.fbFlowMeter.fRaw
      - | io: input


    * - IM2K1:PPM:SPM:CALIB:MJ_RATIO
      - ao
      - PRG_IM2K1_PPM.fbIM2K1.fbPowerMeter.fCalibMJRatio
      - | io: output


    * - IM2K1:PPM:SPM:CALIB:MJ_RATIO_RBV
      - ai
      - PRG_IM2K1_PPM.fbIM2K1.fbPowerMeter.fCalibMJRatio
      - | io: output


    * - IM2K1:PPM:SPM:CALIB:OFFSET
      - ao
      - PRG_IM2K1_PPM.fbIM2K1.fbPowerMeter.fCalibRelOffset
      - | io: output


    * - IM2K1:PPM:SPM:CALIB:OFFSET_RBV
      - ai
      - PRG_IM2K1_PPM.fbIM2K1.fbPowerMeter.fCalibRelOffset
      - | io: output


    * - IM2K1:PPM:SPM:CALIB:RATIO
      - ao
      - PRG_IM2K1_PPM.fbIM2K1.fbPowerMeter.fCalibRelRatio
      - | io: output


    * - IM2K1:PPM:SPM:CALIB:RATIO_RBV
      - ai
      - PRG_IM2K1_PPM.fbIM2K1.fbPowerMeter.fCalibRelRatio
      - | io: output


    * - IM2K1:PPM:SPM:CALIB_BUFFER_RBV
      - waveform
      - PRG_IM2K1_PPM.fbIM2K1.fbPowerMeter.fCalibBaseBuffer
      - | io: input


    * - IM2K1:PPM:SPM:CALIB_RBV
      - ai
      - PRG_IM2K1_PPM.fbIM2K1.fbPowerMeter.fCalibBase
      - | io: input


    * - IM2K1:PPM:SPM:MJ_BUFFER_RBV
      - waveform
      - PRG_IM2K1_PPM.fbIM2K1.fbPowerMeter.fCalibMJBuffer
      - | field: EGU mJ
        | io: input


    * - IM2K1:PPM:SPM:MJ_RBV
      - ai
      - PRG_IM2K1_PPM.fbIM2K1.fbPowerMeter.fCalibMJ
      - | field: EGU mJ
        | io: input


    * - IM2K1:PPM:SPM:STC:CONN_RBV
      - bi
      - PRG_IM2K1_PPM.fbIM2K1.fbPowerMeter.fbThermoCouple.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - IM2K1:PPM:SPM:STC:ERR_RBV
      - bi
      - PRG_IM2K1_PPM.fbIM2K1.fbPowerMeter.fbThermoCouple.bError
      - | io: input


    * - IM2K1:PPM:SPM:STC:TEMP_RBV
      - ai
      - PRG_IM2K1_PPM.fbIM2K1.fbPowerMeter.fbThermoCouple.fTemp
      - | io: input


    * - IM2K1:PPM:SPM:VOLT_BUFFER_RBV
      - waveform
      - PRG_IM2K1_PPM.fbIM2K1.fbPowerMeter.fVoltageBuffer
      - | field: EGU mV
        | io: input


    * - IM2K1:PPM:SPM:VOLT_RBV
      - ai
      - PRG_IM2K1_PPM.fbIM2K1.fbPowerMeter.fVoltage
      - | field: EGU mV
        | io: input


    * - IM2K1:PPM:YAG:STC:CONN_RBV
      - bi
      - PRG_IM2K1_PPM.fbIM2K1.fbYagThermoCouple.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - IM2K1:PPM:YAG:STC:ERR_RBV
      - bi
      - PRG_IM2K1_PPM.fbIM2K1.fbYagThermoCouple.bError
      - | io: input


    * - IM2K1:PPM:YAG:STC:TEMP_RBV
      - ai
      - PRG_IM2K1_PPM.fbIM2K1.fbYagThermoCouple.fTemp
      - | io: input


    * - IM2K2:PPM:CAM:CIL:PCT
      - ao
      - PRG_IM2K2_PPM.fbIM2K2.fbGige.fIlluminatorPercent
      - | EGU: %
        | io: output


    * - IM2K2:PPM:CAM:CIL:PCT_RBV
      - ai
      - PRG_IM2K2_PPM.fbIM2K2.fbGige.fIlluminatorPercent
      - | EGU: %
        | io: output


    * - IM2K2:PPM:CAM:PWR
      - bo
      - PRG_IM2K2_PPM.fbIM2K2.fbGige.bGigePower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - IM2K2:PPM:CAM:PWR_RBV
      - bi
      - PRG_IM2K2_PPM.fbIM2K2.fbGige.bGigePower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - IM2K2:PPM:MMS:PLC:bAllBackwardEnable_RBV
      - bi
      - Summary of axis permission to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K2:PPM:MMS:PLC:bAllEnable_RBV
      - bi
      - Summary of axis permission to have power
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K2:PPM:MMS:PLC:bAllForwardEnable_RBV
      - bi
      - Summary of axis permission to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K2:PPM:MMS:PLC:bBrakeRelease_RBV
      - bi
      - TRUE if brake released
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K2:PPM:MMS:PLC:bBusy_RBV
      - bi
      - TRUE if in the middle of a command
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K2:PPM:MMS:PLC:bDone_RBV
      - bi
      - TRUE if command finished successfully
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K2:PPM:MMS:PLC:bEnable
      - bo
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM2K2:PPM:MMS:PLC:bEnable_RBV
      - bi
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM2K2:PPM:MMS:PLC:bEnableDone_RBV
      - bi
      - TRUE if done enabling
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K2:PPM:MMS:PLC:bError_RBV
      - bi
      - TRUE if we
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K2:PPM:MMS:PLC:bExecute
      - bo
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM2K2:PPM:MMS:PLC:bExecute_RBV
      - bi
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM2K2:PPM:MMS:PLC:bGantryAxis_RBV
      - bi
      - TRUE if gantry EPS active
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K2:PPM:MMS:PLC:bGantryBackwardEnable_RBV
      - bi
      - TRUE if gantry ok to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K2:PPM:MMS:PLC:bGantryForwardEnable_RBV
      - bi
      - TRUE if gantry ok to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K2:PPM:MMS:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K2:PPM:MMS:PLC:bHome_RBV
      - bi
      - TRUE if at homing switch
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K2:PPM:MMS:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - IM2K2:PPM:MMS:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - IM2K2:PPM:MMS:PLC:bHomed_RBV
      - bi
      - TRUE if the motor has been homed
      - | io: input


    * - IM2K2:PPM:MMS:PLC:bLimitBackwardEnable_RBV
      - bi
      - FALSE if reverse limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K2:PPM:MMS:PLC:bLimitForwardEnable_RBV
      - bi
      - FALSE if forward limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K2:PPM:MMS:PLC:bMoveCmd
      - bo
      - Start a move
      - | io: output


    * - IM2K2:PPM:MMS:PLC:bMoveCmd_RBV
      - bi
      - Start a move
      - | io: output


    * - IM2K2:PPM:MMS:PLC:bPowerSelf_RBV
      - bi
      - FALSE if axis is in PMPS
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K2:PPM:MMS:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM2K2:PPM:MMS:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM2K2:PPM:MMS:PLC:bSafetyReady_RBV
      - bi
      - TRUE if safe to start a move
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K2:PPM:MMS:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - IM2K2:PPM:MMS:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - IM2K2:PPM:MMS:PLC:fAcceleration
      - ao
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - IM2K2:PPM:MMS:PLC:fAcceleration_RBV
      - ai
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - IM2K2:PPM:MMS:PLC:fDeceleration
      - ao
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - IM2K2:PPM:MMS:PLC:fDeceleration_RBV
      - ai
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - IM2K2:PPM:MMS:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - IM2K2:PPM:MMS:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - IM2K2:PPM:MMS:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - IM2K2:PPM:MMS:PLC:fPosition
      - ao
      - Used internally and by the IOC as the set position
      - | io: output


    * - IM2K2:PPM:MMS:PLC:fPosition_RBV
      - ai
      - Used internally and by the IOC as the set position
      - | io: output


    * - IM2K2:PPM:MMS:PLC:fVelocity
      - ao
      - Used internally and by the IOC to set velocity
      - | io: output


    * - IM2K2:PPM:MMS:PLC:fVelocity_RBV
      - ai
      - Used internally and by the IOC to set velocity
      - | io: output


    * - IM2K2:PPM:MMS:PLC:nBrakeMode_RBV
      - mbbi
      - Describes when the brake will be released
      - | io: input


    * - IM2K2:PPM:MMS:PLC:nCmdData
      - longout
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - IM2K2:PPM:MMS:PLC:nCmdData_RBV
      - longin
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - IM2K2:PPM:MMS:PLC:nCommand
      - longout
      - Used internally and by the IOC to pick move type
      - | io: output


    * - IM2K2:PPM:MMS:PLC:nCommand_RBV
      - longin
      - Used internally and by the IOC to pick move type
      - | io: output


    * - IM2K2:PPM:MMS:PLC:nEnableMode_RBV
      - mbbi
      - Describes when the axis will automatically get power
      - | io: input


    * - IM2K2:PPM:MMS:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - IM2K2:PPM:MMS:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input


    * - IM2K2:PPM:MMS:PLC:nHomingMode_RBV
      - mbbi
      - Describes our homing strategy
      - | io: input


    * - IM2K2:PPM:MMS:PLC:nMotionAxisID_RBV
      - longin
      - Unique ID assigned to each axis in the NC
      - | io: input


    * - IM2K2:PPM:MMS:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input


    * - IM2K2:PPM:MMS:PLC:sName_RBV
      - waveform
      - PLC program name
      - | io: input


    * - IM2K2:PPM:MMS:STATE:01:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K2:PPM:MMS:STATE:01:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K2:PPM:MMS:STATE:01:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K2:PPM:MMS:STATE:01:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K2:PPM:MMS:STATE:01:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM2K2:PPM:MMS:STATE:01:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM2K2:PPM:MMS:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM2K2:PPM:MMS:STATE:01:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K2:PPM:MMS:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K2:PPM:MMS:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM2K2:PPM:MMS:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM2K2:PPM:MMS:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM2K2:PPM:MMS:STATE:01:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K2:PPM:MMS:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM2K2:PPM:MMS:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM2K2:PPM:MMS:STATE:02:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K2:PPM:MMS:STATE:02:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K2:PPM:MMS:STATE:02:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K2:PPM:MMS:STATE:02:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K2:PPM:MMS:STATE:02:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM2K2:PPM:MMS:STATE:02:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM2K2:PPM:MMS:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM2K2:PPM:MMS:STATE:02:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K2:PPM:MMS:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K2:PPM:MMS:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM2K2:PPM:MMS:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM2K2:PPM:MMS:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM2K2:PPM:MMS:STATE:02:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K2:PPM:MMS:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM2K2:PPM:MMS:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM2K2:PPM:MMS:STATE:03:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K2:PPM:MMS:STATE:03:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K2:PPM:MMS:STATE:03:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K2:PPM:MMS:STATE:03:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K2:PPM:MMS:STATE:03:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM2K2:PPM:MMS:STATE:03:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM2K2:PPM:MMS:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM2K2:PPM:MMS:STATE:03:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K2:PPM:MMS:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K2:PPM:MMS:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM2K2:PPM:MMS:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM2K2:PPM:MMS:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM2K2:PPM:MMS:STATE:03:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K2:PPM:MMS:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM2K2:PPM:MMS:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM2K2:PPM:MMS:STATE:04:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K2:PPM:MMS:STATE:04:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K2:PPM:MMS:STATE:04:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K2:PPM:MMS:STATE:04:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K2:PPM:MMS:STATE:04:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM2K2:PPM:MMS:STATE:04:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM2K2:PPM:MMS:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM2K2:PPM:MMS:STATE:04:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K2:PPM:MMS:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K2:PPM:MMS:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM2K2:PPM:MMS:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM2K2:PPM:MMS:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM2K2:PPM:MMS:STATE:04:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K2:PPM:MMS:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM2K2:PPM:MMS:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM2K2:PPM:MMS:STATE:05:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K2:PPM:MMS:STATE:05:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K2:PPM:MMS:STATE:05:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K2:PPM:MMS:STATE:05:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K2:PPM:MMS:STATE:05:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM2K2:PPM:MMS:STATE:05:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM2K2:PPM:MMS:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM2K2:PPM:MMS:STATE:05:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K2:PPM:MMS:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K2:PPM:MMS:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM2K2:PPM:MMS:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM2K2:PPM:MMS:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM2K2:PPM:MMS:STATE:05:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K2:PPM:MMS:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM2K2:PPM:MMS:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM2K2:PPM:MMS:STATE:06:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K2:PPM:MMS:STATE:06:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K2:PPM:MMS:STATE:06:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K2:PPM:MMS:STATE:06:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K2:PPM:MMS:STATE:06:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM2K2:PPM:MMS:STATE:06:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM2K2:PPM:MMS:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM2K2:PPM:MMS:STATE:06:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K2:PPM:MMS:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K2:PPM:MMS:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM2K2:PPM:MMS:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM2K2:PPM:MMS:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM2K2:PPM:MMS:STATE:06:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K2:PPM:MMS:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM2K2:PPM:MMS:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM2K2:PPM:MMS:STATE:07:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K2:PPM:MMS:STATE:07:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K2:PPM:MMS:STATE:07:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K2:PPM:MMS:STATE:07:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K2:PPM:MMS:STATE:07:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM2K2:PPM:MMS:STATE:07:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM2K2:PPM:MMS:STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM2K2:PPM:MMS:STATE:07:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K2:PPM:MMS:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K2:PPM:MMS:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM2K2:PPM:MMS:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM2K2:PPM:MMS:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM2K2:PPM:MMS:STATE:07:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K2:PPM:MMS:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM2K2:PPM:MMS:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM2K2:PPM:MMS:STATE:08:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K2:PPM:MMS:STATE:08:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K2:PPM:MMS:STATE:08:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K2:PPM:MMS:STATE:08:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K2:PPM:MMS:STATE:08:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM2K2:PPM:MMS:STATE:08:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM2K2:PPM:MMS:STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM2K2:PPM:MMS:STATE:08:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K2:PPM:MMS:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K2:PPM:MMS:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM2K2:PPM:MMS:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM2K2:PPM:MMS:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM2K2:PPM:MMS:STATE:08:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K2:PPM:MMS:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM2K2:PPM:MMS:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM2K2:PPM:MMS:STATE:09:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K2:PPM:MMS:STATE:09:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K2:PPM:MMS:STATE:09:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K2:PPM:MMS:STATE:09:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2K2:PPM:MMS:STATE:09:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM2K2:PPM:MMS:STATE:09:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM2K2:PPM:MMS:STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM2K2:PPM:MMS:STATE:09:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K2:PPM:MMS:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K2:PPM:MMS:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM2K2:PPM:MMS:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM2K2:PPM:MMS:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM2K2:PPM:MMS:STATE:09:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2K2:PPM:MMS:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM2K2:PPM:MMS:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM2K2:PPM:MMS:STATE:BUSY_RBV
      - bi
      - PRG_IM2K2_PPM.fbIM2K2.fbStates.bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - IM2K2:PPM:MMS:STATE:DONE_RBV
      - bi
      - PRG_IM2K2_PPM.fbIM2K2.fbStates.bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - IM2K2:PPM:MMS:STATE:ERR_RBV
      - bi
      - PRG_IM2K2_PPM.fbIM2K2.fbStates.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - IM2K2:PPM:MMS:STATE:ERRID_RBV
      - longin
      - PRG_IM2K2_PPM.fbIM2K2.fbStates.nErrorId
      - | io: input


    * - IM2K2:PPM:MMS:STATE:ERRMSG_RBV
      - waveform
      - PRG_IM2K2_PPM.fbIM2K2.fbStates.sErrorMessage
      - | io: input


    * - IM2K2:PPM:MMS:STATE:GET_RBV
      - mbbi
      - PRG_IM2K2_PPM.fbIM2K2.fbStates.enumGet
      - | io: input


    * - IM2K2:PPM:MMS:STATE:PMPS:ARB:ENABLE
      - bo
      - PRG_IM2K2_PPM.fbIM2K2.fbStates.bArbiterEnabled
      - | io: output


    * - IM2K2:PPM:MMS:STATE:PMPS:ARB:ENABLE_RBV
      - bi
      - PRG_IM2K2_PPM.fbIM2K2.fbStates.bArbiterEnabled
      - | io: output


    * - IM2K2:PPM:MMS:STATE:PMPS:MAINT
      - bo
      - PRG_IM2K2_PPM.fbIM2K2.fbStates.fbStatePMPS.bMaintMode
      - | io: output


    * - IM2K2:PPM:MMS:STATE:PMPS:MAINT_RBV
      - bi
      - PRG_IM2K2_PPM.fbIM2K2.fbStates.fbStatePMPS.bMaintMode
      - | io: output


    * - IM2K2:PPM:MMS:STATE:RESET
      - bo
      - PRG_IM2K2_PPM.fbIM2K2.fbStates.bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - IM2K2:PPM:MMS:STATE:RESET_RBV
      - bi
      - PRG_IM2K2_PPM.fbIM2K2.fbStates.bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - IM2K2:PPM:MMS:STATE:SET
      - mbbo
      - PRG_IM2K2_PPM.fbIM2K2.fbStates.enumSet
      - | io: output


    * - IM2K2:PPM:MMS:STATE:SET_RBV
      - mbbi
      - PRG_IM2K2_PPM.fbIM2K2.fbStates.enumSet
      - | io: output


    * - IM2K2:PPM:SFM:FLOW_RBV
      - ai
      - PRG_IM2K2_PPM.fbIM2K2.fbFlowMeter.fFlowRate
      - | io: input


    * - IM2K2:PPM:SFM:MA_RBV
      - longin
      - PRG_IM2K2_PPM.fbIM2K2.fbFlowMeter.fRaw
      - | io: input


    * - IM2K2:PPM:SPM:CALIB:MJ_RATIO
      - ao
      - PRG_IM2K2_PPM.fbIM2K2.fbPowerMeter.fCalibMJRatio
      - | io: output


    * - IM2K2:PPM:SPM:CALIB:MJ_RATIO_RBV
      - ai
      - PRG_IM2K2_PPM.fbIM2K2.fbPowerMeter.fCalibMJRatio
      - | io: output


    * - IM2K2:PPM:SPM:CALIB:OFFSET
      - ao
      - PRG_IM2K2_PPM.fbIM2K2.fbPowerMeter.fCalibRelOffset
      - | io: output


    * - IM2K2:PPM:SPM:CALIB:OFFSET_RBV
      - ai
      - PRG_IM2K2_PPM.fbIM2K2.fbPowerMeter.fCalibRelOffset
      - | io: output


    * - IM2K2:PPM:SPM:CALIB:RATIO
      - ao
      - PRG_IM2K2_PPM.fbIM2K2.fbPowerMeter.fCalibRelRatio
      - | io: output


    * - IM2K2:PPM:SPM:CALIB:RATIO_RBV
      - ai
      - PRG_IM2K2_PPM.fbIM2K2.fbPowerMeter.fCalibRelRatio
      - | io: output


    * - IM2K2:PPM:SPM:CALIB_BUFFER_RBV
      - waveform
      - PRG_IM2K2_PPM.fbIM2K2.fbPowerMeter.fCalibBaseBuffer
      - | io: input


    * - IM2K2:PPM:SPM:CALIB_RBV
      - ai
      - PRG_IM2K2_PPM.fbIM2K2.fbPowerMeter.fCalibBase
      - | io: input


    * - IM2K2:PPM:SPM:MJ_BUFFER_RBV
      - waveform
      - PRG_IM2K2_PPM.fbIM2K2.fbPowerMeter.fCalibMJBuffer
      - | field: EGU mJ
        | io: input


    * - IM2K2:PPM:SPM:MJ_RBV
      - ai
      - PRG_IM2K2_PPM.fbIM2K2.fbPowerMeter.fCalibMJ
      - | field: EGU mJ
        | io: input


    * - IM2K2:PPM:SPM:STC:CONN_RBV
      - bi
      - PRG_IM2K2_PPM.fbIM2K2.fbPowerMeter.fbThermoCouple.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - IM2K2:PPM:SPM:STC:ERR_RBV
      - bi
      - PRG_IM2K2_PPM.fbIM2K2.fbPowerMeter.fbThermoCouple.bError
      - | io: input


    * - IM2K2:PPM:SPM:STC:TEMP_RBV
      - ai
      - PRG_IM2K2_PPM.fbIM2K2.fbPowerMeter.fbThermoCouple.fTemp
      - | io: input


    * - IM2K2:PPM:SPM:VOLT_BUFFER_RBV
      - waveform
      - PRG_IM2K2_PPM.fbIM2K2.fbPowerMeter.fVoltageBuffer
      - | field: EGU mV
        | io: input


    * - IM2K2:PPM:SPM:VOLT_RBV
      - ai
      - PRG_IM2K2_PPM.fbIM2K2.fbPowerMeter.fVoltage
      - | field: EGU mV
        | io: input


    * - IM2K2:PPM:YAG:STC:CONN_RBV
      - bi
      - PRG_IM2K2_PPM.fbIM2K2.fbYagThermoCouple.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - IM2K2:PPM:YAG:STC:ERR_RBV
      - bi
      - PRG_IM2K2_PPM.fbIM2K2.fbYagThermoCouple.bError
      - | io: input


    * - IM2K2:PPM:YAG:STC:TEMP_RBV
      - ai
      - PRG_IM2K2_PPM.fbIM2K2.fbYagThermoCouple.fTemp
      - | io: input


    * - IM3K2:PPM:CAM:CIL:PCT
      - ao
      - PRG_IM3K2_PPM.fbIM3K2.fbGige.fIlluminatorPercent
      - | EGU: %
        | io: output


    * - IM3K2:PPM:CAM:CIL:PCT_RBV
      - ai
      - PRG_IM3K2_PPM.fbIM3K2.fbGige.fIlluminatorPercent
      - | EGU: %
        | io: output


    * - IM3K2:PPM:CAM:PWR
      - bo
      - PRG_IM3K2_PPM.fbIM3K2.fbGige.bGigePower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - IM3K2:PPM:CAM:PWR_RBV
      - bi
      - PRG_IM3K2_PPM.fbIM3K2.fbGige.bGigePower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - IM3K2:PPM:MMS:PLC:bAllBackwardEnable_RBV
      - bi
      - Summary of axis permission to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3K2:PPM:MMS:PLC:bAllEnable_RBV
      - bi
      - Summary of axis permission to have power
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3K2:PPM:MMS:PLC:bAllForwardEnable_RBV
      - bi
      - Summary of axis permission to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3K2:PPM:MMS:PLC:bBrakeRelease_RBV
      - bi
      - TRUE if brake released
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3K2:PPM:MMS:PLC:bBusy_RBV
      - bi
      - TRUE if in the middle of a command
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3K2:PPM:MMS:PLC:bDone_RBV
      - bi
      - TRUE if command finished successfully
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3K2:PPM:MMS:PLC:bEnable
      - bo
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM3K2:PPM:MMS:PLC:bEnable_RBV
      - bi
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM3K2:PPM:MMS:PLC:bEnableDone_RBV
      - bi
      - TRUE if done enabling
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3K2:PPM:MMS:PLC:bError_RBV
      - bi
      - TRUE if we
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3K2:PPM:MMS:PLC:bExecute
      - bo
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM3K2:PPM:MMS:PLC:bExecute_RBV
      - bi
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM3K2:PPM:MMS:PLC:bGantryAxis_RBV
      - bi
      - TRUE if gantry EPS active
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3K2:PPM:MMS:PLC:bGantryBackwardEnable_RBV
      - bi
      - TRUE if gantry ok to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3K2:PPM:MMS:PLC:bGantryForwardEnable_RBV
      - bi
      - TRUE if gantry ok to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3K2:PPM:MMS:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3K2:PPM:MMS:PLC:bHome_RBV
      - bi
      - TRUE if at homing switch
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3K2:PPM:MMS:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - IM3K2:PPM:MMS:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - IM3K2:PPM:MMS:PLC:bHomed_RBV
      - bi
      - TRUE if the motor has been homed
      - | io: input


    * - IM3K2:PPM:MMS:PLC:bLimitBackwardEnable_RBV
      - bi
      - FALSE if reverse limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3K2:PPM:MMS:PLC:bLimitForwardEnable_RBV
      - bi
      - FALSE if forward limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3K2:PPM:MMS:PLC:bMoveCmd
      - bo
      - Start a move
      - | io: output


    * - IM3K2:PPM:MMS:PLC:bMoveCmd_RBV
      - bi
      - Start a move
      - | io: output


    * - IM3K2:PPM:MMS:PLC:bPowerSelf_RBV
      - bi
      - FALSE if axis is in PMPS
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3K2:PPM:MMS:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM3K2:PPM:MMS:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM3K2:PPM:MMS:PLC:bSafetyReady_RBV
      - bi
      - TRUE if safe to start a move
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3K2:PPM:MMS:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - IM3K2:PPM:MMS:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - IM3K2:PPM:MMS:PLC:fAcceleration
      - ao
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - IM3K2:PPM:MMS:PLC:fAcceleration_RBV
      - ai
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - IM3K2:PPM:MMS:PLC:fDeceleration
      - ao
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - IM3K2:PPM:MMS:PLC:fDeceleration_RBV
      - ai
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - IM3K2:PPM:MMS:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - IM3K2:PPM:MMS:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - IM3K2:PPM:MMS:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - IM3K2:PPM:MMS:PLC:fPosition
      - ao
      - Used internally and by the IOC as the set position
      - | io: output


    * - IM3K2:PPM:MMS:PLC:fPosition_RBV
      - ai
      - Used internally and by the IOC as the set position
      - | io: output


    * - IM3K2:PPM:MMS:PLC:fVelocity
      - ao
      - Used internally and by the IOC to set velocity
      - | io: output


    * - IM3K2:PPM:MMS:PLC:fVelocity_RBV
      - ai
      - Used internally and by the IOC to set velocity
      - | io: output


    * - IM3K2:PPM:MMS:PLC:nBrakeMode_RBV
      - mbbi
      - Describes when the brake will be released
      - | io: input


    * - IM3K2:PPM:MMS:PLC:nCmdData
      - longout
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - IM3K2:PPM:MMS:PLC:nCmdData_RBV
      - longin
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - IM3K2:PPM:MMS:PLC:nCommand
      - longout
      - Used internally and by the IOC to pick move type
      - | io: output


    * - IM3K2:PPM:MMS:PLC:nCommand_RBV
      - longin
      - Used internally and by the IOC to pick move type
      - | io: output


    * - IM3K2:PPM:MMS:PLC:nEnableMode_RBV
      - mbbi
      - Describes when the axis will automatically get power
      - | io: input


    * - IM3K2:PPM:MMS:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - IM3K2:PPM:MMS:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input


    * - IM3K2:PPM:MMS:PLC:nHomingMode_RBV
      - mbbi
      - Describes our homing strategy
      - | io: input


    * - IM3K2:PPM:MMS:PLC:nMotionAxisID_RBV
      - longin
      - Unique ID assigned to each axis in the NC
      - | io: input


    * - IM3K2:PPM:MMS:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input


    * - IM3K2:PPM:MMS:PLC:sName_RBV
      - waveform
      - PLC program name
      - | io: input


    * - IM3K2:PPM:MMS:STATE:01:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM3K2:PPM:MMS:STATE:01:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM3K2:PPM:MMS:STATE:01:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM3K2:PPM:MMS:STATE:01:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM3K2:PPM:MMS:STATE:01:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM3K2:PPM:MMS:STATE:01:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM3K2:PPM:MMS:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM3K2:PPM:MMS:STATE:01:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3K2:PPM:MMS:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3K2:PPM:MMS:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM3K2:PPM:MMS:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM3K2:PPM:MMS:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM3K2:PPM:MMS:STATE:01:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3K2:PPM:MMS:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM3K2:PPM:MMS:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM3K2:PPM:MMS:STATE:02:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM3K2:PPM:MMS:STATE:02:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM3K2:PPM:MMS:STATE:02:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM3K2:PPM:MMS:STATE:02:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM3K2:PPM:MMS:STATE:02:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM3K2:PPM:MMS:STATE:02:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM3K2:PPM:MMS:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM3K2:PPM:MMS:STATE:02:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3K2:PPM:MMS:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3K2:PPM:MMS:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM3K2:PPM:MMS:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM3K2:PPM:MMS:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM3K2:PPM:MMS:STATE:02:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3K2:PPM:MMS:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM3K2:PPM:MMS:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM3K2:PPM:MMS:STATE:03:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM3K2:PPM:MMS:STATE:03:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM3K2:PPM:MMS:STATE:03:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM3K2:PPM:MMS:STATE:03:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM3K2:PPM:MMS:STATE:03:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM3K2:PPM:MMS:STATE:03:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM3K2:PPM:MMS:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM3K2:PPM:MMS:STATE:03:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3K2:PPM:MMS:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3K2:PPM:MMS:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM3K2:PPM:MMS:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM3K2:PPM:MMS:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM3K2:PPM:MMS:STATE:03:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3K2:PPM:MMS:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM3K2:PPM:MMS:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM3K2:PPM:MMS:STATE:04:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM3K2:PPM:MMS:STATE:04:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM3K2:PPM:MMS:STATE:04:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM3K2:PPM:MMS:STATE:04:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM3K2:PPM:MMS:STATE:04:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM3K2:PPM:MMS:STATE:04:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM3K2:PPM:MMS:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM3K2:PPM:MMS:STATE:04:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3K2:PPM:MMS:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3K2:PPM:MMS:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM3K2:PPM:MMS:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM3K2:PPM:MMS:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM3K2:PPM:MMS:STATE:04:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3K2:PPM:MMS:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM3K2:PPM:MMS:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM3K2:PPM:MMS:STATE:05:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM3K2:PPM:MMS:STATE:05:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM3K2:PPM:MMS:STATE:05:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM3K2:PPM:MMS:STATE:05:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM3K2:PPM:MMS:STATE:05:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM3K2:PPM:MMS:STATE:05:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM3K2:PPM:MMS:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM3K2:PPM:MMS:STATE:05:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3K2:PPM:MMS:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3K2:PPM:MMS:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM3K2:PPM:MMS:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM3K2:PPM:MMS:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM3K2:PPM:MMS:STATE:05:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3K2:PPM:MMS:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM3K2:PPM:MMS:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM3K2:PPM:MMS:STATE:06:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM3K2:PPM:MMS:STATE:06:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM3K2:PPM:MMS:STATE:06:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM3K2:PPM:MMS:STATE:06:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM3K2:PPM:MMS:STATE:06:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM3K2:PPM:MMS:STATE:06:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM3K2:PPM:MMS:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM3K2:PPM:MMS:STATE:06:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3K2:PPM:MMS:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3K2:PPM:MMS:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM3K2:PPM:MMS:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM3K2:PPM:MMS:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM3K2:PPM:MMS:STATE:06:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3K2:PPM:MMS:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM3K2:PPM:MMS:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM3K2:PPM:MMS:STATE:07:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM3K2:PPM:MMS:STATE:07:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM3K2:PPM:MMS:STATE:07:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM3K2:PPM:MMS:STATE:07:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM3K2:PPM:MMS:STATE:07:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM3K2:PPM:MMS:STATE:07:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM3K2:PPM:MMS:STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM3K2:PPM:MMS:STATE:07:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3K2:PPM:MMS:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3K2:PPM:MMS:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM3K2:PPM:MMS:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM3K2:PPM:MMS:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM3K2:PPM:MMS:STATE:07:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3K2:PPM:MMS:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM3K2:PPM:MMS:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM3K2:PPM:MMS:STATE:08:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM3K2:PPM:MMS:STATE:08:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM3K2:PPM:MMS:STATE:08:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM3K2:PPM:MMS:STATE:08:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM3K2:PPM:MMS:STATE:08:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM3K2:PPM:MMS:STATE:08:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM3K2:PPM:MMS:STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM3K2:PPM:MMS:STATE:08:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3K2:PPM:MMS:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3K2:PPM:MMS:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM3K2:PPM:MMS:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM3K2:PPM:MMS:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM3K2:PPM:MMS:STATE:08:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3K2:PPM:MMS:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM3K2:PPM:MMS:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM3K2:PPM:MMS:STATE:09:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM3K2:PPM:MMS:STATE:09:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM3K2:PPM:MMS:STATE:09:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM3K2:PPM:MMS:STATE:09:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM3K2:PPM:MMS:STATE:09:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM3K2:PPM:MMS:STATE:09:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM3K2:PPM:MMS:STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM3K2:PPM:MMS:STATE:09:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3K2:PPM:MMS:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3K2:PPM:MMS:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM3K2:PPM:MMS:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM3K2:PPM:MMS:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM3K2:PPM:MMS:STATE:09:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3K2:PPM:MMS:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM3K2:PPM:MMS:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM3K2:PPM:MMS:STATE:BUSY_RBV
      - bi
      - PRG_IM3K2_PPM.fbIM3K2.fbStates.bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - IM3K2:PPM:MMS:STATE:DONE_RBV
      - bi
      - PRG_IM3K2_PPM.fbIM3K2.fbStates.bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - IM3K2:PPM:MMS:STATE:ERR_RBV
      - bi
      - PRG_IM3K2_PPM.fbIM3K2.fbStates.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - IM3K2:PPM:MMS:STATE:ERRID_RBV
      - longin
      - PRG_IM3K2_PPM.fbIM3K2.fbStates.nErrorId
      - | io: input


    * - IM3K2:PPM:MMS:STATE:ERRMSG_RBV
      - waveform
      - PRG_IM3K2_PPM.fbIM3K2.fbStates.sErrorMessage
      - | io: input


    * - IM3K2:PPM:MMS:STATE:GET_RBV
      - mbbi
      - PRG_IM3K2_PPM.fbIM3K2.fbStates.enumGet
      - | io: input


    * - IM3K2:PPM:MMS:STATE:PMPS:ARB:ENABLE
      - bo
      - PRG_IM3K2_PPM.fbIM3K2.fbStates.bArbiterEnabled
      - | io: output


    * - IM3K2:PPM:MMS:STATE:PMPS:ARB:ENABLE_RBV
      - bi
      - PRG_IM3K2_PPM.fbIM3K2.fbStates.bArbiterEnabled
      - | io: output


    * - IM3K2:PPM:MMS:STATE:PMPS:MAINT
      - bo
      - PRG_IM3K2_PPM.fbIM3K2.fbStates.fbStatePMPS.bMaintMode
      - | io: output


    * - IM3K2:PPM:MMS:STATE:PMPS:MAINT_RBV
      - bi
      - PRG_IM3K2_PPM.fbIM3K2.fbStates.fbStatePMPS.bMaintMode
      - | io: output


    * - IM3K2:PPM:MMS:STATE:RESET
      - bo
      - PRG_IM3K2_PPM.fbIM3K2.fbStates.bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - IM3K2:PPM:MMS:STATE:RESET_RBV
      - bi
      - PRG_IM3K2_PPM.fbIM3K2.fbStates.bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - IM3K2:PPM:MMS:STATE:SET
      - mbbo
      - PRG_IM3K2_PPM.fbIM3K2.fbStates.enumSet
      - | io: output


    * - IM3K2:PPM:MMS:STATE:SET_RBV
      - mbbi
      - PRG_IM3K2_PPM.fbIM3K2.fbStates.enumSet
      - | io: output


    * - IM3K2:PPM:SFM:FLOW_RBV
      - ai
      - PRG_IM3K2_PPM.fbIM3K2.fbFlowMeter.fFlowRate
      - | io: input


    * - IM3K2:PPM:SFM:MA_RBV
      - longin
      - PRG_IM3K2_PPM.fbIM3K2.fbFlowMeter.fRaw
      - | io: input


    * - IM3K2:PPM:SPM:CALIB:MJ_RATIO
      - ao
      - PRG_IM3K2_PPM.fbIM3K2.fbPowerMeter.fCalibMJRatio
      - | io: output


    * - IM3K2:PPM:SPM:CALIB:MJ_RATIO_RBV
      - ai
      - PRG_IM3K2_PPM.fbIM3K2.fbPowerMeter.fCalibMJRatio
      - | io: output


    * - IM3K2:PPM:SPM:CALIB:OFFSET
      - ao
      - PRG_IM3K2_PPM.fbIM3K2.fbPowerMeter.fCalibRelOffset
      - | io: output


    * - IM3K2:PPM:SPM:CALIB:OFFSET_RBV
      - ai
      - PRG_IM3K2_PPM.fbIM3K2.fbPowerMeter.fCalibRelOffset
      - | io: output


    * - IM3K2:PPM:SPM:CALIB:RATIO
      - ao
      - PRG_IM3K2_PPM.fbIM3K2.fbPowerMeter.fCalibRelRatio
      - | io: output


    * - IM3K2:PPM:SPM:CALIB:RATIO_RBV
      - ai
      - PRG_IM3K2_PPM.fbIM3K2.fbPowerMeter.fCalibRelRatio
      - | io: output


    * - IM3K2:PPM:SPM:CALIB_BUFFER_RBV
      - waveform
      - PRG_IM3K2_PPM.fbIM3K2.fbPowerMeter.fCalibBaseBuffer
      - | io: input


    * - IM3K2:PPM:SPM:CALIB_RBV
      - ai
      - PRG_IM3K2_PPM.fbIM3K2.fbPowerMeter.fCalibBase
      - | io: input


    * - IM3K2:PPM:SPM:MJ_BUFFER_RBV
      - waveform
      - PRG_IM3K2_PPM.fbIM3K2.fbPowerMeter.fCalibMJBuffer
      - | field: EGU mJ
        | io: input


    * - IM3K2:PPM:SPM:MJ_RBV
      - ai
      - PRG_IM3K2_PPM.fbIM3K2.fbPowerMeter.fCalibMJ
      - | field: EGU mJ
        | io: input


    * - IM3K2:PPM:SPM:STC:CONN_RBV
      - bi
      - PRG_IM3K2_PPM.fbIM3K2.fbPowerMeter.fbThermoCouple.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - IM3K2:PPM:SPM:STC:ERR_RBV
      - bi
      - PRG_IM3K2_PPM.fbIM3K2.fbPowerMeter.fbThermoCouple.bError
      - | io: input


    * - IM3K2:PPM:SPM:STC:TEMP_RBV
      - ai
      - PRG_IM3K2_PPM.fbIM3K2.fbPowerMeter.fbThermoCouple.fTemp
      - | io: input


    * - IM3K2:PPM:SPM:VOLT_BUFFER_RBV
      - waveform
      - PRG_IM3K2_PPM.fbIM3K2.fbPowerMeter.fVoltageBuffer
      - | field: EGU mV
        | io: input


    * - IM3K2:PPM:SPM:VOLT_RBV
      - ai
      - PRG_IM3K2_PPM.fbIM3K2.fbPowerMeter.fVoltage
      - | field: EGU mV
        | io: input


    * - IM3K2:PPM:YAG:STC:CONN_RBV
      - bi
      - PRG_IM3K2_PPM.fbIM3K2.fbYagThermoCouple.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - IM3K2:PPM:YAG:STC:ERR_RBV
      - bi
      - PRG_IM3K2_PPM.fbIM3K2.fbYagThermoCouple.bError
      - | io: input


    * - IM3K2:PPM:YAG:STC:TEMP_RBV
      - ai
      - PRG_IM3K2_PPM.fbIM3K2.fbYagThermoCouple.fTemp
      - | io: input


    * - IM4K2:PPM:CAM:CIL:PCT
      - ao
      - PRG_IM4K2_PPM.fbIM4K2.fbGige.fIlluminatorPercent
      - | EGU: %
        | io: output


    * - IM4K2:PPM:CAM:CIL:PCT_RBV
      - ai
      - PRG_IM4K2_PPM.fbIM4K2.fbGige.fIlluminatorPercent
      - | EGU: %
        | io: output


    * - IM4K2:PPM:CAM:PWR
      - bo
      - PRG_IM4K2_PPM.fbIM4K2.fbGige.bGigePower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - IM4K2:PPM:CAM:PWR_RBV
      - bi
      - PRG_IM4K2_PPM.fbIM4K2.fbGige.bGigePower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - IM4K2:PPM:MMS:PLC:bAllBackwardEnable_RBV
      - bi
      - Summary of axis permission to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4K2:PPM:MMS:PLC:bAllEnable_RBV
      - bi
      - Summary of axis permission to have power
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4K2:PPM:MMS:PLC:bAllForwardEnable_RBV
      - bi
      - Summary of axis permission to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4K2:PPM:MMS:PLC:bBrakeRelease_RBV
      - bi
      - TRUE if brake released
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4K2:PPM:MMS:PLC:bBusy_RBV
      - bi
      - TRUE if in the middle of a command
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4K2:PPM:MMS:PLC:bDone_RBV
      - bi
      - TRUE if command finished successfully
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4K2:PPM:MMS:PLC:bEnable
      - bo
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM4K2:PPM:MMS:PLC:bEnable_RBV
      - bi
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM4K2:PPM:MMS:PLC:bEnableDone_RBV
      - bi
      - TRUE if done enabling
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4K2:PPM:MMS:PLC:bError_RBV
      - bi
      - TRUE if we
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4K2:PPM:MMS:PLC:bExecute
      - bo
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM4K2:PPM:MMS:PLC:bExecute_RBV
      - bi
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM4K2:PPM:MMS:PLC:bGantryAxis_RBV
      - bi
      - TRUE if gantry EPS active
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4K2:PPM:MMS:PLC:bGantryBackwardEnable_RBV
      - bi
      - TRUE if gantry ok to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4K2:PPM:MMS:PLC:bGantryForwardEnable_RBV
      - bi
      - TRUE if gantry ok to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4K2:PPM:MMS:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4K2:PPM:MMS:PLC:bHome_RBV
      - bi
      - TRUE if at homing switch
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4K2:PPM:MMS:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - IM4K2:PPM:MMS:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - IM4K2:PPM:MMS:PLC:bHomed_RBV
      - bi
      - TRUE if the motor has been homed
      - | io: input


    * - IM4K2:PPM:MMS:PLC:bLimitBackwardEnable_RBV
      - bi
      - FALSE if reverse limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4K2:PPM:MMS:PLC:bLimitForwardEnable_RBV
      - bi
      - FALSE if forward limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4K2:PPM:MMS:PLC:bMoveCmd
      - bo
      - Start a move
      - | io: output


    * - IM4K2:PPM:MMS:PLC:bMoveCmd_RBV
      - bi
      - Start a move
      - | io: output


    * - IM4K2:PPM:MMS:PLC:bPowerSelf_RBV
      - bi
      - FALSE if axis is in PMPS
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4K2:PPM:MMS:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM4K2:PPM:MMS:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM4K2:PPM:MMS:PLC:bSafetyReady_RBV
      - bi
      - TRUE if safe to start a move
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4K2:PPM:MMS:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - IM4K2:PPM:MMS:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - IM4K2:PPM:MMS:PLC:fAcceleration
      - ao
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - IM4K2:PPM:MMS:PLC:fAcceleration_RBV
      - ai
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - IM4K2:PPM:MMS:PLC:fDeceleration
      - ao
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - IM4K2:PPM:MMS:PLC:fDeceleration_RBV
      - ai
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - IM4K2:PPM:MMS:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - IM4K2:PPM:MMS:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - IM4K2:PPM:MMS:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - IM4K2:PPM:MMS:PLC:fPosition
      - ao
      - Used internally and by the IOC as the set position
      - | io: output


    * - IM4K2:PPM:MMS:PLC:fPosition_RBV
      - ai
      - Used internally and by the IOC as the set position
      - | io: output


    * - IM4K2:PPM:MMS:PLC:fVelocity
      - ao
      - Used internally and by the IOC to set velocity
      - | io: output


    * - IM4K2:PPM:MMS:PLC:fVelocity_RBV
      - ai
      - Used internally and by the IOC to set velocity
      - | io: output


    * - IM4K2:PPM:MMS:PLC:nBrakeMode_RBV
      - mbbi
      - Describes when the brake will be released
      - | io: input


    * - IM4K2:PPM:MMS:PLC:nCmdData
      - longout
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - IM4K2:PPM:MMS:PLC:nCmdData_RBV
      - longin
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - IM4K2:PPM:MMS:PLC:nCommand
      - longout
      - Used internally and by the IOC to pick move type
      - | io: output


    * - IM4K2:PPM:MMS:PLC:nCommand_RBV
      - longin
      - Used internally and by the IOC to pick move type
      - | io: output


    * - IM4K2:PPM:MMS:PLC:nEnableMode_RBV
      - mbbi
      - Describes when the axis will automatically get power
      - | io: input


    * - IM4K2:PPM:MMS:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - IM4K2:PPM:MMS:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input


    * - IM4K2:PPM:MMS:PLC:nHomingMode_RBV
      - mbbi
      - Describes our homing strategy
      - | io: input


    * - IM4K2:PPM:MMS:PLC:nMotionAxisID_RBV
      - longin
      - Unique ID assigned to each axis in the NC
      - | io: input


    * - IM4K2:PPM:MMS:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input


    * - IM4K2:PPM:MMS:PLC:sName_RBV
      - waveform
      - PLC program name
      - | io: input


    * - IM4K2:PPM:MMS:STATE:01:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM4K2:PPM:MMS:STATE:01:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM4K2:PPM:MMS:STATE:01:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM4K2:PPM:MMS:STATE:01:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM4K2:PPM:MMS:STATE:01:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM4K2:PPM:MMS:STATE:01:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM4K2:PPM:MMS:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM4K2:PPM:MMS:STATE:01:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4K2:PPM:MMS:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4K2:PPM:MMS:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM4K2:PPM:MMS:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM4K2:PPM:MMS:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM4K2:PPM:MMS:STATE:01:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4K2:PPM:MMS:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM4K2:PPM:MMS:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM4K2:PPM:MMS:STATE:02:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM4K2:PPM:MMS:STATE:02:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM4K2:PPM:MMS:STATE:02:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM4K2:PPM:MMS:STATE:02:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM4K2:PPM:MMS:STATE:02:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM4K2:PPM:MMS:STATE:02:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM4K2:PPM:MMS:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM4K2:PPM:MMS:STATE:02:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4K2:PPM:MMS:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4K2:PPM:MMS:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM4K2:PPM:MMS:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM4K2:PPM:MMS:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM4K2:PPM:MMS:STATE:02:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4K2:PPM:MMS:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM4K2:PPM:MMS:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM4K2:PPM:MMS:STATE:03:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM4K2:PPM:MMS:STATE:03:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM4K2:PPM:MMS:STATE:03:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM4K2:PPM:MMS:STATE:03:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM4K2:PPM:MMS:STATE:03:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM4K2:PPM:MMS:STATE:03:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM4K2:PPM:MMS:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM4K2:PPM:MMS:STATE:03:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4K2:PPM:MMS:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4K2:PPM:MMS:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM4K2:PPM:MMS:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM4K2:PPM:MMS:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM4K2:PPM:MMS:STATE:03:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4K2:PPM:MMS:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM4K2:PPM:MMS:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM4K2:PPM:MMS:STATE:04:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM4K2:PPM:MMS:STATE:04:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM4K2:PPM:MMS:STATE:04:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM4K2:PPM:MMS:STATE:04:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM4K2:PPM:MMS:STATE:04:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM4K2:PPM:MMS:STATE:04:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM4K2:PPM:MMS:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM4K2:PPM:MMS:STATE:04:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4K2:PPM:MMS:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4K2:PPM:MMS:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM4K2:PPM:MMS:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM4K2:PPM:MMS:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM4K2:PPM:MMS:STATE:04:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4K2:PPM:MMS:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM4K2:PPM:MMS:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM4K2:PPM:MMS:STATE:05:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM4K2:PPM:MMS:STATE:05:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM4K2:PPM:MMS:STATE:05:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM4K2:PPM:MMS:STATE:05:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM4K2:PPM:MMS:STATE:05:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM4K2:PPM:MMS:STATE:05:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM4K2:PPM:MMS:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM4K2:PPM:MMS:STATE:05:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4K2:PPM:MMS:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4K2:PPM:MMS:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM4K2:PPM:MMS:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM4K2:PPM:MMS:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM4K2:PPM:MMS:STATE:05:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4K2:PPM:MMS:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM4K2:PPM:MMS:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM4K2:PPM:MMS:STATE:06:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM4K2:PPM:MMS:STATE:06:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM4K2:PPM:MMS:STATE:06:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM4K2:PPM:MMS:STATE:06:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM4K2:PPM:MMS:STATE:06:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM4K2:PPM:MMS:STATE:06:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM4K2:PPM:MMS:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM4K2:PPM:MMS:STATE:06:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4K2:PPM:MMS:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4K2:PPM:MMS:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM4K2:PPM:MMS:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM4K2:PPM:MMS:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM4K2:PPM:MMS:STATE:06:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4K2:PPM:MMS:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM4K2:PPM:MMS:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM4K2:PPM:MMS:STATE:07:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM4K2:PPM:MMS:STATE:07:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM4K2:PPM:MMS:STATE:07:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM4K2:PPM:MMS:STATE:07:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM4K2:PPM:MMS:STATE:07:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM4K2:PPM:MMS:STATE:07:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM4K2:PPM:MMS:STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM4K2:PPM:MMS:STATE:07:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4K2:PPM:MMS:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4K2:PPM:MMS:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM4K2:PPM:MMS:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM4K2:PPM:MMS:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM4K2:PPM:MMS:STATE:07:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4K2:PPM:MMS:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM4K2:PPM:MMS:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM4K2:PPM:MMS:STATE:08:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM4K2:PPM:MMS:STATE:08:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM4K2:PPM:MMS:STATE:08:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM4K2:PPM:MMS:STATE:08:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM4K2:PPM:MMS:STATE:08:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM4K2:PPM:MMS:STATE:08:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM4K2:PPM:MMS:STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM4K2:PPM:MMS:STATE:08:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4K2:PPM:MMS:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4K2:PPM:MMS:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM4K2:PPM:MMS:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM4K2:PPM:MMS:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM4K2:PPM:MMS:STATE:08:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4K2:PPM:MMS:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM4K2:PPM:MMS:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM4K2:PPM:MMS:STATE:09:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM4K2:PPM:MMS:STATE:09:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM4K2:PPM:MMS:STATE:09:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM4K2:PPM:MMS:STATE:09:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM4K2:PPM:MMS:STATE:09:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM4K2:PPM:MMS:STATE:09:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM4K2:PPM:MMS:STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM4K2:PPM:MMS:STATE:09:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4K2:PPM:MMS:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4K2:PPM:MMS:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM4K2:PPM:MMS:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM4K2:PPM:MMS:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM4K2:PPM:MMS:STATE:09:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4K2:PPM:MMS:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM4K2:PPM:MMS:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM4K2:PPM:MMS:STATE:BUSY_RBV
      - bi
      - PRG_IM4K2_PPM.fbIM4K2.fbStates.bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - IM4K2:PPM:MMS:STATE:DONE_RBV
      - bi
      - PRG_IM4K2_PPM.fbIM4K2.fbStates.bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - IM4K2:PPM:MMS:STATE:ERR_RBV
      - bi
      - PRG_IM4K2_PPM.fbIM4K2.fbStates.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - IM4K2:PPM:MMS:STATE:ERRID_RBV
      - longin
      - PRG_IM4K2_PPM.fbIM4K2.fbStates.nErrorId
      - | io: input


    * - IM4K2:PPM:MMS:STATE:ERRMSG_RBV
      - waveform
      - PRG_IM4K2_PPM.fbIM4K2.fbStates.sErrorMessage
      - | io: input


    * - IM4K2:PPM:MMS:STATE:GET_RBV
      - mbbi
      - PRG_IM4K2_PPM.fbIM4K2.fbStates.enumGet
      - | io: input


    * - IM4K2:PPM:MMS:STATE:PMPS:ARB:ENABLE
      - bo
      - PRG_IM4K2_PPM.fbIM4K2.fbStates.bArbiterEnabled
      - | io: output


    * - IM4K2:PPM:MMS:STATE:PMPS:ARB:ENABLE_RBV
      - bi
      - PRG_IM4K2_PPM.fbIM4K2.fbStates.bArbiterEnabled
      - | io: output


    * - IM4K2:PPM:MMS:STATE:PMPS:MAINT
      - bo
      - PRG_IM4K2_PPM.fbIM4K2.fbStates.fbStatePMPS.bMaintMode
      - | io: output


    * - IM4K2:PPM:MMS:STATE:PMPS:MAINT_RBV
      - bi
      - PRG_IM4K2_PPM.fbIM4K2.fbStates.fbStatePMPS.bMaintMode
      - | io: output


    * - IM4K2:PPM:MMS:STATE:RESET
      - bo
      - PRG_IM4K2_PPM.fbIM4K2.fbStates.bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - IM4K2:PPM:MMS:STATE:RESET_RBV
      - bi
      - PRG_IM4K2_PPM.fbIM4K2.fbStates.bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - IM4K2:PPM:MMS:STATE:SET
      - mbbo
      - PRG_IM4K2_PPM.fbIM4K2.fbStates.enumSet
      - | io: output


    * - IM4K2:PPM:MMS:STATE:SET_RBV
      - mbbi
      - PRG_IM4K2_PPM.fbIM4K2.fbStates.enumSet
      - | io: output


    * - IM4K2:PPM:SFM:FLOW_RBV
      - ai
      - PRG_IM4K2_PPM.fbIM4K2.fbFlowMeter.fFlowRate
      - | io: input


    * - IM4K2:PPM:SFM:MA_RBV
      - longin
      - PRG_IM4K2_PPM.fbIM4K2.fbFlowMeter.fRaw
      - | io: input


    * - IM4K2:PPM:SPM:CALIB:MJ_RATIO
      - ao
      - PRG_IM4K2_PPM.fbIM4K2.fbPowerMeter.fCalibMJRatio
      - | io: output


    * - IM4K2:PPM:SPM:CALIB:MJ_RATIO_RBV
      - ai
      - PRG_IM4K2_PPM.fbIM4K2.fbPowerMeter.fCalibMJRatio
      - | io: output


    * - IM4K2:PPM:SPM:CALIB:OFFSET
      - ao
      - PRG_IM4K2_PPM.fbIM4K2.fbPowerMeter.fCalibRelOffset
      - | io: output


    * - IM4K2:PPM:SPM:CALIB:OFFSET_RBV
      - ai
      - PRG_IM4K2_PPM.fbIM4K2.fbPowerMeter.fCalibRelOffset
      - | io: output


    * - IM4K2:PPM:SPM:CALIB:RATIO
      - ao
      - PRG_IM4K2_PPM.fbIM4K2.fbPowerMeter.fCalibRelRatio
      - | io: output


    * - IM4K2:PPM:SPM:CALIB:RATIO_RBV
      - ai
      - PRG_IM4K2_PPM.fbIM4K2.fbPowerMeter.fCalibRelRatio
      - | io: output


    * - IM4K2:PPM:SPM:CALIB_BUFFER_RBV
      - waveform
      - PRG_IM4K2_PPM.fbIM4K2.fbPowerMeter.fCalibBaseBuffer
      - | io: input


    * - IM4K2:PPM:SPM:CALIB_RBV
      - ai
      - PRG_IM4K2_PPM.fbIM4K2.fbPowerMeter.fCalibBase
      - | io: input


    * - IM4K2:PPM:SPM:MJ_BUFFER_RBV
      - waveform
      - PRG_IM4K2_PPM.fbIM4K2.fbPowerMeter.fCalibMJBuffer
      - | field: EGU mJ
        | io: input


    * - IM4K2:PPM:SPM:MJ_RBV
      - ai
      - PRG_IM4K2_PPM.fbIM4K2.fbPowerMeter.fCalibMJ
      - | field: EGU mJ
        | io: input


    * - IM4K2:PPM:SPM:STC:CONN_RBV
      - bi
      - PRG_IM4K2_PPM.fbIM4K2.fbPowerMeter.fbThermoCouple.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - IM4K2:PPM:SPM:STC:ERR_RBV
      - bi
      - PRG_IM4K2_PPM.fbIM4K2.fbPowerMeter.fbThermoCouple.bError
      - | io: input


    * - IM4K2:PPM:SPM:STC:TEMP_RBV
      - ai
      - PRG_IM4K2_PPM.fbIM4K2.fbPowerMeter.fbThermoCouple.fTemp
      - | io: input


    * - IM4K2:PPM:SPM:VOLT_BUFFER_RBV
      - waveform
      - PRG_IM4K2_PPM.fbIM4K2.fbPowerMeter.fVoltageBuffer
      - | field: EGU mV
        | io: input


    * - IM4K2:PPM:SPM:VOLT_RBV
      - ai
      - PRG_IM4K2_PPM.fbIM4K2.fbPowerMeter.fVoltage
      - | field: EGU mV
        | io: input


    * - IM4K2:PPM:YAG:STC:CONN_RBV
      - bi
      - PRG_IM4K2_PPM.fbIM4K2.fbYagThermoCouple.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - IM4K2:PPM:YAG:STC:ERR_RBV
      - bi
      - PRG_IM4K2_PPM.fbIM4K2.fbYagThermoCouple.bError
      - | io: input


    * - IM4K2:PPM:YAG:STC:TEMP_RBV
      - ai
      - PRG_IM4K2_PPM.fbIM4K2.fbYagThermoCouple.fTemp
      - | io: input


    * - IM5K2:PPM:CAM:CIL:PCT
      - ao
      - PRG_IM5K2_PPM.fbIM5K2.fbGige.fIlluminatorPercent
      - | EGU: %
        | io: output


    * - IM5K2:PPM:CAM:CIL:PCT_RBV
      - ai
      - PRG_IM5K2_PPM.fbIM5K2.fbGige.fIlluminatorPercent
      - | EGU: %
        | io: output


    * - IM5K2:PPM:CAM:PWR
      - bo
      - PRG_IM5K2_PPM.fbIM5K2.fbGige.bGigePower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - IM5K2:PPM:CAM:PWR_RBV
      - bi
      - PRG_IM5K2_PPM.fbIM5K2.fbGige.bGigePower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - IM5K2:PPM:MMS:PLC:bAllBackwardEnable_RBV
      - bi
      - Summary of axis permission to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM5K2:PPM:MMS:PLC:bAllEnable_RBV
      - bi
      - Summary of axis permission to have power
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM5K2:PPM:MMS:PLC:bAllForwardEnable_RBV
      - bi
      - Summary of axis permission to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM5K2:PPM:MMS:PLC:bBrakeRelease_RBV
      - bi
      - TRUE if brake released
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM5K2:PPM:MMS:PLC:bBusy_RBV
      - bi
      - TRUE if in the middle of a command
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM5K2:PPM:MMS:PLC:bDone_RBV
      - bi
      - TRUE if command finished successfully
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM5K2:PPM:MMS:PLC:bEnable
      - bo
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM5K2:PPM:MMS:PLC:bEnable_RBV
      - bi
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM5K2:PPM:MMS:PLC:bEnableDone_RBV
      - bi
      - TRUE if done enabling
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM5K2:PPM:MMS:PLC:bError_RBV
      - bi
      - TRUE if we
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM5K2:PPM:MMS:PLC:bExecute
      - bo
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM5K2:PPM:MMS:PLC:bExecute_RBV
      - bi
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM5K2:PPM:MMS:PLC:bGantryAxis_RBV
      - bi
      - TRUE if gantry EPS active
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM5K2:PPM:MMS:PLC:bGantryBackwardEnable_RBV
      - bi
      - TRUE if gantry ok to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM5K2:PPM:MMS:PLC:bGantryForwardEnable_RBV
      - bi
      - TRUE if gantry ok to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM5K2:PPM:MMS:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM5K2:PPM:MMS:PLC:bHome_RBV
      - bi
      - TRUE if at homing switch
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM5K2:PPM:MMS:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - IM5K2:PPM:MMS:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - IM5K2:PPM:MMS:PLC:bHomed_RBV
      - bi
      - TRUE if the motor has been homed
      - | io: input


    * - IM5K2:PPM:MMS:PLC:bLimitBackwardEnable_RBV
      - bi
      - FALSE if reverse limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM5K2:PPM:MMS:PLC:bLimitForwardEnable_RBV
      - bi
      - FALSE if forward limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM5K2:PPM:MMS:PLC:bMoveCmd
      - bo
      - Start a move
      - | io: output


    * - IM5K2:PPM:MMS:PLC:bMoveCmd_RBV
      - bi
      - Start a move
      - | io: output


    * - IM5K2:PPM:MMS:PLC:bPowerSelf_RBV
      - bi
      - FALSE if axis is in PMPS
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM5K2:PPM:MMS:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM5K2:PPM:MMS:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM5K2:PPM:MMS:PLC:bSafetyReady_RBV
      - bi
      - TRUE if safe to start a move
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM5K2:PPM:MMS:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - IM5K2:PPM:MMS:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - IM5K2:PPM:MMS:PLC:fAcceleration
      - ao
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - IM5K2:PPM:MMS:PLC:fAcceleration_RBV
      - ai
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - IM5K2:PPM:MMS:PLC:fDeceleration
      - ao
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - IM5K2:PPM:MMS:PLC:fDeceleration_RBV
      - ai
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - IM5K2:PPM:MMS:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - IM5K2:PPM:MMS:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - IM5K2:PPM:MMS:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - IM5K2:PPM:MMS:PLC:fPosition
      - ao
      - Used internally and by the IOC as the set position
      - | io: output


    * - IM5K2:PPM:MMS:PLC:fPosition_RBV
      - ai
      - Used internally and by the IOC as the set position
      - | io: output


    * - IM5K2:PPM:MMS:PLC:fVelocity
      - ao
      - Used internally and by the IOC to set velocity
      - | io: output


    * - IM5K2:PPM:MMS:PLC:fVelocity_RBV
      - ai
      - Used internally and by the IOC to set velocity
      - | io: output


    * - IM5K2:PPM:MMS:PLC:nBrakeMode_RBV
      - mbbi
      - Describes when the brake will be released
      - | io: input


    * - IM5K2:PPM:MMS:PLC:nCmdData
      - longout
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - IM5K2:PPM:MMS:PLC:nCmdData_RBV
      - longin
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - IM5K2:PPM:MMS:PLC:nCommand
      - longout
      - Used internally and by the IOC to pick move type
      - | io: output


    * - IM5K2:PPM:MMS:PLC:nCommand_RBV
      - longin
      - Used internally and by the IOC to pick move type
      - | io: output


    * - IM5K2:PPM:MMS:PLC:nEnableMode_RBV
      - mbbi
      - Describes when the axis will automatically get power
      - | io: input


    * - IM5K2:PPM:MMS:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - IM5K2:PPM:MMS:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input


    * - IM5K2:PPM:MMS:PLC:nHomingMode_RBV
      - mbbi
      - Describes our homing strategy
      - | io: input


    * - IM5K2:PPM:MMS:PLC:nMotionAxisID_RBV
      - longin
      - Unique ID assigned to each axis in the NC
      - | io: input


    * - IM5K2:PPM:MMS:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input


    * - IM5K2:PPM:MMS:PLC:sName_RBV
      - waveform
      - PLC program name
      - | io: input


    * - IM5K2:PPM:MMS:STATE:01:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM5K2:PPM:MMS:STATE:01:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM5K2:PPM:MMS:STATE:01:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM5K2:PPM:MMS:STATE:01:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM5K2:PPM:MMS:STATE:01:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM5K2:PPM:MMS:STATE:01:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM5K2:PPM:MMS:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM5K2:PPM:MMS:STATE:01:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM5K2:PPM:MMS:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM5K2:PPM:MMS:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM5K2:PPM:MMS:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM5K2:PPM:MMS:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM5K2:PPM:MMS:STATE:01:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM5K2:PPM:MMS:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM5K2:PPM:MMS:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM5K2:PPM:MMS:STATE:02:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM5K2:PPM:MMS:STATE:02:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM5K2:PPM:MMS:STATE:02:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM5K2:PPM:MMS:STATE:02:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM5K2:PPM:MMS:STATE:02:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM5K2:PPM:MMS:STATE:02:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM5K2:PPM:MMS:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM5K2:PPM:MMS:STATE:02:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM5K2:PPM:MMS:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM5K2:PPM:MMS:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM5K2:PPM:MMS:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM5K2:PPM:MMS:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM5K2:PPM:MMS:STATE:02:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM5K2:PPM:MMS:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM5K2:PPM:MMS:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM5K2:PPM:MMS:STATE:03:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM5K2:PPM:MMS:STATE:03:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM5K2:PPM:MMS:STATE:03:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM5K2:PPM:MMS:STATE:03:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM5K2:PPM:MMS:STATE:03:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM5K2:PPM:MMS:STATE:03:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM5K2:PPM:MMS:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM5K2:PPM:MMS:STATE:03:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM5K2:PPM:MMS:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM5K2:PPM:MMS:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM5K2:PPM:MMS:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM5K2:PPM:MMS:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM5K2:PPM:MMS:STATE:03:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM5K2:PPM:MMS:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM5K2:PPM:MMS:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM5K2:PPM:MMS:STATE:04:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM5K2:PPM:MMS:STATE:04:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM5K2:PPM:MMS:STATE:04:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM5K2:PPM:MMS:STATE:04:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM5K2:PPM:MMS:STATE:04:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM5K2:PPM:MMS:STATE:04:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM5K2:PPM:MMS:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM5K2:PPM:MMS:STATE:04:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM5K2:PPM:MMS:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM5K2:PPM:MMS:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM5K2:PPM:MMS:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM5K2:PPM:MMS:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM5K2:PPM:MMS:STATE:04:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM5K2:PPM:MMS:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM5K2:PPM:MMS:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM5K2:PPM:MMS:STATE:05:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM5K2:PPM:MMS:STATE:05:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM5K2:PPM:MMS:STATE:05:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM5K2:PPM:MMS:STATE:05:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM5K2:PPM:MMS:STATE:05:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM5K2:PPM:MMS:STATE:05:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM5K2:PPM:MMS:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM5K2:PPM:MMS:STATE:05:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM5K2:PPM:MMS:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM5K2:PPM:MMS:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM5K2:PPM:MMS:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM5K2:PPM:MMS:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM5K2:PPM:MMS:STATE:05:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM5K2:PPM:MMS:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM5K2:PPM:MMS:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM5K2:PPM:MMS:STATE:06:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM5K2:PPM:MMS:STATE:06:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM5K2:PPM:MMS:STATE:06:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM5K2:PPM:MMS:STATE:06:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM5K2:PPM:MMS:STATE:06:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM5K2:PPM:MMS:STATE:06:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM5K2:PPM:MMS:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM5K2:PPM:MMS:STATE:06:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM5K2:PPM:MMS:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM5K2:PPM:MMS:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM5K2:PPM:MMS:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM5K2:PPM:MMS:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM5K2:PPM:MMS:STATE:06:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM5K2:PPM:MMS:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM5K2:PPM:MMS:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM5K2:PPM:MMS:STATE:07:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM5K2:PPM:MMS:STATE:07:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM5K2:PPM:MMS:STATE:07:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM5K2:PPM:MMS:STATE:07:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM5K2:PPM:MMS:STATE:07:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM5K2:PPM:MMS:STATE:07:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM5K2:PPM:MMS:STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM5K2:PPM:MMS:STATE:07:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM5K2:PPM:MMS:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM5K2:PPM:MMS:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM5K2:PPM:MMS:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM5K2:PPM:MMS:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM5K2:PPM:MMS:STATE:07:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM5K2:PPM:MMS:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM5K2:PPM:MMS:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM5K2:PPM:MMS:STATE:08:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM5K2:PPM:MMS:STATE:08:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM5K2:PPM:MMS:STATE:08:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM5K2:PPM:MMS:STATE:08:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM5K2:PPM:MMS:STATE:08:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM5K2:PPM:MMS:STATE:08:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM5K2:PPM:MMS:STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM5K2:PPM:MMS:STATE:08:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM5K2:PPM:MMS:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM5K2:PPM:MMS:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM5K2:PPM:MMS:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM5K2:PPM:MMS:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM5K2:PPM:MMS:STATE:08:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM5K2:PPM:MMS:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM5K2:PPM:MMS:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM5K2:PPM:MMS:STATE:09:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM5K2:PPM:MMS:STATE:09:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM5K2:PPM:MMS:STATE:09:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM5K2:PPM:MMS:STATE:09:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM5K2:PPM:MMS:STATE:09:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM5K2:PPM:MMS:STATE:09:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM5K2:PPM:MMS:STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM5K2:PPM:MMS:STATE:09:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM5K2:PPM:MMS:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM5K2:PPM:MMS:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM5K2:PPM:MMS:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM5K2:PPM:MMS:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM5K2:PPM:MMS:STATE:09:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM5K2:PPM:MMS:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM5K2:PPM:MMS:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM5K2:PPM:MMS:STATE:BUSY_RBV
      - bi
      - PRG_IM5K2_PPM.fbIM5K2.fbStates.bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - IM5K2:PPM:MMS:STATE:DONE_RBV
      - bi
      - PRG_IM5K2_PPM.fbIM5K2.fbStates.bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - IM5K2:PPM:MMS:STATE:ERR_RBV
      - bi
      - PRG_IM5K2_PPM.fbIM5K2.fbStates.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - IM5K2:PPM:MMS:STATE:ERRID_RBV
      - longin
      - PRG_IM5K2_PPM.fbIM5K2.fbStates.nErrorId
      - | io: input


    * - IM5K2:PPM:MMS:STATE:ERRMSG_RBV
      - waveform
      - PRG_IM5K2_PPM.fbIM5K2.fbStates.sErrorMessage
      - | io: input


    * - IM5K2:PPM:MMS:STATE:GET_RBV
      - mbbi
      - PRG_IM5K2_PPM.fbIM5K2.fbStates.enumGet
      - | io: input


    * - IM5K2:PPM:MMS:STATE:PMPS:ARB:ENABLE
      - bo
      - PRG_IM5K2_PPM.fbIM5K2.fbStates.bArbiterEnabled
      - | io: output


    * - IM5K2:PPM:MMS:STATE:PMPS:ARB:ENABLE_RBV
      - bi
      - PRG_IM5K2_PPM.fbIM5K2.fbStates.bArbiterEnabled
      - | io: output


    * - IM5K2:PPM:MMS:STATE:PMPS:MAINT
      - bo
      - PRG_IM5K2_PPM.fbIM5K2.fbStates.fbStatePMPS.bMaintMode
      - | io: output


    * - IM5K2:PPM:MMS:STATE:PMPS:MAINT_RBV
      - bi
      - PRG_IM5K2_PPM.fbIM5K2.fbStates.fbStatePMPS.bMaintMode
      - | io: output


    * - IM5K2:PPM:MMS:STATE:RESET
      - bo
      - PRG_IM5K2_PPM.fbIM5K2.fbStates.bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - IM5K2:PPM:MMS:STATE:RESET_RBV
      - bi
      - PRG_IM5K2_PPM.fbIM5K2.fbStates.bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - IM5K2:PPM:MMS:STATE:SET
      - mbbo
      - PRG_IM5K2_PPM.fbIM5K2.fbStates.enumSet
      - | io: output


    * - IM5K2:PPM:MMS:STATE:SET_RBV
      - mbbi
      - PRG_IM5K2_PPM.fbIM5K2.fbStates.enumSet
      - | io: output


    * - IM5K2:PPM:SFM:FLOW_RBV
      - ai
      - PRG_IM5K2_PPM.fbIM5K2.fbFlowMeter.fFlowRate
      - | io: input


    * - IM5K2:PPM:SFM:MA_RBV
      - longin
      - PRG_IM5K2_PPM.fbIM5K2.fbFlowMeter.fRaw
      - | io: input


    * - IM5K2:PPM:SPM:CALIB:MJ_RATIO
      - ao
      - PRG_IM5K2_PPM.fbIM5K2.fbPowerMeter.fCalibMJRatio
      - | io: output


    * - IM5K2:PPM:SPM:CALIB:MJ_RATIO_RBV
      - ai
      - PRG_IM5K2_PPM.fbIM5K2.fbPowerMeter.fCalibMJRatio
      - | io: output


    * - IM5K2:PPM:SPM:CALIB:OFFSET
      - ao
      - PRG_IM5K2_PPM.fbIM5K2.fbPowerMeter.fCalibRelOffset
      - | io: output


    * - IM5K2:PPM:SPM:CALIB:OFFSET_RBV
      - ai
      - PRG_IM5K2_PPM.fbIM5K2.fbPowerMeter.fCalibRelOffset
      - | io: output


    * - IM5K2:PPM:SPM:CALIB:RATIO
      - ao
      - PRG_IM5K2_PPM.fbIM5K2.fbPowerMeter.fCalibRelRatio
      - | io: output


    * - IM5K2:PPM:SPM:CALIB:RATIO_RBV
      - ai
      - PRG_IM5K2_PPM.fbIM5K2.fbPowerMeter.fCalibRelRatio
      - | io: output


    * - IM5K2:PPM:SPM:CALIB_BUFFER_RBV
      - waveform
      - PRG_IM5K2_PPM.fbIM5K2.fbPowerMeter.fCalibBaseBuffer
      - | io: input


    * - IM5K2:PPM:SPM:CALIB_RBV
      - ai
      - PRG_IM5K2_PPM.fbIM5K2.fbPowerMeter.fCalibBase
      - | io: input


    * - IM5K2:PPM:SPM:MJ_BUFFER_RBV
      - waveform
      - PRG_IM5K2_PPM.fbIM5K2.fbPowerMeter.fCalibMJBuffer
      - | field: EGU mJ
        | io: input


    * - IM5K2:PPM:SPM:MJ_RBV
      - ai
      - PRG_IM5K2_PPM.fbIM5K2.fbPowerMeter.fCalibMJ
      - | field: EGU mJ
        | io: input


    * - IM5K2:PPM:SPM:STC:CONN_RBV
      - bi
      - PRG_IM5K2_PPM.fbIM5K2.fbPowerMeter.fbThermoCouple.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - IM5K2:PPM:SPM:STC:ERR_RBV
      - bi
      - PRG_IM5K2_PPM.fbIM5K2.fbPowerMeter.fbThermoCouple.bError
      - | io: input


    * - IM5K2:PPM:SPM:STC:TEMP_RBV
      - ai
      - PRG_IM5K2_PPM.fbIM5K2.fbPowerMeter.fbThermoCouple.fTemp
      - | io: input


    * - IM5K2:PPM:SPM:VOLT_BUFFER_RBV
      - waveform
      - PRG_IM5K2_PPM.fbIM5K2.fbPowerMeter.fVoltageBuffer
      - | field: EGU mV
        | io: input


    * - IM5K2:PPM:SPM:VOLT_RBV
      - ai
      - PRG_IM5K2_PPM.fbIM5K2.fbPowerMeter.fVoltage
      - | field: EGU mV
        | io: input


    * - IM5K2:PPM:YAG:STC:CONN_RBV
      - bi
      - PRG_IM5K2_PPM.fbIM5K2.fbYagThermoCouple.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - IM5K2:PPM:YAG:STC:ERR_RBV
      - bi
      - PRG_IM5K2_PPM.fbIM5K2.fbYagThermoCouple.bError
      - | io: input


    * - IM5K2:PPM:YAG:STC:TEMP_RBV
      - ai
      - PRG_IM5K2_PPM.fbIM5K2.fbYagThermoCouple.fTemp
      - | io: input


    * - IM6K2:PPM:CAM:CIL:PCT
      - ao
      - PRG_IM6K2_PPM.fbIM6K2.fbGige.fIlluminatorPercent
      - | EGU: %
        | io: output


    * - IM6K2:PPM:CAM:CIL:PCT_RBV
      - ai
      - PRG_IM6K2_PPM.fbIM6K2.fbGige.fIlluminatorPercent
      - | EGU: %
        | io: output


    * - IM6K2:PPM:CAM:PWR
      - bo
      - PRG_IM6K2_PPM.fbIM6K2.fbGige.bGigePower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - IM6K2:PPM:CAM:PWR_RBV
      - bi
      - PRG_IM6K2_PPM.fbIM6K2.fbGige.bGigePower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - IM6K2:PPM:MMS:PLC:bAllBackwardEnable_RBV
      - bi
      - Summary of axis permission to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM6K2:PPM:MMS:PLC:bAllEnable_RBV
      - bi
      - Summary of axis permission to have power
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM6K2:PPM:MMS:PLC:bAllForwardEnable_RBV
      - bi
      - Summary of axis permission to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM6K2:PPM:MMS:PLC:bBrakeRelease_RBV
      - bi
      - TRUE if brake released
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM6K2:PPM:MMS:PLC:bBusy_RBV
      - bi
      - TRUE if in the middle of a command
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM6K2:PPM:MMS:PLC:bDone_RBV
      - bi
      - TRUE if command finished successfully
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM6K2:PPM:MMS:PLC:bEnable
      - bo
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM6K2:PPM:MMS:PLC:bEnable_RBV
      - bi
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM6K2:PPM:MMS:PLC:bEnableDone_RBV
      - bi
      - TRUE if done enabling
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM6K2:PPM:MMS:PLC:bError_RBV
      - bi
      - TRUE if we
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM6K2:PPM:MMS:PLC:bExecute
      - bo
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM6K2:PPM:MMS:PLC:bExecute_RBV
      - bi
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM6K2:PPM:MMS:PLC:bGantryAxis_RBV
      - bi
      - TRUE if gantry EPS active
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM6K2:PPM:MMS:PLC:bGantryBackwardEnable_RBV
      - bi
      - TRUE if gantry ok to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM6K2:PPM:MMS:PLC:bGantryForwardEnable_RBV
      - bi
      - TRUE if gantry ok to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM6K2:PPM:MMS:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM6K2:PPM:MMS:PLC:bHome_RBV
      - bi
      - TRUE if at homing switch
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM6K2:PPM:MMS:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - IM6K2:PPM:MMS:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - IM6K2:PPM:MMS:PLC:bHomed_RBV
      - bi
      - TRUE if the motor has been homed
      - | io: input


    * - IM6K2:PPM:MMS:PLC:bLimitBackwardEnable_RBV
      - bi
      - FALSE if reverse limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM6K2:PPM:MMS:PLC:bLimitForwardEnable_RBV
      - bi
      - FALSE if forward limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM6K2:PPM:MMS:PLC:bMoveCmd
      - bo
      - Start a move
      - | io: output


    * - IM6K2:PPM:MMS:PLC:bMoveCmd_RBV
      - bi
      - Start a move
      - | io: output


    * - IM6K2:PPM:MMS:PLC:bPowerSelf_RBV
      - bi
      - FALSE if axis is in PMPS
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM6K2:PPM:MMS:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM6K2:PPM:MMS:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM6K2:PPM:MMS:PLC:bSafetyReady_RBV
      - bi
      - TRUE if safe to start a move
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM6K2:PPM:MMS:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - IM6K2:PPM:MMS:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - IM6K2:PPM:MMS:PLC:fAcceleration
      - ao
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - IM6K2:PPM:MMS:PLC:fAcceleration_RBV
      - ai
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - IM6K2:PPM:MMS:PLC:fDeceleration
      - ao
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - IM6K2:PPM:MMS:PLC:fDeceleration_RBV
      - ai
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - IM6K2:PPM:MMS:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - IM6K2:PPM:MMS:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - IM6K2:PPM:MMS:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - IM6K2:PPM:MMS:PLC:fPosition
      - ao
      - Used internally and by the IOC as the set position
      - | io: output


    * - IM6K2:PPM:MMS:PLC:fPosition_RBV
      - ai
      - Used internally and by the IOC as the set position
      - | io: output


    * - IM6K2:PPM:MMS:PLC:fVelocity
      - ao
      - Used internally and by the IOC to set velocity
      - | io: output


    * - IM6K2:PPM:MMS:PLC:fVelocity_RBV
      - ai
      - Used internally and by the IOC to set velocity
      - | io: output


    * - IM6K2:PPM:MMS:PLC:nBrakeMode_RBV
      - mbbi
      - Describes when the brake will be released
      - | io: input


    * - IM6K2:PPM:MMS:PLC:nCmdData
      - longout
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - IM6K2:PPM:MMS:PLC:nCmdData_RBV
      - longin
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - IM6K2:PPM:MMS:PLC:nCommand
      - longout
      - Used internally and by the IOC to pick move type
      - | io: output


    * - IM6K2:PPM:MMS:PLC:nCommand_RBV
      - longin
      - Used internally and by the IOC to pick move type
      - | io: output


    * - IM6K2:PPM:MMS:PLC:nEnableMode_RBV
      - mbbi
      - Describes when the axis will automatically get power
      - | io: input


    * - IM6K2:PPM:MMS:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - IM6K2:PPM:MMS:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input


    * - IM6K2:PPM:MMS:PLC:nHomingMode_RBV
      - mbbi
      - Describes our homing strategy
      - | io: input


    * - IM6K2:PPM:MMS:PLC:nMotionAxisID_RBV
      - longin
      - Unique ID assigned to each axis in the NC
      - | io: input


    * - IM6K2:PPM:MMS:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input


    * - IM6K2:PPM:MMS:PLC:sName_RBV
      - waveform
      - PLC program name
      - | io: input


    * - IM6K2:PPM:MMS:STATE:01:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM6K2:PPM:MMS:STATE:01:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM6K2:PPM:MMS:STATE:01:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM6K2:PPM:MMS:STATE:01:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM6K2:PPM:MMS:STATE:01:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM6K2:PPM:MMS:STATE:01:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM6K2:PPM:MMS:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM6K2:PPM:MMS:STATE:01:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM6K2:PPM:MMS:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM6K2:PPM:MMS:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM6K2:PPM:MMS:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM6K2:PPM:MMS:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM6K2:PPM:MMS:STATE:01:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM6K2:PPM:MMS:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM6K2:PPM:MMS:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM6K2:PPM:MMS:STATE:02:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM6K2:PPM:MMS:STATE:02:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM6K2:PPM:MMS:STATE:02:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM6K2:PPM:MMS:STATE:02:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM6K2:PPM:MMS:STATE:02:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM6K2:PPM:MMS:STATE:02:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM6K2:PPM:MMS:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM6K2:PPM:MMS:STATE:02:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM6K2:PPM:MMS:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM6K2:PPM:MMS:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM6K2:PPM:MMS:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM6K2:PPM:MMS:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM6K2:PPM:MMS:STATE:02:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM6K2:PPM:MMS:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM6K2:PPM:MMS:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM6K2:PPM:MMS:STATE:03:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM6K2:PPM:MMS:STATE:03:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM6K2:PPM:MMS:STATE:03:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM6K2:PPM:MMS:STATE:03:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM6K2:PPM:MMS:STATE:03:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM6K2:PPM:MMS:STATE:03:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM6K2:PPM:MMS:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM6K2:PPM:MMS:STATE:03:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM6K2:PPM:MMS:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM6K2:PPM:MMS:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM6K2:PPM:MMS:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM6K2:PPM:MMS:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM6K2:PPM:MMS:STATE:03:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM6K2:PPM:MMS:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM6K2:PPM:MMS:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM6K2:PPM:MMS:STATE:04:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM6K2:PPM:MMS:STATE:04:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM6K2:PPM:MMS:STATE:04:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM6K2:PPM:MMS:STATE:04:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM6K2:PPM:MMS:STATE:04:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM6K2:PPM:MMS:STATE:04:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM6K2:PPM:MMS:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM6K2:PPM:MMS:STATE:04:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM6K2:PPM:MMS:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM6K2:PPM:MMS:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM6K2:PPM:MMS:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM6K2:PPM:MMS:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM6K2:PPM:MMS:STATE:04:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM6K2:PPM:MMS:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM6K2:PPM:MMS:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM6K2:PPM:MMS:STATE:05:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM6K2:PPM:MMS:STATE:05:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM6K2:PPM:MMS:STATE:05:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM6K2:PPM:MMS:STATE:05:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM6K2:PPM:MMS:STATE:05:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM6K2:PPM:MMS:STATE:05:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM6K2:PPM:MMS:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM6K2:PPM:MMS:STATE:05:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM6K2:PPM:MMS:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM6K2:PPM:MMS:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM6K2:PPM:MMS:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM6K2:PPM:MMS:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM6K2:PPM:MMS:STATE:05:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM6K2:PPM:MMS:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM6K2:PPM:MMS:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM6K2:PPM:MMS:STATE:06:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM6K2:PPM:MMS:STATE:06:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM6K2:PPM:MMS:STATE:06:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM6K2:PPM:MMS:STATE:06:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM6K2:PPM:MMS:STATE:06:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM6K2:PPM:MMS:STATE:06:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM6K2:PPM:MMS:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM6K2:PPM:MMS:STATE:06:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM6K2:PPM:MMS:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM6K2:PPM:MMS:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM6K2:PPM:MMS:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM6K2:PPM:MMS:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM6K2:PPM:MMS:STATE:06:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM6K2:PPM:MMS:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM6K2:PPM:MMS:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM6K2:PPM:MMS:STATE:07:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM6K2:PPM:MMS:STATE:07:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM6K2:PPM:MMS:STATE:07:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM6K2:PPM:MMS:STATE:07:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM6K2:PPM:MMS:STATE:07:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM6K2:PPM:MMS:STATE:07:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM6K2:PPM:MMS:STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM6K2:PPM:MMS:STATE:07:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM6K2:PPM:MMS:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM6K2:PPM:MMS:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM6K2:PPM:MMS:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM6K2:PPM:MMS:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM6K2:PPM:MMS:STATE:07:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM6K2:PPM:MMS:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM6K2:PPM:MMS:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM6K2:PPM:MMS:STATE:08:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM6K2:PPM:MMS:STATE:08:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM6K2:PPM:MMS:STATE:08:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM6K2:PPM:MMS:STATE:08:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM6K2:PPM:MMS:STATE:08:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM6K2:PPM:MMS:STATE:08:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM6K2:PPM:MMS:STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM6K2:PPM:MMS:STATE:08:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM6K2:PPM:MMS:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM6K2:PPM:MMS:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM6K2:PPM:MMS:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM6K2:PPM:MMS:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM6K2:PPM:MMS:STATE:08:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM6K2:PPM:MMS:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM6K2:PPM:MMS:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM6K2:PPM:MMS:STATE:09:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM6K2:PPM:MMS:STATE:09:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM6K2:PPM:MMS:STATE:09:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM6K2:PPM:MMS:STATE:09:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM6K2:PPM:MMS:STATE:09:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM6K2:PPM:MMS:STATE:09:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM6K2:PPM:MMS:STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM6K2:PPM:MMS:STATE:09:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM6K2:PPM:MMS:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM6K2:PPM:MMS:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM6K2:PPM:MMS:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM6K2:PPM:MMS:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM6K2:PPM:MMS:STATE:09:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM6K2:PPM:MMS:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM6K2:PPM:MMS:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM6K2:PPM:MMS:STATE:BUSY_RBV
      - bi
      - PRG_IM6K2_PPM.fbIM6K2.fbStates.bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - IM6K2:PPM:MMS:STATE:DONE_RBV
      - bi
      - PRG_IM6K2_PPM.fbIM6K2.fbStates.bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - IM6K2:PPM:MMS:STATE:ERR_RBV
      - bi
      - PRG_IM6K2_PPM.fbIM6K2.fbStates.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - IM6K2:PPM:MMS:STATE:ERRID_RBV
      - longin
      - PRG_IM6K2_PPM.fbIM6K2.fbStates.nErrorId
      - | io: input


    * - IM6K2:PPM:MMS:STATE:ERRMSG_RBV
      - waveform
      - PRG_IM6K2_PPM.fbIM6K2.fbStates.sErrorMessage
      - | io: input


    * - IM6K2:PPM:MMS:STATE:GET_RBV
      - mbbi
      - PRG_IM6K2_PPM.fbIM6K2.fbStates.enumGet
      - | io: input


    * - IM6K2:PPM:MMS:STATE:PMPS:ARB:ENABLE
      - bo
      - PRG_IM6K2_PPM.fbIM6K2.fbStates.bArbiterEnabled
      - | io: output


    * - IM6K2:PPM:MMS:STATE:PMPS:ARB:ENABLE_RBV
      - bi
      - PRG_IM6K2_PPM.fbIM6K2.fbStates.bArbiterEnabled
      - | io: output


    * - IM6K2:PPM:MMS:STATE:PMPS:MAINT
      - bo
      - PRG_IM6K2_PPM.fbIM6K2.fbStates.fbStatePMPS.bMaintMode
      - | io: output


    * - IM6K2:PPM:MMS:STATE:PMPS:MAINT_RBV
      - bi
      - PRG_IM6K2_PPM.fbIM6K2.fbStates.fbStatePMPS.bMaintMode
      - | io: output


    * - IM6K2:PPM:MMS:STATE:RESET
      - bo
      - PRG_IM6K2_PPM.fbIM6K2.fbStates.bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - IM6K2:PPM:MMS:STATE:RESET_RBV
      - bi
      - PRG_IM6K2_PPM.fbIM6K2.fbStates.bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - IM6K2:PPM:MMS:STATE:SET
      - mbbo
      - PRG_IM6K2_PPM.fbIM6K2.fbStates.enumSet
      - | io: output


    * - IM6K2:PPM:MMS:STATE:SET_RBV
      - mbbi
      - PRG_IM6K2_PPM.fbIM6K2.fbStates.enumSet
      - | io: output


    * - IM6K2:PPM:SFM:FLOW_RBV
      - ai
      - PRG_IM6K2_PPM.fbIM6K2.fbFlowMeter.fFlowRate
      - | io: input


    * - IM6K2:PPM:SFM:MA_RBV
      - longin
      - PRG_IM6K2_PPM.fbIM6K2.fbFlowMeter.fRaw
      - | io: input


    * - IM6K2:PPM:SPM:CALIB:MJ_RATIO
      - ao
      - PRG_IM6K2_PPM.fbIM6K2.fbPowerMeter.fCalibMJRatio
      - | io: output


    * - IM6K2:PPM:SPM:CALIB:MJ_RATIO_RBV
      - ai
      - PRG_IM6K2_PPM.fbIM6K2.fbPowerMeter.fCalibMJRatio
      - | io: output


    * - IM6K2:PPM:SPM:CALIB:OFFSET
      - ao
      - PRG_IM6K2_PPM.fbIM6K2.fbPowerMeter.fCalibRelOffset
      - | io: output


    * - IM6K2:PPM:SPM:CALIB:OFFSET_RBV
      - ai
      - PRG_IM6K2_PPM.fbIM6K2.fbPowerMeter.fCalibRelOffset
      - | io: output


    * - IM6K2:PPM:SPM:CALIB:RATIO
      - ao
      - PRG_IM6K2_PPM.fbIM6K2.fbPowerMeter.fCalibRelRatio
      - | io: output


    * - IM6K2:PPM:SPM:CALIB:RATIO_RBV
      - ai
      - PRG_IM6K2_PPM.fbIM6K2.fbPowerMeter.fCalibRelRatio
      - | io: output


    * - IM6K2:PPM:SPM:CALIB_BUFFER_RBV
      - waveform
      - PRG_IM6K2_PPM.fbIM6K2.fbPowerMeter.fCalibBaseBuffer
      - | io: input


    * - IM6K2:PPM:SPM:CALIB_RBV
      - ai
      - PRG_IM6K2_PPM.fbIM6K2.fbPowerMeter.fCalibBase
      - | io: input


    * - IM6K2:PPM:SPM:MJ_BUFFER_RBV
      - waveform
      - PRG_IM6K2_PPM.fbIM6K2.fbPowerMeter.fCalibMJBuffer
      - | field: EGU mJ
        | io: input


    * - IM6K2:PPM:SPM:MJ_RBV
      - ai
      - PRG_IM6K2_PPM.fbIM6K2.fbPowerMeter.fCalibMJ
      - | field: EGU mJ
        | io: input


    * - IM6K2:PPM:SPM:STC:CONN_RBV
      - bi
      - PRG_IM6K2_PPM.fbIM6K2.fbPowerMeter.fbThermoCouple.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - IM6K2:PPM:SPM:STC:ERR_RBV
      - bi
      - PRG_IM6K2_PPM.fbIM6K2.fbPowerMeter.fbThermoCouple.bError
      - | io: input


    * - IM6K2:PPM:SPM:STC:TEMP_RBV
      - ai
      - PRG_IM6K2_PPM.fbIM6K2.fbPowerMeter.fbThermoCouple.fTemp
      - | io: input


    * - IM6K2:PPM:SPM:VOLT_BUFFER_RBV
      - waveform
      - PRG_IM6K2_PPM.fbIM6K2.fbPowerMeter.fVoltageBuffer
      - | field: EGU mV
        | io: input


    * - IM6K2:PPM:SPM:VOLT_RBV
      - ai
      - PRG_IM6K2_PPM.fbIM6K2.fbPowerMeter.fVoltage
      - | field: EGU mV
        | io: input


    * - IM6K2:PPM:YAG:STC:CONN_RBV
      - bi
      - PRG_IM6K2_PPM.fbIM6K2.fbYagThermoCouple.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - IM6K2:PPM:YAG:STC:ERR_RBV
      - bi
      - PRG_IM6K2_PPM.fbIM6K2.fbYagThermoCouple.bError
      - | io: input


    * - IM6K2:PPM:YAG:STC:TEMP_RBV
      - ai
      - PRG_IM6K2_PPM.fbIM6K2.fbYagThermoCouple.fTemp
      - | io: input


    * - LI2K2:K2A:MMS:PLC:bAllBackwardEnable_RBV
      - bi
      - Summary of axis permission to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - LI2K2:K2A:MMS:PLC:bAllEnable_RBV
      - bi
      - Summary of axis permission to have power
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - LI2K2:K2A:MMS:PLC:bAllForwardEnable_RBV
      - bi
      - Summary of axis permission to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - LI2K2:K2A:MMS:PLC:bBrakeRelease_RBV
      - bi
      - TRUE if brake released
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - LI2K2:K2A:MMS:PLC:bBusy_RBV
      - bi
      - TRUE if in the middle of a command
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - LI2K2:K2A:MMS:PLC:bDone_RBV
      - bi
      - TRUE if command finished successfully
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - LI2K2:K2A:MMS:PLC:bEnable
      - bo
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - LI2K2:K2A:MMS:PLC:bEnable_RBV
      - bi
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - LI2K2:K2A:MMS:PLC:bEnableDone_RBV
      - bi
      - TRUE if done enabling
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - LI2K2:K2A:MMS:PLC:bError_RBV
      - bi
      - TRUE if we
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - LI2K2:K2A:MMS:PLC:bExecute
      - bo
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - LI2K2:K2A:MMS:PLC:bExecute_RBV
      - bi
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - LI2K2:K2A:MMS:PLC:bGantryAxis_RBV
      - bi
      - TRUE if gantry EPS active
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - LI2K2:K2A:MMS:PLC:bGantryBackwardEnable_RBV
      - bi
      - TRUE if gantry ok to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - LI2K2:K2A:MMS:PLC:bGantryForwardEnable_RBV
      - bi
      - TRUE if gantry ok to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - LI2K2:K2A:MMS:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - LI2K2:K2A:MMS:PLC:bHome_RBV
      - bi
      - TRUE if at homing switch
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - LI2K2:K2A:MMS:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - LI2K2:K2A:MMS:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - LI2K2:K2A:MMS:PLC:bHomed_RBV
      - bi
      - TRUE if the motor has been homed
      - | io: input


    * - LI2K2:K2A:MMS:PLC:bLimitBackwardEnable_RBV
      - bi
      - FALSE if reverse limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - LI2K2:K2A:MMS:PLC:bLimitForwardEnable_RBV
      - bi
      - FALSE if forward limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - LI2K2:K2A:MMS:PLC:bMoveCmd
      - bo
      - Start a move
      - | io: output


    * - LI2K2:K2A:MMS:PLC:bMoveCmd_RBV
      - bi
      - Start a move
      - | io: output


    * - LI2K2:K2A:MMS:PLC:bPowerSelf_RBV
      - bi
      - FALSE if axis is in PMPS
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - LI2K2:K2A:MMS:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - LI2K2:K2A:MMS:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - LI2K2:K2A:MMS:PLC:bSafetyReady_RBV
      - bi
      - TRUE if safe to start a move
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - LI2K2:K2A:MMS:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - LI2K2:K2A:MMS:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - LI2K2:K2A:MMS:PLC:fAcceleration
      - ao
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - LI2K2:K2A:MMS:PLC:fAcceleration_RBV
      - ai
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - LI2K2:K2A:MMS:PLC:fDeceleration
      - ao
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - LI2K2:K2A:MMS:PLC:fDeceleration_RBV
      - ai
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - LI2K2:K2A:MMS:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - LI2K2:K2A:MMS:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - LI2K2:K2A:MMS:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - LI2K2:K2A:MMS:PLC:fPosition
      - ao
      - Used internally and by the IOC as the set position
      - | io: output


    * - LI2K2:K2A:MMS:PLC:fPosition_RBV
      - ai
      - Used internally and by the IOC as the set position
      - | io: output


    * - LI2K2:K2A:MMS:PLC:fVelocity
      - ao
      - Used internally and by the IOC to set velocity
      - | io: output


    * - LI2K2:K2A:MMS:PLC:fVelocity_RBV
      - ai
      - Used internally and by the IOC to set velocity
      - | io: output


    * - LI2K2:K2A:MMS:PLC:nBrakeMode_RBV
      - mbbi
      - Describes when the brake will be released
      - | io: input


    * - LI2K2:K2A:MMS:PLC:nCmdData
      - longout
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - LI2K2:K2A:MMS:PLC:nCmdData_RBV
      - longin
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - LI2K2:K2A:MMS:PLC:nCommand
      - longout
      - Used internally and by the IOC to pick move type
      - | io: output


    * - LI2K2:K2A:MMS:PLC:nCommand_RBV
      - longin
      - Used internally and by the IOC to pick move type
      - | io: output


    * - LI2K2:K2A:MMS:PLC:nEnableMode_RBV
      - mbbi
      - Describes when the axis will automatically get power
      - | io: input


    * - LI2K2:K2A:MMS:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - LI2K2:K2A:MMS:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input


    * - LI2K2:K2A:MMS:PLC:nHomingMode_RBV
      - mbbi
      - Describes our homing strategy
      - | io: input


    * - LI2K2:K2A:MMS:PLC:nMotionAxisID_RBV
      - longin
      - Unique ID assigned to each axis in the NC
      - | io: input


    * - LI2K2:K2A:MMS:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input


    * - LI2K2:K2A:MMS:PLC:sName_RBV
      - waveform
      - PLC program name
      - | io: input


    * - LI2K2:K2A:MMS:STATE:01:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - LI2K2:K2A:MMS:STATE:01:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - LI2K2:K2A:MMS:STATE:01:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - LI2K2:K2A:MMS:STATE:01:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - LI2K2:K2A:MMS:STATE:01:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - LI2K2:K2A:MMS:STATE:01:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - LI2K2:K2A:MMS:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - LI2K2:K2A:MMS:STATE:01:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - LI2K2:K2A:MMS:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - LI2K2:K2A:MMS:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - LI2K2:K2A:MMS:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - LI2K2:K2A:MMS:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - LI2K2:K2A:MMS:STATE:01:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - LI2K2:K2A:MMS:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - LI2K2:K2A:MMS:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - LI2K2:K2A:MMS:STATE:02:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - LI2K2:K2A:MMS:STATE:02:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - LI2K2:K2A:MMS:STATE:02:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - LI2K2:K2A:MMS:STATE:02:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - LI2K2:K2A:MMS:STATE:02:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - LI2K2:K2A:MMS:STATE:02:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - LI2K2:K2A:MMS:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - LI2K2:K2A:MMS:STATE:02:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - LI2K2:K2A:MMS:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - LI2K2:K2A:MMS:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - LI2K2:K2A:MMS:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - LI2K2:K2A:MMS:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - LI2K2:K2A:MMS:STATE:02:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - LI2K2:K2A:MMS:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - LI2K2:K2A:MMS:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - LI2K2:K2A:MMS:STATE:03:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - LI2K2:K2A:MMS:STATE:03:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - LI2K2:K2A:MMS:STATE:03:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - LI2K2:K2A:MMS:STATE:03:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - LI2K2:K2A:MMS:STATE:03:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - LI2K2:K2A:MMS:STATE:03:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - LI2K2:K2A:MMS:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - LI2K2:K2A:MMS:STATE:03:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - LI2K2:K2A:MMS:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - LI2K2:K2A:MMS:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - LI2K2:K2A:MMS:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - LI2K2:K2A:MMS:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - LI2K2:K2A:MMS:STATE:03:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - LI2K2:K2A:MMS:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - LI2K2:K2A:MMS:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - LI2K2:K2A:MMS:STATE:04:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - LI2K2:K2A:MMS:STATE:04:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - LI2K2:K2A:MMS:STATE:04:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - LI2K2:K2A:MMS:STATE:04:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - LI2K2:K2A:MMS:STATE:04:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - LI2K2:K2A:MMS:STATE:04:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - LI2K2:K2A:MMS:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - LI2K2:K2A:MMS:STATE:04:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - LI2K2:K2A:MMS:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - LI2K2:K2A:MMS:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - LI2K2:K2A:MMS:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - LI2K2:K2A:MMS:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - LI2K2:K2A:MMS:STATE:04:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - LI2K2:K2A:MMS:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - LI2K2:K2A:MMS:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - LI2K2:K2A:MMS:STATE:05:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - LI2K2:K2A:MMS:STATE:05:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - LI2K2:K2A:MMS:STATE:05:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - LI2K2:K2A:MMS:STATE:05:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - LI2K2:K2A:MMS:STATE:05:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - LI2K2:K2A:MMS:STATE:05:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - LI2K2:K2A:MMS:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - LI2K2:K2A:MMS:STATE:05:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - LI2K2:K2A:MMS:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - LI2K2:K2A:MMS:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - LI2K2:K2A:MMS:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - LI2K2:K2A:MMS:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - LI2K2:K2A:MMS:STATE:05:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - LI2K2:K2A:MMS:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - LI2K2:K2A:MMS:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - LI2K2:K2A:MMS:STATE:06:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - LI2K2:K2A:MMS:STATE:06:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - LI2K2:K2A:MMS:STATE:06:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - LI2K2:K2A:MMS:STATE:06:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - LI2K2:K2A:MMS:STATE:06:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - LI2K2:K2A:MMS:STATE:06:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - LI2K2:K2A:MMS:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - LI2K2:K2A:MMS:STATE:06:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - LI2K2:K2A:MMS:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - LI2K2:K2A:MMS:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - LI2K2:K2A:MMS:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - LI2K2:K2A:MMS:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - LI2K2:K2A:MMS:STATE:06:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - LI2K2:K2A:MMS:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - LI2K2:K2A:MMS:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - LI2K2:K2A:MMS:STATE:07:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - LI2K2:K2A:MMS:STATE:07:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - LI2K2:K2A:MMS:STATE:07:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - LI2K2:K2A:MMS:STATE:07:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - LI2K2:K2A:MMS:STATE:07:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - LI2K2:K2A:MMS:STATE:07:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - LI2K2:K2A:MMS:STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - LI2K2:K2A:MMS:STATE:07:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - LI2K2:K2A:MMS:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - LI2K2:K2A:MMS:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - LI2K2:K2A:MMS:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - LI2K2:K2A:MMS:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - LI2K2:K2A:MMS:STATE:07:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - LI2K2:K2A:MMS:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - LI2K2:K2A:MMS:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - LI2K2:K2A:MMS:STATE:08:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - LI2K2:K2A:MMS:STATE:08:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - LI2K2:K2A:MMS:STATE:08:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - LI2K2:K2A:MMS:STATE:08:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - LI2K2:K2A:MMS:STATE:08:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - LI2K2:K2A:MMS:STATE:08:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - LI2K2:K2A:MMS:STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - LI2K2:K2A:MMS:STATE:08:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - LI2K2:K2A:MMS:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - LI2K2:K2A:MMS:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - LI2K2:K2A:MMS:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - LI2K2:K2A:MMS:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - LI2K2:K2A:MMS:STATE:08:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - LI2K2:K2A:MMS:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - LI2K2:K2A:MMS:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - LI2K2:K2A:MMS:STATE:09:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - LI2K2:K2A:MMS:STATE:09:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - LI2K2:K2A:MMS:STATE:09:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - LI2K2:K2A:MMS:STATE:09:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - LI2K2:K2A:MMS:STATE:09:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - LI2K2:K2A:MMS:STATE:09:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - LI2K2:K2A:MMS:STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - LI2K2:K2A:MMS:STATE:09:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - LI2K2:K2A:MMS:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - LI2K2:K2A:MMS:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - LI2K2:K2A:MMS:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - LI2K2:K2A:MMS:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - LI2K2:K2A:MMS:STATE:09:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - LI2K2:K2A:MMS:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - LI2K2:K2A:MMS:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - LI2K2:K2A:MMS:STATE:BUSY_RBV
      - bi
      - PRG_LI2K2_K2A.fbLI2K2.fbStates.bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - LI2K2:K2A:MMS:STATE:DONE_RBV
      - bi
      - PRG_LI2K2_K2A.fbLI2K2.fbStates.bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - LI2K2:K2A:MMS:STATE:ERR_RBV
      - bi
      - PRG_LI2K2_K2A.fbLI2K2.fbStates.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - LI2K2:K2A:MMS:STATE:ERRID_RBV
      - longin
      - PRG_LI2K2_K2A.fbLI2K2.fbStates.nErrorId
      - | io: input


    * - LI2K2:K2A:MMS:STATE:ERRMSG_RBV
      - waveform
      - PRG_LI2K2_K2A.fbLI2K2.fbStates.sErrorMessage
      - | io: input


    * - LI2K2:K2A:MMS:STATE:GET_RBV
      - mbbi
      - PRG_LI2K2_K2A.fbLI2K2.fbStates.enumGet
      - | io: input


    * - LI2K2:K2A:MMS:STATE:PMPS:ARB:ENABLE
      - bo
      - PRG_LI2K2_K2A.fbLI2K2.fbStates.bArbiterEnabled
      - | io: output


    * - LI2K2:K2A:MMS:STATE:PMPS:ARB:ENABLE_RBV
      - bi
      - PRG_LI2K2_K2A.fbLI2K2.fbStates.bArbiterEnabled
      - | io: output


    * - LI2K2:K2A:MMS:STATE:PMPS:MAINT
      - bo
      - PRG_LI2K2_K2A.fbLI2K2.fbStates.fbStatePMPS.bMaintMode
      - | io: output


    * - LI2K2:K2A:MMS:STATE:PMPS:MAINT_RBV
      - bi
      - PRG_LI2K2_K2A.fbLI2K2.fbStates.fbStatePMPS.bMaintMode
      - | io: output


    * - LI2K2:K2A:MMS:STATE:RESET
      - bo
      - PRG_LI2K2_K2A.fbLI2K2.fbStates.bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - LI2K2:K2A:MMS:STATE:RESET_RBV
      - bi
      - PRG_LI2K2_K2A.fbLI2K2.fbStates.bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - LI2K2:K2A:MMS:STATE:SET
      - mbbo
      - PRG_LI2K2_K2A.fbLI2K2.fbStates.enumSet
      - | io: output


    * - LI2K2:K2A:MMS:STATE:SET_RBV
      - mbbi
      - PRG_LI2K2_K2A.fbLI2K2.fbStates.enumSet
      - | io: output


    * - LI3K2:K2B:MMS:PLC:bAllBackwardEnable_RBV
      - bi
      - Summary of axis permission to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - LI3K2:K2B:MMS:PLC:bAllEnable_RBV
      - bi
      - Summary of axis permission to have power
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - LI3K2:K2B:MMS:PLC:bAllForwardEnable_RBV
      - bi
      - Summary of axis permission to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - LI3K2:K2B:MMS:PLC:bBrakeRelease_RBV
      - bi
      - TRUE if brake released
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - LI3K2:K2B:MMS:PLC:bBusy_RBV
      - bi
      - TRUE if in the middle of a command
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - LI3K2:K2B:MMS:PLC:bDone_RBV
      - bi
      - TRUE if command finished successfully
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - LI3K2:K2B:MMS:PLC:bEnable
      - bo
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - LI3K2:K2B:MMS:PLC:bEnable_RBV
      - bi
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - LI3K2:K2B:MMS:PLC:bEnableDone_RBV
      - bi
      - TRUE if done enabling
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - LI3K2:K2B:MMS:PLC:bError_RBV
      - bi
      - TRUE if we
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - LI3K2:K2B:MMS:PLC:bExecute
      - bo
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - LI3K2:K2B:MMS:PLC:bExecute_RBV
      - bi
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - LI3K2:K2B:MMS:PLC:bGantryAxis_RBV
      - bi
      - TRUE if gantry EPS active
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - LI3K2:K2B:MMS:PLC:bGantryBackwardEnable_RBV
      - bi
      - TRUE if gantry ok to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - LI3K2:K2B:MMS:PLC:bGantryForwardEnable_RBV
      - bi
      - TRUE if gantry ok to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - LI3K2:K2B:MMS:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - LI3K2:K2B:MMS:PLC:bHome_RBV
      - bi
      - TRUE if at homing switch
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - LI3K2:K2B:MMS:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - LI3K2:K2B:MMS:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - LI3K2:K2B:MMS:PLC:bHomed_RBV
      - bi
      - TRUE if the motor has been homed
      - | io: input


    * - LI3K2:K2B:MMS:PLC:bLimitBackwardEnable_RBV
      - bi
      - FALSE if reverse limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - LI3K2:K2B:MMS:PLC:bLimitForwardEnable_RBV
      - bi
      - FALSE if forward limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - LI3K2:K2B:MMS:PLC:bMoveCmd
      - bo
      - Start a move
      - | io: output


    * - LI3K2:K2B:MMS:PLC:bMoveCmd_RBV
      - bi
      - Start a move
      - | io: output


    * - LI3K2:K2B:MMS:PLC:bPowerSelf_RBV
      - bi
      - FALSE if axis is in PMPS
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - LI3K2:K2B:MMS:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - LI3K2:K2B:MMS:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - LI3K2:K2B:MMS:PLC:bSafetyReady_RBV
      - bi
      - TRUE if safe to start a move
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - LI3K2:K2B:MMS:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - LI3K2:K2B:MMS:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - LI3K2:K2B:MMS:PLC:fAcceleration
      - ao
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - LI3K2:K2B:MMS:PLC:fAcceleration_RBV
      - ai
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - LI3K2:K2B:MMS:PLC:fDeceleration
      - ao
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - LI3K2:K2B:MMS:PLC:fDeceleration_RBV
      - ai
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - LI3K2:K2B:MMS:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - LI3K2:K2B:MMS:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - LI3K2:K2B:MMS:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - LI3K2:K2B:MMS:PLC:fPosition
      - ao
      - Used internally and by the IOC as the set position
      - | io: output


    * - LI3K2:K2B:MMS:PLC:fPosition_RBV
      - ai
      - Used internally and by the IOC as the set position
      - | io: output


    * - LI3K2:K2B:MMS:PLC:fVelocity
      - ao
      - Used internally and by the IOC to set velocity
      - | io: output


    * - LI3K2:K2B:MMS:PLC:fVelocity_RBV
      - ai
      - Used internally and by the IOC to set velocity
      - | io: output


    * - LI3K2:K2B:MMS:PLC:nBrakeMode_RBV
      - mbbi
      - Describes when the brake will be released
      - | io: input


    * - LI3K2:K2B:MMS:PLC:nCmdData
      - longout
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - LI3K2:K2B:MMS:PLC:nCmdData_RBV
      - longin
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - LI3K2:K2B:MMS:PLC:nCommand
      - longout
      - Used internally and by the IOC to pick move type
      - | io: output


    * - LI3K2:K2B:MMS:PLC:nCommand_RBV
      - longin
      - Used internally and by the IOC to pick move type
      - | io: output


    * - LI3K2:K2B:MMS:PLC:nEnableMode_RBV
      - mbbi
      - Describes when the axis will automatically get power
      - | io: input


    * - LI3K2:K2B:MMS:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - LI3K2:K2B:MMS:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input


    * - LI3K2:K2B:MMS:PLC:nHomingMode_RBV
      - mbbi
      - Describes our homing strategy
      - | io: input


    * - LI3K2:K2B:MMS:PLC:nMotionAxisID_RBV
      - longin
      - Unique ID assigned to each axis in the NC
      - | io: input


    * - LI3K2:K2B:MMS:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input


    * - LI3K2:K2B:MMS:PLC:sName_RBV
      - waveform
      - PLC program name
      - | io: input


    * - LI3K2:K2B:MMS:STATE:01:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - LI3K2:K2B:MMS:STATE:01:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - LI3K2:K2B:MMS:STATE:01:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - LI3K2:K2B:MMS:STATE:01:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - LI3K2:K2B:MMS:STATE:01:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - LI3K2:K2B:MMS:STATE:01:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - LI3K2:K2B:MMS:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - LI3K2:K2B:MMS:STATE:01:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - LI3K2:K2B:MMS:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - LI3K2:K2B:MMS:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - LI3K2:K2B:MMS:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - LI3K2:K2B:MMS:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - LI3K2:K2B:MMS:STATE:01:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - LI3K2:K2B:MMS:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - LI3K2:K2B:MMS:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - LI3K2:K2B:MMS:STATE:02:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - LI3K2:K2B:MMS:STATE:02:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - LI3K2:K2B:MMS:STATE:02:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - LI3K2:K2B:MMS:STATE:02:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - LI3K2:K2B:MMS:STATE:02:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - LI3K2:K2B:MMS:STATE:02:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - LI3K2:K2B:MMS:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - LI3K2:K2B:MMS:STATE:02:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - LI3K2:K2B:MMS:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - LI3K2:K2B:MMS:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - LI3K2:K2B:MMS:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - LI3K2:K2B:MMS:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - LI3K2:K2B:MMS:STATE:02:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - LI3K2:K2B:MMS:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - LI3K2:K2B:MMS:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - LI3K2:K2B:MMS:STATE:03:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - LI3K2:K2B:MMS:STATE:03:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - LI3K2:K2B:MMS:STATE:03:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - LI3K2:K2B:MMS:STATE:03:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - LI3K2:K2B:MMS:STATE:03:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - LI3K2:K2B:MMS:STATE:03:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - LI3K2:K2B:MMS:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - LI3K2:K2B:MMS:STATE:03:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - LI3K2:K2B:MMS:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - LI3K2:K2B:MMS:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - LI3K2:K2B:MMS:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - LI3K2:K2B:MMS:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - LI3K2:K2B:MMS:STATE:03:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - LI3K2:K2B:MMS:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - LI3K2:K2B:MMS:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - LI3K2:K2B:MMS:STATE:04:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - LI3K2:K2B:MMS:STATE:04:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - LI3K2:K2B:MMS:STATE:04:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - LI3K2:K2B:MMS:STATE:04:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - LI3K2:K2B:MMS:STATE:04:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - LI3K2:K2B:MMS:STATE:04:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - LI3K2:K2B:MMS:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - LI3K2:K2B:MMS:STATE:04:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - LI3K2:K2B:MMS:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - LI3K2:K2B:MMS:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - LI3K2:K2B:MMS:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - LI3K2:K2B:MMS:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - LI3K2:K2B:MMS:STATE:04:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - LI3K2:K2B:MMS:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - LI3K2:K2B:MMS:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - LI3K2:K2B:MMS:STATE:05:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - LI3K2:K2B:MMS:STATE:05:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - LI3K2:K2B:MMS:STATE:05:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - LI3K2:K2B:MMS:STATE:05:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - LI3K2:K2B:MMS:STATE:05:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - LI3K2:K2B:MMS:STATE:05:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - LI3K2:K2B:MMS:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - LI3K2:K2B:MMS:STATE:05:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - LI3K2:K2B:MMS:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - LI3K2:K2B:MMS:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - LI3K2:K2B:MMS:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - LI3K2:K2B:MMS:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - LI3K2:K2B:MMS:STATE:05:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - LI3K2:K2B:MMS:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - LI3K2:K2B:MMS:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - LI3K2:K2B:MMS:STATE:06:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - LI3K2:K2B:MMS:STATE:06:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - LI3K2:K2B:MMS:STATE:06:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - LI3K2:K2B:MMS:STATE:06:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - LI3K2:K2B:MMS:STATE:06:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - LI3K2:K2B:MMS:STATE:06:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - LI3K2:K2B:MMS:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - LI3K2:K2B:MMS:STATE:06:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - LI3K2:K2B:MMS:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - LI3K2:K2B:MMS:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - LI3K2:K2B:MMS:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - LI3K2:K2B:MMS:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - LI3K2:K2B:MMS:STATE:06:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - LI3K2:K2B:MMS:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - LI3K2:K2B:MMS:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - LI3K2:K2B:MMS:STATE:07:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - LI3K2:K2B:MMS:STATE:07:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - LI3K2:K2B:MMS:STATE:07:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - LI3K2:K2B:MMS:STATE:07:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - LI3K2:K2B:MMS:STATE:07:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - LI3K2:K2B:MMS:STATE:07:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - LI3K2:K2B:MMS:STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - LI3K2:K2B:MMS:STATE:07:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - LI3K2:K2B:MMS:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - LI3K2:K2B:MMS:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - LI3K2:K2B:MMS:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - LI3K2:K2B:MMS:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - LI3K2:K2B:MMS:STATE:07:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - LI3K2:K2B:MMS:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - LI3K2:K2B:MMS:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - LI3K2:K2B:MMS:STATE:08:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - LI3K2:K2B:MMS:STATE:08:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - LI3K2:K2B:MMS:STATE:08:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - LI3K2:K2B:MMS:STATE:08:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - LI3K2:K2B:MMS:STATE:08:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - LI3K2:K2B:MMS:STATE:08:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - LI3K2:K2B:MMS:STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - LI3K2:K2B:MMS:STATE:08:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - LI3K2:K2B:MMS:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - LI3K2:K2B:MMS:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - LI3K2:K2B:MMS:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - LI3K2:K2B:MMS:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - LI3K2:K2B:MMS:STATE:08:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - LI3K2:K2B:MMS:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - LI3K2:K2B:MMS:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - LI3K2:K2B:MMS:STATE:09:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - LI3K2:K2B:MMS:STATE:09:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - LI3K2:K2B:MMS:STATE:09:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - LI3K2:K2B:MMS:STATE:09:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - LI3K2:K2B:MMS:STATE:09:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - LI3K2:K2B:MMS:STATE:09:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - LI3K2:K2B:MMS:STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - LI3K2:K2B:MMS:STATE:09:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - LI3K2:K2B:MMS:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - LI3K2:K2B:MMS:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - LI3K2:K2B:MMS:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - LI3K2:K2B:MMS:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - LI3K2:K2B:MMS:STATE:09:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - LI3K2:K2B:MMS:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - LI3K2:K2B:MMS:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - LI3K2:K2B:MMS:STATE:BUSY_RBV
      - bi
      - PRG_LI3K2_K2B.fbLI3K2.fbStates.bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - LI3K2:K2B:MMS:STATE:DONE_RBV
      - bi
      - PRG_LI3K2_K2B.fbLI3K2.fbStates.bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - LI3K2:K2B:MMS:STATE:ERR_RBV
      - bi
      - PRG_LI3K2_K2B.fbLI3K2.fbStates.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - LI3K2:K2B:MMS:STATE:ERRID_RBV
      - longin
      - PRG_LI3K2_K2B.fbLI3K2.fbStates.nErrorId
      - | io: input


    * - LI3K2:K2B:MMS:STATE:ERRMSG_RBV
      - waveform
      - PRG_LI3K2_K2B.fbLI3K2.fbStates.sErrorMessage
      - | io: input


    * - LI3K2:K2B:MMS:STATE:GET_RBV
      - mbbi
      - PRG_LI3K2_K2B.fbLI3K2.fbStates.enumGet
      - | io: input


    * - LI3K2:K2B:MMS:STATE:PMPS:ARB:ENABLE
      - bo
      - PRG_LI3K2_K2B.fbLI3K2.fbStates.bArbiterEnabled
      - | io: output


    * - LI3K2:K2B:MMS:STATE:PMPS:ARB:ENABLE_RBV
      - bi
      - PRG_LI3K2_K2B.fbLI3K2.fbStates.bArbiterEnabled
      - | io: output


    * - LI3K2:K2B:MMS:STATE:PMPS:MAINT
      - bo
      - PRG_LI3K2_K2B.fbLI3K2.fbStates.fbStatePMPS.bMaintMode
      - | io: output


    * - LI3K2:K2B:MMS:STATE:PMPS:MAINT_RBV
      - bi
      - PRG_LI3K2_K2B.fbLI3K2.fbStates.fbStatePMPS.bMaintMode
      - | io: output


    * - LI3K2:K2B:MMS:STATE:RESET
      - bo
      - PRG_LI3K2_K2B.fbLI3K2.fbStates.bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - LI3K2:K2B:MMS:STATE:RESET_RBV
      - bi
      - PRG_LI3K2_K2B.fbLI3K2.fbStates.bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - LI3K2:K2B:MMS:STATE:SET
      - mbbo
      - PRG_LI3K2_K2B.fbLI3K2.fbStates.enumSet
      - | io: output


    * - LI3K2:K2B:MMS:STATE:SET_RBV
      - mbbi
      - PRG_LI3K2_K2B.fbLI3K2.fbStates.enumSet
      - | io: output


    * - PF1K2:WFS:MMS:STATE:01:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF1K2:WFS:MMS:STATE:01:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF1K2:WFS:MMS:STATE:01:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF1K2:WFS:MMS:STATE:01:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF1K2:WFS:MMS:STATE:01:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - PF1K2:WFS:MMS:STATE:01:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - PF1K2:WFS:MMS:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - PF1K2:WFS:MMS:STATE:01:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1K2:WFS:MMS:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1K2:WFS:MMS:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - PF1K2:WFS:MMS:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - PF1K2:WFS:MMS:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - PF1K2:WFS:MMS:STATE:01:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1K2:WFS:MMS:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - PF1K2:WFS:MMS:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - PF1K2:WFS:MMS:STATE:02:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF1K2:WFS:MMS:STATE:02:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF1K2:WFS:MMS:STATE:02:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF1K2:WFS:MMS:STATE:02:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF1K2:WFS:MMS:STATE:02:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - PF1K2:WFS:MMS:STATE:02:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - PF1K2:WFS:MMS:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - PF1K2:WFS:MMS:STATE:02:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1K2:WFS:MMS:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1K2:WFS:MMS:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - PF1K2:WFS:MMS:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - PF1K2:WFS:MMS:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - PF1K2:WFS:MMS:STATE:02:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1K2:WFS:MMS:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - PF1K2:WFS:MMS:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - PF1K2:WFS:MMS:STATE:03:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF1K2:WFS:MMS:STATE:03:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF1K2:WFS:MMS:STATE:03:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF1K2:WFS:MMS:STATE:03:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF1K2:WFS:MMS:STATE:03:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - PF1K2:WFS:MMS:STATE:03:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - PF1K2:WFS:MMS:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - PF1K2:WFS:MMS:STATE:03:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1K2:WFS:MMS:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1K2:WFS:MMS:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - PF1K2:WFS:MMS:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - PF1K2:WFS:MMS:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - PF1K2:WFS:MMS:STATE:03:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1K2:WFS:MMS:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - PF1K2:WFS:MMS:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - PF1K2:WFS:MMS:STATE:04:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF1K2:WFS:MMS:STATE:04:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF1K2:WFS:MMS:STATE:04:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF1K2:WFS:MMS:STATE:04:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF1K2:WFS:MMS:STATE:04:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - PF1K2:WFS:MMS:STATE:04:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - PF1K2:WFS:MMS:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - PF1K2:WFS:MMS:STATE:04:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1K2:WFS:MMS:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1K2:WFS:MMS:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - PF1K2:WFS:MMS:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - PF1K2:WFS:MMS:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - PF1K2:WFS:MMS:STATE:04:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1K2:WFS:MMS:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - PF1K2:WFS:MMS:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - PF1K2:WFS:MMS:STATE:05:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF1K2:WFS:MMS:STATE:05:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF1K2:WFS:MMS:STATE:05:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF1K2:WFS:MMS:STATE:05:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF1K2:WFS:MMS:STATE:05:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - PF1K2:WFS:MMS:STATE:05:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - PF1K2:WFS:MMS:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - PF1K2:WFS:MMS:STATE:05:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1K2:WFS:MMS:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1K2:WFS:MMS:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - PF1K2:WFS:MMS:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - PF1K2:WFS:MMS:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - PF1K2:WFS:MMS:STATE:05:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1K2:WFS:MMS:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - PF1K2:WFS:MMS:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - PF1K2:WFS:MMS:STATE:06:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF1K2:WFS:MMS:STATE:06:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF1K2:WFS:MMS:STATE:06:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF1K2:WFS:MMS:STATE:06:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF1K2:WFS:MMS:STATE:06:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - PF1K2:WFS:MMS:STATE:06:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - PF1K2:WFS:MMS:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - PF1K2:WFS:MMS:STATE:06:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1K2:WFS:MMS:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1K2:WFS:MMS:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - PF1K2:WFS:MMS:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - PF1K2:WFS:MMS:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - PF1K2:WFS:MMS:STATE:06:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1K2:WFS:MMS:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - PF1K2:WFS:MMS:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - PF1K2:WFS:MMS:STATE:07:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF1K2:WFS:MMS:STATE:07:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF1K2:WFS:MMS:STATE:07:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF1K2:WFS:MMS:STATE:07:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF1K2:WFS:MMS:STATE:07:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - PF1K2:WFS:MMS:STATE:07:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - PF1K2:WFS:MMS:STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - PF1K2:WFS:MMS:STATE:07:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1K2:WFS:MMS:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1K2:WFS:MMS:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - PF1K2:WFS:MMS:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - PF1K2:WFS:MMS:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - PF1K2:WFS:MMS:STATE:07:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1K2:WFS:MMS:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - PF1K2:WFS:MMS:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - PF1K2:WFS:MMS:STATE:08:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF1K2:WFS:MMS:STATE:08:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF1K2:WFS:MMS:STATE:08:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF1K2:WFS:MMS:STATE:08:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF1K2:WFS:MMS:STATE:08:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - PF1K2:WFS:MMS:STATE:08:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - PF1K2:WFS:MMS:STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - PF1K2:WFS:MMS:STATE:08:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1K2:WFS:MMS:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1K2:WFS:MMS:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - PF1K2:WFS:MMS:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - PF1K2:WFS:MMS:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - PF1K2:WFS:MMS:STATE:08:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1K2:WFS:MMS:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - PF1K2:WFS:MMS:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - PF1K2:WFS:MMS:STATE:09:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF1K2:WFS:MMS:STATE:09:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF1K2:WFS:MMS:STATE:09:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF1K2:WFS:MMS:STATE:09:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF1K2:WFS:MMS:STATE:09:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - PF1K2:WFS:MMS:STATE:09:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - PF1K2:WFS:MMS:STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - PF1K2:WFS:MMS:STATE:09:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1K2:WFS:MMS:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1K2:WFS:MMS:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - PF1K2:WFS:MMS:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - PF1K2:WFS:MMS:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - PF1K2:WFS:MMS:STATE:09:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1K2:WFS:MMS:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - PF1K2:WFS:MMS:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - PF1K2:WFS:MMS:STATE:BUSY_RBV
      - bi
      - PRG_PF1K2_WFS.fbPF1K2.fbStates.bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - PF1K2:WFS:MMS:STATE:DONE_RBV
      - bi
      - PRG_PF1K2_WFS.fbPF1K2.fbStates.bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - PF1K2:WFS:MMS:STATE:ERR_RBV
      - bi
      - PRG_PF1K2_WFS.fbPF1K2.fbStates.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - PF1K2:WFS:MMS:STATE:ERRID_RBV
      - longin
      - PRG_PF1K2_WFS.fbPF1K2.fbStates.nErrorId
      - | io: input


    * - PF1K2:WFS:MMS:STATE:ERRMSG_RBV
      - waveform
      - PRG_PF1K2_WFS.fbPF1K2.fbStates.sErrorMessage
      - | io: input


    * - PF1K2:WFS:MMS:STATE:GET_RBV
      - mbbi
      - PRG_PF1K2_WFS.fbPF1K2.fbStates.enumGet
      - | io: input


    * - PF1K2:WFS:MMS:STATE:PMPS:ARB:ENABLE
      - bo
      - PRG_PF1K2_WFS.fbPF1K2.fbStates.bArbiterEnabled
      - | io: output


    * - PF1K2:WFS:MMS:STATE:PMPS:ARB:ENABLE_RBV
      - bi
      - PRG_PF1K2_WFS.fbPF1K2.fbStates.bArbiterEnabled
      - | io: output


    * - PF1K2:WFS:MMS:STATE:PMPS:MAINT
      - bo
      - PRG_PF1K2_WFS.fbPF1K2.fbStates.fbStatePMPS.bMaintMode
      - | io: output


    * - PF1K2:WFS:MMS:STATE:PMPS:MAINT_RBV
      - bi
      - PRG_PF1K2_WFS.fbPF1K2.fbStates.fbStatePMPS.bMaintMode
      - | io: output


    * - PF1K2:WFS:MMS:STATE:RESET
      - bo
      - PRG_PF1K2_WFS.fbPF1K2.fbStates.bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - PF1K2:WFS:MMS:STATE:RESET_RBV
      - bi
      - PRG_PF1K2_WFS.fbPF1K2.fbStates.bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - PF1K2:WFS:MMS:STATE:SET
      - mbbo
      - PRG_PF1K2_WFS.fbPF1K2.fbStates.enumSet
      - | io: output


    * - PF1K2:WFS:MMS:STATE:SET_RBV
      - mbbi
      - PRG_PF1K2_WFS.fbPF1K2.fbStates.enumSet
      - | io: output


    * - PF1K2:WFS:MMS:Y:PLC:bAllBackwardEnable_RBV
      - bi
      - Summary of axis permission to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1K2:WFS:MMS:Y:PLC:bAllEnable_RBV
      - bi
      - Summary of axis permission to have power
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1K2:WFS:MMS:Y:PLC:bAllForwardEnable_RBV
      - bi
      - Summary of axis permission to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1K2:WFS:MMS:Y:PLC:bBrakeRelease_RBV
      - bi
      - TRUE if brake released
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1K2:WFS:MMS:Y:PLC:bBusy_RBV
      - bi
      - TRUE if in the middle of a command
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1K2:WFS:MMS:Y:PLC:bDone_RBV
      - bi
      - TRUE if command finished successfully
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1K2:WFS:MMS:Y:PLC:bEnable
      - bo
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - PF1K2:WFS:MMS:Y:PLC:bEnable_RBV
      - bi
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - PF1K2:WFS:MMS:Y:PLC:bEnableDone_RBV
      - bi
      - TRUE if done enabling
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1K2:WFS:MMS:Y:PLC:bError_RBV
      - bi
      - TRUE if we
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1K2:WFS:MMS:Y:PLC:bExecute
      - bo
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - PF1K2:WFS:MMS:Y:PLC:bExecute_RBV
      - bi
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - PF1K2:WFS:MMS:Y:PLC:bGantryAxis_RBV
      - bi
      - TRUE if gantry EPS active
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1K2:WFS:MMS:Y:PLC:bGantryBackwardEnable_RBV
      - bi
      - TRUE if gantry ok to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1K2:WFS:MMS:Y:PLC:bGantryForwardEnable_RBV
      - bi
      - TRUE if gantry ok to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1K2:WFS:MMS:Y:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1K2:WFS:MMS:Y:PLC:bHome_RBV
      - bi
      - TRUE if at homing switch
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1K2:WFS:MMS:Y:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - PF1K2:WFS:MMS:Y:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - PF1K2:WFS:MMS:Y:PLC:bHomed_RBV
      - bi
      - TRUE if the motor has been homed
      - | io: input


    * - PF1K2:WFS:MMS:Y:PLC:bLimitBackwardEnable_RBV
      - bi
      - FALSE if reverse limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1K2:WFS:MMS:Y:PLC:bLimitForwardEnable_RBV
      - bi
      - FALSE if forward limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1K2:WFS:MMS:Y:PLC:bMoveCmd
      - bo
      - Start a move
      - | io: output


    * - PF1K2:WFS:MMS:Y:PLC:bMoveCmd_RBV
      - bi
      - Start a move
      - | io: output


    * - PF1K2:WFS:MMS:Y:PLC:bPowerSelf_RBV
      - bi
      - FALSE if axis is in PMPS
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1K2:WFS:MMS:Y:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - PF1K2:WFS:MMS:Y:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - PF1K2:WFS:MMS:Y:PLC:bSafetyReady_RBV
      - bi
      - TRUE if safe to start a move
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1K2:WFS:MMS:Y:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - PF1K2:WFS:MMS:Y:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - PF1K2:WFS:MMS:Y:PLC:fAcceleration
      - ao
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - PF1K2:WFS:MMS:Y:PLC:fAcceleration_RBV
      - ai
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - PF1K2:WFS:MMS:Y:PLC:fDeceleration
      - ao
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - PF1K2:WFS:MMS:Y:PLC:fDeceleration_RBV
      - ai
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - PF1K2:WFS:MMS:Y:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - PF1K2:WFS:MMS:Y:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - PF1K2:WFS:MMS:Y:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - PF1K2:WFS:MMS:Y:PLC:fPosition
      - ao
      - Used internally and by the IOC as the set position
      - | io: output


    * - PF1K2:WFS:MMS:Y:PLC:fPosition_RBV
      - ai
      - Used internally and by the IOC as the set position
      - | io: output


    * - PF1K2:WFS:MMS:Y:PLC:fVelocity
      - ao
      - Used internally and by the IOC to set velocity
      - | io: output


    * - PF1K2:WFS:MMS:Y:PLC:fVelocity_RBV
      - ai
      - Used internally and by the IOC to set velocity
      - | io: output


    * - PF1K2:WFS:MMS:Y:PLC:nBrakeMode_RBV
      - mbbi
      - Describes when the brake will be released
      - | io: input


    * - PF1K2:WFS:MMS:Y:PLC:nCmdData
      - longout
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - PF1K2:WFS:MMS:Y:PLC:nCmdData_RBV
      - longin
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - PF1K2:WFS:MMS:Y:PLC:nCommand
      - longout
      - Used internally and by the IOC to pick move type
      - | io: output


    * - PF1K2:WFS:MMS:Y:PLC:nCommand_RBV
      - longin
      - Used internally and by the IOC to pick move type
      - | io: output


    * - PF1K2:WFS:MMS:Y:PLC:nEnableMode_RBV
      - mbbi
      - Describes when the axis will automatically get power
      - | io: input


    * - PF1K2:WFS:MMS:Y:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - PF1K2:WFS:MMS:Y:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input


    * - PF1K2:WFS:MMS:Y:PLC:nHomingMode_RBV
      - mbbi
      - Describes our homing strategy
      - | io: input


    * - PF1K2:WFS:MMS:Y:PLC:nMotionAxisID_RBV
      - longin
      - Unique ID assigned to each axis in the NC
      - | io: input


    * - PF1K2:WFS:MMS:Y:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input


    * - PF1K2:WFS:MMS:Y:PLC:sName_RBV
      - waveform
      - PLC program name
      - | io: input


    * - PF1K2:WFS:MMS:Z:PLC:bAllBackwardEnable_RBV
      - bi
      - Summary of axis permission to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1K2:WFS:MMS:Z:PLC:bAllEnable_RBV
      - bi
      - Summary of axis permission to have power
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1K2:WFS:MMS:Z:PLC:bAllForwardEnable_RBV
      - bi
      - Summary of axis permission to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1K2:WFS:MMS:Z:PLC:bBrakeRelease_RBV
      - bi
      - TRUE if brake released
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1K2:WFS:MMS:Z:PLC:bBusy_RBV
      - bi
      - TRUE if in the middle of a command
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1K2:WFS:MMS:Z:PLC:bDone_RBV
      - bi
      - TRUE if command finished successfully
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1K2:WFS:MMS:Z:PLC:bEnable
      - bo
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - PF1K2:WFS:MMS:Z:PLC:bEnable_RBV
      - bi
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - PF1K2:WFS:MMS:Z:PLC:bEnableDone_RBV
      - bi
      - TRUE if done enabling
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1K2:WFS:MMS:Z:PLC:bError_RBV
      - bi
      - TRUE if we
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1K2:WFS:MMS:Z:PLC:bExecute
      - bo
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - PF1K2:WFS:MMS:Z:PLC:bExecute_RBV
      - bi
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - PF1K2:WFS:MMS:Z:PLC:bGantryAxis_RBV
      - bi
      - TRUE if gantry EPS active
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1K2:WFS:MMS:Z:PLC:bGantryBackwardEnable_RBV
      - bi
      - TRUE if gantry ok to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1K2:WFS:MMS:Z:PLC:bGantryForwardEnable_RBV
      - bi
      - TRUE if gantry ok to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1K2:WFS:MMS:Z:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1K2:WFS:MMS:Z:PLC:bHome_RBV
      - bi
      - TRUE if at homing switch
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1K2:WFS:MMS:Z:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - PF1K2:WFS:MMS:Z:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - PF1K2:WFS:MMS:Z:PLC:bHomed_RBV
      - bi
      - TRUE if the motor has been homed
      - | io: input


    * - PF1K2:WFS:MMS:Z:PLC:bLimitBackwardEnable_RBV
      - bi
      - FALSE if reverse limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1K2:WFS:MMS:Z:PLC:bLimitForwardEnable_RBV
      - bi
      - FALSE if forward limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1K2:WFS:MMS:Z:PLC:bMoveCmd
      - bo
      - Start a move
      - | io: output


    * - PF1K2:WFS:MMS:Z:PLC:bMoveCmd_RBV
      - bi
      - Start a move
      - | io: output


    * - PF1K2:WFS:MMS:Z:PLC:bPowerSelf_RBV
      - bi
      - FALSE if axis is in PMPS
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1K2:WFS:MMS:Z:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - PF1K2:WFS:MMS:Z:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - PF1K2:WFS:MMS:Z:PLC:bSafetyReady_RBV
      - bi
      - TRUE if safe to start a move
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1K2:WFS:MMS:Z:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - PF1K2:WFS:MMS:Z:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - PF1K2:WFS:MMS:Z:PLC:fAcceleration
      - ao
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - PF1K2:WFS:MMS:Z:PLC:fAcceleration_RBV
      - ai
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - PF1K2:WFS:MMS:Z:PLC:fDeceleration
      - ao
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - PF1K2:WFS:MMS:Z:PLC:fDeceleration_RBV
      - ai
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - PF1K2:WFS:MMS:Z:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - PF1K2:WFS:MMS:Z:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - PF1K2:WFS:MMS:Z:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - PF1K2:WFS:MMS:Z:PLC:fPosition
      - ao
      - Used internally and by the IOC as the set position
      - | io: output


    * - PF1K2:WFS:MMS:Z:PLC:fPosition_RBV
      - ai
      - Used internally and by the IOC as the set position
      - | io: output


    * - PF1K2:WFS:MMS:Z:PLC:fVelocity
      - ao
      - Used internally and by the IOC to set velocity
      - | io: output


    * - PF1K2:WFS:MMS:Z:PLC:fVelocity_RBV
      - ai
      - Used internally and by the IOC to set velocity
      - | io: output


    * - PF1K2:WFS:MMS:Z:PLC:nBrakeMode_RBV
      - mbbi
      - Describes when the brake will be released
      - | io: input


    * - PF1K2:WFS:MMS:Z:PLC:nCmdData
      - longout
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - PF1K2:WFS:MMS:Z:PLC:nCmdData_RBV
      - longin
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - PF1K2:WFS:MMS:Z:PLC:nCommand
      - longout
      - Used internally and by the IOC to pick move type
      - | io: output


    * - PF1K2:WFS:MMS:Z:PLC:nCommand_RBV
      - longin
      - Used internally and by the IOC to pick move type
      - | io: output


    * - PF1K2:WFS:MMS:Z:PLC:nEnableMode_RBV
      - mbbi
      - Describes when the axis will automatically get power
      - | io: input


    * - PF1K2:WFS:MMS:Z:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - PF1K2:WFS:MMS:Z:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input


    * - PF1K2:WFS:MMS:Z:PLC:nHomingMode_RBV
      - mbbi
      - Describes our homing strategy
      - | io: input


    * - PF1K2:WFS:MMS:Z:PLC:nMotionAxisID_RBV
      - longin
      - Unique ID assigned to each axis in the NC
      - | io: input


    * - PF1K2:WFS:MMS:Z:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input


    * - PF1K2:WFS:MMS:Z:PLC:sName_RBV
      - waveform
      - PLC program name
      - | io: input


    * - PF1K2:WFS:STC:01:CONN_RBV
      - bi
      - PRG_PF1K2_WFS.fbPF1K2.fbThermoCouple1.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - PF1K2:WFS:STC:01:ERR_RBV
      - bi
      - PRG_PF1K2_WFS.fbPF1K2.fbThermoCouple1.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - PF1K2:WFS:STC:01:TEMP_RBV
      - ai
      - PRG_PF1K2_WFS.fbPF1K2.fbThermoCouple1.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - PF1K2:WFS:STC:02:CONN_RBV
      - bi
      - PRG_PF1K2_WFS.fbPF1K2.fbThermoCouple2.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - PF1K2:WFS:STC:02:ERR_RBV
      - bi
      - PRG_PF1K2_WFS.fbPF1K2.fbThermoCouple2.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - PF1K2:WFS:STC:02:TEMP_RBV
      - ai
      - PRG_PF1K2_WFS.fbPF1K2.fbThermoCouple2.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - PF2K2:WFS:MMS:STATE:01:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF2K2:WFS:MMS:STATE:01:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF2K2:WFS:MMS:STATE:01:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF2K2:WFS:MMS:STATE:01:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF2K2:WFS:MMS:STATE:01:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - PF2K2:WFS:MMS:STATE:01:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - PF2K2:WFS:MMS:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - PF2K2:WFS:MMS:STATE:01:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF2K2:WFS:MMS:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF2K2:WFS:MMS:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - PF2K2:WFS:MMS:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - PF2K2:WFS:MMS:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - PF2K2:WFS:MMS:STATE:01:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF2K2:WFS:MMS:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - PF2K2:WFS:MMS:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - PF2K2:WFS:MMS:STATE:02:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF2K2:WFS:MMS:STATE:02:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF2K2:WFS:MMS:STATE:02:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF2K2:WFS:MMS:STATE:02:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF2K2:WFS:MMS:STATE:02:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - PF2K2:WFS:MMS:STATE:02:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - PF2K2:WFS:MMS:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - PF2K2:WFS:MMS:STATE:02:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF2K2:WFS:MMS:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF2K2:WFS:MMS:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - PF2K2:WFS:MMS:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - PF2K2:WFS:MMS:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - PF2K2:WFS:MMS:STATE:02:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF2K2:WFS:MMS:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - PF2K2:WFS:MMS:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - PF2K2:WFS:MMS:STATE:03:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF2K2:WFS:MMS:STATE:03:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF2K2:WFS:MMS:STATE:03:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF2K2:WFS:MMS:STATE:03:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF2K2:WFS:MMS:STATE:03:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - PF2K2:WFS:MMS:STATE:03:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - PF2K2:WFS:MMS:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - PF2K2:WFS:MMS:STATE:03:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF2K2:WFS:MMS:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF2K2:WFS:MMS:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - PF2K2:WFS:MMS:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - PF2K2:WFS:MMS:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - PF2K2:WFS:MMS:STATE:03:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF2K2:WFS:MMS:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - PF2K2:WFS:MMS:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - PF2K2:WFS:MMS:STATE:04:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF2K2:WFS:MMS:STATE:04:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF2K2:WFS:MMS:STATE:04:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF2K2:WFS:MMS:STATE:04:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF2K2:WFS:MMS:STATE:04:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - PF2K2:WFS:MMS:STATE:04:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - PF2K2:WFS:MMS:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - PF2K2:WFS:MMS:STATE:04:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF2K2:WFS:MMS:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF2K2:WFS:MMS:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - PF2K2:WFS:MMS:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - PF2K2:WFS:MMS:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - PF2K2:WFS:MMS:STATE:04:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF2K2:WFS:MMS:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - PF2K2:WFS:MMS:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - PF2K2:WFS:MMS:STATE:05:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF2K2:WFS:MMS:STATE:05:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF2K2:WFS:MMS:STATE:05:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF2K2:WFS:MMS:STATE:05:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF2K2:WFS:MMS:STATE:05:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - PF2K2:WFS:MMS:STATE:05:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - PF2K2:WFS:MMS:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - PF2K2:WFS:MMS:STATE:05:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF2K2:WFS:MMS:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF2K2:WFS:MMS:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - PF2K2:WFS:MMS:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - PF2K2:WFS:MMS:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - PF2K2:WFS:MMS:STATE:05:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF2K2:WFS:MMS:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - PF2K2:WFS:MMS:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - PF2K2:WFS:MMS:STATE:06:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF2K2:WFS:MMS:STATE:06:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF2K2:WFS:MMS:STATE:06:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF2K2:WFS:MMS:STATE:06:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF2K2:WFS:MMS:STATE:06:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - PF2K2:WFS:MMS:STATE:06:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - PF2K2:WFS:MMS:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - PF2K2:WFS:MMS:STATE:06:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF2K2:WFS:MMS:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF2K2:WFS:MMS:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - PF2K2:WFS:MMS:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - PF2K2:WFS:MMS:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - PF2K2:WFS:MMS:STATE:06:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF2K2:WFS:MMS:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - PF2K2:WFS:MMS:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - PF2K2:WFS:MMS:STATE:07:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF2K2:WFS:MMS:STATE:07:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF2K2:WFS:MMS:STATE:07:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF2K2:WFS:MMS:STATE:07:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF2K2:WFS:MMS:STATE:07:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - PF2K2:WFS:MMS:STATE:07:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - PF2K2:WFS:MMS:STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - PF2K2:WFS:MMS:STATE:07:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF2K2:WFS:MMS:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF2K2:WFS:MMS:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - PF2K2:WFS:MMS:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - PF2K2:WFS:MMS:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - PF2K2:WFS:MMS:STATE:07:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF2K2:WFS:MMS:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - PF2K2:WFS:MMS:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - PF2K2:WFS:MMS:STATE:08:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF2K2:WFS:MMS:STATE:08:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF2K2:WFS:MMS:STATE:08:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF2K2:WFS:MMS:STATE:08:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF2K2:WFS:MMS:STATE:08:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - PF2K2:WFS:MMS:STATE:08:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - PF2K2:WFS:MMS:STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - PF2K2:WFS:MMS:STATE:08:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF2K2:WFS:MMS:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF2K2:WFS:MMS:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - PF2K2:WFS:MMS:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - PF2K2:WFS:MMS:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - PF2K2:WFS:MMS:STATE:08:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF2K2:WFS:MMS:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - PF2K2:WFS:MMS:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - PF2K2:WFS:MMS:STATE:09:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF2K2:WFS:MMS:STATE:09:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF2K2:WFS:MMS:STATE:09:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF2K2:WFS:MMS:STATE:09:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF2K2:WFS:MMS:STATE:09:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - PF2K2:WFS:MMS:STATE:09:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - PF2K2:WFS:MMS:STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - PF2K2:WFS:MMS:STATE:09:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF2K2:WFS:MMS:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF2K2:WFS:MMS:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - PF2K2:WFS:MMS:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - PF2K2:WFS:MMS:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - PF2K2:WFS:MMS:STATE:09:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF2K2:WFS:MMS:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - PF2K2:WFS:MMS:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - PF2K2:WFS:MMS:STATE:BUSY_RBV
      - bi
      - PRG_PF2K2_WFS.fbPF2K2.fbStates.bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - PF2K2:WFS:MMS:STATE:DONE_RBV
      - bi
      - PRG_PF2K2_WFS.fbPF2K2.fbStates.bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - PF2K2:WFS:MMS:STATE:ERR_RBV
      - bi
      - PRG_PF2K2_WFS.fbPF2K2.fbStates.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - PF2K2:WFS:MMS:STATE:ERRID_RBV
      - longin
      - PRG_PF2K2_WFS.fbPF2K2.fbStates.nErrorId
      - | io: input


    * - PF2K2:WFS:MMS:STATE:ERRMSG_RBV
      - waveform
      - PRG_PF2K2_WFS.fbPF2K2.fbStates.sErrorMessage
      - | io: input


    * - PF2K2:WFS:MMS:STATE:GET_RBV
      - mbbi
      - PRG_PF2K2_WFS.fbPF2K2.fbStates.enumGet
      - | io: input


    * - PF2K2:WFS:MMS:STATE:PMPS:ARB:ENABLE
      - bo
      - PRG_PF2K2_WFS.fbPF2K2.fbStates.bArbiterEnabled
      - | io: output


    * - PF2K2:WFS:MMS:STATE:PMPS:ARB:ENABLE_RBV
      - bi
      - PRG_PF2K2_WFS.fbPF2K2.fbStates.bArbiterEnabled
      - | io: output


    * - PF2K2:WFS:MMS:STATE:PMPS:MAINT
      - bo
      - PRG_PF2K2_WFS.fbPF2K2.fbStates.fbStatePMPS.bMaintMode
      - | io: output


    * - PF2K2:WFS:MMS:STATE:PMPS:MAINT_RBV
      - bi
      - PRG_PF2K2_WFS.fbPF2K2.fbStates.fbStatePMPS.bMaintMode
      - | io: output


    * - PF2K2:WFS:MMS:STATE:RESET
      - bo
      - PRG_PF2K2_WFS.fbPF2K2.fbStates.bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - PF2K2:WFS:MMS:STATE:RESET_RBV
      - bi
      - PRG_PF2K2_WFS.fbPF2K2.fbStates.bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - PF2K2:WFS:MMS:STATE:SET
      - mbbo
      - PRG_PF2K2_WFS.fbPF2K2.fbStates.enumSet
      - | io: output


    * - PF2K2:WFS:MMS:STATE:SET_RBV
      - mbbi
      - PRG_PF2K2_WFS.fbPF2K2.fbStates.enumSet
      - | io: output


    * - PF2K2:WFS:MMS:Y:PLC:bAllBackwardEnable_RBV
      - bi
      - Summary of axis permission to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF2K2:WFS:MMS:Y:PLC:bAllEnable_RBV
      - bi
      - Summary of axis permission to have power
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF2K2:WFS:MMS:Y:PLC:bAllForwardEnable_RBV
      - bi
      - Summary of axis permission to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF2K2:WFS:MMS:Y:PLC:bBrakeRelease_RBV
      - bi
      - TRUE if brake released
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF2K2:WFS:MMS:Y:PLC:bBusy_RBV
      - bi
      - TRUE if in the middle of a command
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF2K2:WFS:MMS:Y:PLC:bDone_RBV
      - bi
      - TRUE if command finished successfully
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF2K2:WFS:MMS:Y:PLC:bEnable
      - bo
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - PF2K2:WFS:MMS:Y:PLC:bEnable_RBV
      - bi
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - PF2K2:WFS:MMS:Y:PLC:bEnableDone_RBV
      - bi
      - TRUE if done enabling
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF2K2:WFS:MMS:Y:PLC:bError_RBV
      - bi
      - TRUE if we
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF2K2:WFS:MMS:Y:PLC:bExecute
      - bo
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - PF2K2:WFS:MMS:Y:PLC:bExecute_RBV
      - bi
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - PF2K2:WFS:MMS:Y:PLC:bGantryAxis_RBV
      - bi
      - TRUE if gantry EPS active
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF2K2:WFS:MMS:Y:PLC:bGantryBackwardEnable_RBV
      - bi
      - TRUE if gantry ok to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF2K2:WFS:MMS:Y:PLC:bGantryForwardEnable_RBV
      - bi
      - TRUE if gantry ok to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF2K2:WFS:MMS:Y:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF2K2:WFS:MMS:Y:PLC:bHome_RBV
      - bi
      - TRUE if at homing switch
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF2K2:WFS:MMS:Y:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - PF2K2:WFS:MMS:Y:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - PF2K2:WFS:MMS:Y:PLC:bHomed_RBV
      - bi
      - TRUE if the motor has been homed
      - | io: input


    * - PF2K2:WFS:MMS:Y:PLC:bLimitBackwardEnable_RBV
      - bi
      - FALSE if reverse limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF2K2:WFS:MMS:Y:PLC:bLimitForwardEnable_RBV
      - bi
      - FALSE if forward limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF2K2:WFS:MMS:Y:PLC:bMoveCmd
      - bo
      - Start a move
      - | io: output


    * - PF2K2:WFS:MMS:Y:PLC:bMoveCmd_RBV
      - bi
      - Start a move
      - | io: output


    * - PF2K2:WFS:MMS:Y:PLC:bPowerSelf_RBV
      - bi
      - FALSE if axis is in PMPS
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF2K2:WFS:MMS:Y:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - PF2K2:WFS:MMS:Y:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - PF2K2:WFS:MMS:Y:PLC:bSafetyReady_RBV
      - bi
      - TRUE if safe to start a move
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF2K2:WFS:MMS:Y:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - PF2K2:WFS:MMS:Y:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - PF2K2:WFS:MMS:Y:PLC:fAcceleration
      - ao
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - PF2K2:WFS:MMS:Y:PLC:fAcceleration_RBV
      - ai
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - PF2K2:WFS:MMS:Y:PLC:fDeceleration
      - ao
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - PF2K2:WFS:MMS:Y:PLC:fDeceleration_RBV
      - ai
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - PF2K2:WFS:MMS:Y:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - PF2K2:WFS:MMS:Y:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - PF2K2:WFS:MMS:Y:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - PF2K2:WFS:MMS:Y:PLC:fPosition
      - ao
      - Used internally and by the IOC as the set position
      - | io: output


    * - PF2K2:WFS:MMS:Y:PLC:fPosition_RBV
      - ai
      - Used internally and by the IOC as the set position
      - | io: output


    * - PF2K2:WFS:MMS:Y:PLC:fVelocity
      - ao
      - Used internally and by the IOC to set velocity
      - | io: output


    * - PF2K2:WFS:MMS:Y:PLC:fVelocity_RBV
      - ai
      - Used internally and by the IOC to set velocity
      - | io: output


    * - PF2K2:WFS:MMS:Y:PLC:nBrakeMode_RBV
      - mbbi
      - Describes when the brake will be released
      - | io: input


    * - PF2K2:WFS:MMS:Y:PLC:nCmdData
      - longout
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - PF2K2:WFS:MMS:Y:PLC:nCmdData_RBV
      - longin
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - PF2K2:WFS:MMS:Y:PLC:nCommand
      - longout
      - Used internally and by the IOC to pick move type
      - | io: output


    * - PF2K2:WFS:MMS:Y:PLC:nCommand_RBV
      - longin
      - Used internally and by the IOC to pick move type
      - | io: output


    * - PF2K2:WFS:MMS:Y:PLC:nEnableMode_RBV
      - mbbi
      - Describes when the axis will automatically get power
      - | io: input


    * - PF2K2:WFS:MMS:Y:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - PF2K2:WFS:MMS:Y:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input


    * - PF2K2:WFS:MMS:Y:PLC:nHomingMode_RBV
      - mbbi
      - Describes our homing strategy
      - | io: input


    * - PF2K2:WFS:MMS:Y:PLC:nMotionAxisID_RBV
      - longin
      - Unique ID assigned to each axis in the NC
      - | io: input


    * - PF2K2:WFS:MMS:Y:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input


    * - PF2K2:WFS:MMS:Y:PLC:sName_RBV
      - waveform
      - PLC program name
      - | io: input


    * - PF2K2:WFS:MMS:Z:PLC:bAllBackwardEnable_RBV
      - bi
      - Summary of axis permission to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF2K2:WFS:MMS:Z:PLC:bAllEnable_RBV
      - bi
      - Summary of axis permission to have power
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF2K2:WFS:MMS:Z:PLC:bAllForwardEnable_RBV
      - bi
      - Summary of axis permission to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF2K2:WFS:MMS:Z:PLC:bBrakeRelease_RBV
      - bi
      - TRUE if brake released
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF2K2:WFS:MMS:Z:PLC:bBusy_RBV
      - bi
      - TRUE if in the middle of a command
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF2K2:WFS:MMS:Z:PLC:bDone_RBV
      - bi
      - TRUE if command finished successfully
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF2K2:WFS:MMS:Z:PLC:bEnable
      - bo
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - PF2K2:WFS:MMS:Z:PLC:bEnable_RBV
      - bi
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - PF2K2:WFS:MMS:Z:PLC:bEnableDone_RBV
      - bi
      - TRUE if done enabling
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF2K2:WFS:MMS:Z:PLC:bError_RBV
      - bi
      - TRUE if we
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF2K2:WFS:MMS:Z:PLC:bExecute
      - bo
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - PF2K2:WFS:MMS:Z:PLC:bExecute_RBV
      - bi
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - PF2K2:WFS:MMS:Z:PLC:bGantryAxis_RBV
      - bi
      - TRUE if gantry EPS active
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF2K2:WFS:MMS:Z:PLC:bGantryBackwardEnable_RBV
      - bi
      - TRUE if gantry ok to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF2K2:WFS:MMS:Z:PLC:bGantryForwardEnable_RBV
      - bi
      - TRUE if gantry ok to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF2K2:WFS:MMS:Z:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF2K2:WFS:MMS:Z:PLC:bHome_RBV
      - bi
      - TRUE if at homing switch
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF2K2:WFS:MMS:Z:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - PF2K2:WFS:MMS:Z:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - PF2K2:WFS:MMS:Z:PLC:bHomed_RBV
      - bi
      - TRUE if the motor has been homed
      - | io: input


    * - PF2K2:WFS:MMS:Z:PLC:bLimitBackwardEnable_RBV
      - bi
      - FALSE if reverse limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF2K2:WFS:MMS:Z:PLC:bLimitForwardEnable_RBV
      - bi
      - FALSE if forward limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF2K2:WFS:MMS:Z:PLC:bMoveCmd
      - bo
      - Start a move
      - | io: output


    * - PF2K2:WFS:MMS:Z:PLC:bMoveCmd_RBV
      - bi
      - Start a move
      - | io: output


    * - PF2K2:WFS:MMS:Z:PLC:bPowerSelf_RBV
      - bi
      - FALSE if axis is in PMPS
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF2K2:WFS:MMS:Z:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - PF2K2:WFS:MMS:Z:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - PF2K2:WFS:MMS:Z:PLC:bSafetyReady_RBV
      - bi
      - TRUE if safe to start a move
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF2K2:WFS:MMS:Z:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - PF2K2:WFS:MMS:Z:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - PF2K2:WFS:MMS:Z:PLC:fAcceleration
      - ao
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - PF2K2:WFS:MMS:Z:PLC:fAcceleration_RBV
      - ai
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - PF2K2:WFS:MMS:Z:PLC:fDeceleration
      - ao
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - PF2K2:WFS:MMS:Z:PLC:fDeceleration_RBV
      - ai
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - PF2K2:WFS:MMS:Z:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - PF2K2:WFS:MMS:Z:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - PF2K2:WFS:MMS:Z:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - PF2K2:WFS:MMS:Z:PLC:fPosition
      - ao
      - Used internally and by the IOC as the set position
      - | io: output


    * - PF2K2:WFS:MMS:Z:PLC:fPosition_RBV
      - ai
      - Used internally and by the IOC as the set position
      - | io: output


    * - PF2K2:WFS:MMS:Z:PLC:fVelocity
      - ao
      - Used internally and by the IOC to set velocity
      - | io: output


    * - PF2K2:WFS:MMS:Z:PLC:fVelocity_RBV
      - ai
      - Used internally and by the IOC to set velocity
      - | io: output


    * - PF2K2:WFS:MMS:Z:PLC:nBrakeMode_RBV
      - mbbi
      - Describes when the brake will be released
      - | io: input


    * - PF2K2:WFS:MMS:Z:PLC:nCmdData
      - longout
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - PF2K2:WFS:MMS:Z:PLC:nCmdData_RBV
      - longin
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - PF2K2:WFS:MMS:Z:PLC:nCommand
      - longout
      - Used internally and by the IOC to pick move type
      - | io: output


    * - PF2K2:WFS:MMS:Z:PLC:nCommand_RBV
      - longin
      - Used internally and by the IOC to pick move type
      - | io: output


    * - PF2K2:WFS:MMS:Z:PLC:nEnableMode_RBV
      - mbbi
      - Describes when the axis will automatically get power
      - | io: input


    * - PF2K2:WFS:MMS:Z:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - PF2K2:WFS:MMS:Z:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input


    * - PF2K2:WFS:MMS:Z:PLC:nHomingMode_RBV
      - mbbi
      - Describes our homing strategy
      - | io: input


    * - PF2K2:WFS:MMS:Z:PLC:nMotionAxisID_RBV
      - longin
      - Unique ID assigned to each axis in the NC
      - | io: input


    * - PF2K2:WFS:MMS:Z:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input


    * - PF2K2:WFS:MMS:Z:PLC:sName_RBV
      - waveform
      - PLC program name
      - | io: input


    * - PF2K2:WFS:STC:01:CONN_RBV
      - bi
      - PRG_PF2K2_WFS.fbPF2K2.fbThermoCouple1.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - PF2K2:WFS:STC:01:ERR_RBV
      - bi
      - PRG_PF2K2_WFS.fbPF2K2.fbThermoCouple1.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - PF2K2:WFS:STC:01:TEMP_RBV
      - ai
      - PRG_PF2K2_WFS.fbPF2K2.fbThermoCouple1.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - PF2K2:WFS:STC:02:CONN_RBV
      - bi
      - PRG_PF2K2_WFS.fbPF2K2.fbThermoCouple2.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - PF2K2:WFS:STC:02:ERR_RBV
      - bi
      - PRG_PF2K2_WFS.fbPF2K2.fbThermoCouple2.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - PF2K2:WFS:STC:02:TEMP_RBV
      - ai
      - PRG_PF2K2_WFS.fbPF2K2.fbThermoCouple2.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:001:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:001:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:001:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:001:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:001:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:001:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:001:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:001:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:001:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:002:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:002:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:002:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:002:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:002:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:002:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:002:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:002:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:002:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:003:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:003:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:003:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:003:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:003:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:003:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:003:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:003:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:003:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:004:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:004:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:004:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:004:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:004:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:004:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:004:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:004:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:004:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:005:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:005:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:005:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:005:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:005:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:005:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:005:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:005:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:005:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:006:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:006:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:006:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:006:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:006:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:006:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:006:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:006:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:006:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:007:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:007:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:007:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:007:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:007:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:007:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:007:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:007:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:007:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:008:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:008:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:008:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:008:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:008:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:008:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:008:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:008:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:008:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:009:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:009:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:009:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:009:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:009:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:009:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:009:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:009:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:009:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:010:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:010:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:010:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:010:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:010:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:010:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:010:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:010:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:010:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:011:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:011:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:011:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:011:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:011:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:011:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:011:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:011:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:011:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:012:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:012:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:012:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:012:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:012:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:012:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:012:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:012:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:012:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:013:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:013:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:013:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:013:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:013:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:013:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:013:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:013:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:013:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:014:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:014:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:014:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:014:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:014:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:014:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:014:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:014:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:014:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:015:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:015:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:015:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:015:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:015:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:015:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:015:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:015:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:015:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:016:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:016:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:016:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:016:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:016:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:016:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:016:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:016:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:016:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:017:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:017:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:017:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:017:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:017:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:017:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:017:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:017:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:017:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:018:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:018:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:018:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:018:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:018:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:018:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:018:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:018:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:018:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:019:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:019:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:019:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:019:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:019:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:019:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:019:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:019:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:019:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:020:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:020:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:020:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:020:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:020:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:020:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:020:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:020:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:020:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:021:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:021:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:021:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:021:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:021:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:021:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:021:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:021:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:021:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:022:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:022:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:022:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:022:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:022:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:022:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:022:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:022:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:022:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:023:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:023:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:023:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:023:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:023:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:023:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:023:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:023:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:023:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:024:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:024:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:024:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:024:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:024:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:024:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:024:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:024:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:024:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:025:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:025:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:025:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:025:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:025:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:025:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:025:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:025:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:025:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:026:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:026:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:026:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:026:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:026:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:026:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:026:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:026:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:026:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:027:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:027:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:027:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:027:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:027:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:027:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:027:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:027:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:027:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:028:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:028:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:028:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:028:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:028:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:028:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:028:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:028:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:028:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:029:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:029:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:029:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:029:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:029:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:029:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:029:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:029:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:029:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:030:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:030:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:030:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:030:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:030:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:030:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:030:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:030:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:030:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:031:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:031:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:031:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:031:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:031:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:031:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:031:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:031:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:031:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:032:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:032:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:032:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:032:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:032:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:032:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:032:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:032:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:032:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:033:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:033:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:033:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:033:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:033:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:033:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:033:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:033:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:033:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:034:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:034:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:034:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:034:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:034:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:034:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:034:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:034:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:034:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:035:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:035:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:035:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:035:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:035:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:035:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:035:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:035:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:035:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:036:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:036:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:036:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:036:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:036:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:036:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:036:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:036:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:036:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:037:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:037:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:037:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:037:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:037:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:037:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:037:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:037:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:037:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:038:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:038:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:038:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:038:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:038:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:038:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:038:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:038:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:038:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:039:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:039:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:039:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:039:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:039:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:039:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:039:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:039:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:039:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:040:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:040:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:040:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:040:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:040:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:040:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:040:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:040:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:040:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:041:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:041:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:041:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:041:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:041:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:041:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:041:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:041:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:041:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:042:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:042:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:042:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:042:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:042:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:042:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:042:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:042:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:042:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:043:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:043:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:043:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:043:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:043:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:043:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:043:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:043:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:043:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:044:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:044:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:044:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:044:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:044:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:044:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:044:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:044:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:044:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:045:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:045:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:045:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:045:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:045:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:045:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:045:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:045:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:045:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:046:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:046:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:046:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:046:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:046:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:046:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:046:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:046:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:046:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:047:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:047:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:047:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:047:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:047:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:047:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:047:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:047:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:047:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:048:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:048:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:048:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:048:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:048:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:048:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:048:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:048:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:048:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:049:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:049:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:049:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:049:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:049:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:049:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:049:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:049:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:049:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:050:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:050:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:050:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:050:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:050:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:050:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:050:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:050:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:AP:Entry:050:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:ArbiterID_RBV
      - longin
      - Arbiter ID for elev. req.
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:ArbitratedBP:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:ArbitratedBP:PhotonEnergyRanges_RBV
      - longin
      - Arbitrated BP
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:01:ArbitratedBP:Rate_RBV
      - longin
      - Arbitrated BP
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:01:ArbitratedBP:Transmission_RBV
      - ai
      - Arbitrated BP
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:01:ArbitratedBP:Valid_RBV
      - bi
      - Arbitrated BP
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:ArbitratedBP:Veto_RBV
      - waveform
      - Arbitrated BP
      - | io: input


    * - PLC:RIX:MOTION:ARB:01:CohortCounter_RBV
      - longin
      - Intrnl cohort counter
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:001:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:001:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:001:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:001:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:001:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:001:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:001:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:001:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:001:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:002:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:002:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:002:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:002:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:002:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:002:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:002:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:002:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:002:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:003:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:003:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:003:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:003:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:003:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:003:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:003:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:003:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:003:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:004:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:004:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:004:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:004:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:004:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:004:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:004:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:004:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:004:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:005:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:005:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:005:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:005:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:005:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:005:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:005:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:005:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:005:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:006:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:006:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:006:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:006:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:006:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:006:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:006:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:006:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:006:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:007:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:007:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:007:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:007:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:007:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:007:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:007:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:007:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:007:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:008:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:008:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:008:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:008:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:008:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:008:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:008:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:008:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:008:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:009:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:009:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:009:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:009:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:009:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:009:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:009:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:009:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:009:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:010:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:010:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:010:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:010:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:010:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:010:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:010:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:010:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:010:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:011:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:011:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:011:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:011:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:011:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:011:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:011:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:011:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:011:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:012:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:012:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:012:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:012:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:012:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:012:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:012:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:012:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:012:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:013:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:013:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:013:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:013:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:013:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:013:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:013:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:013:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:013:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:014:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:014:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:014:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:014:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:014:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:014:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:014:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:014:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:014:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:015:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:015:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:015:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:015:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:015:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:015:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:015:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:015:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:015:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:016:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:016:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:016:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:016:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:016:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:016:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:016:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:016:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:016:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:017:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:017:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:017:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:017:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:017:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:017:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:017:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:017:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:017:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:018:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:018:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:018:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:018:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:018:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:018:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:018:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:018:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:018:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:019:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:019:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:019:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:019:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:019:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:019:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:019:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:019:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:019:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:020:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:020:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:020:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:020:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:020:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:020:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:020:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:020:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:020:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:021:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:021:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:021:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:021:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:021:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:021:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:021:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:021:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:021:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:022:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:022:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:022:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:022:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:022:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:022:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:022:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:022:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:022:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:023:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:023:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:023:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:023:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:023:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:023:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:023:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:023:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:023:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:024:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:024:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:024:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:024:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:024:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:024:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:024:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:024:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:024:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:025:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:025:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:025:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:025:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:025:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:025:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:025:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:025:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:025:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:026:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:026:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:026:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:026:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:026:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:026:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:026:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:026:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:026:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:027:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:027:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:027:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:027:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:027:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:027:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:027:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:027:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:027:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:028:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:028:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:028:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:028:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:028:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:028:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:028:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:028:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:028:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:029:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:029:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:029:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:029:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:029:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:029:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:029:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:029:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:029:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:030:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:030:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:030:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:030:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:030:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:030:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:030:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:030:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:030:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:031:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:031:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:031:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:031:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:031:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:031:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:031:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:031:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:031:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:032:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:032:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:032:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:032:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:032:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:032:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:032:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:032:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:032:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:033:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:033:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:033:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:033:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:033:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:033:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:033:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:033:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:033:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:034:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:034:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:034:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:034:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:034:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:034:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:034:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:034:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:034:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:035:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:035:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:035:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:035:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:035:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:035:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:035:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:035:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:035:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:036:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:036:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:036:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:036:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:036:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:036:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:036:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:036:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:036:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:037:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:037:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:037:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:037:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:037:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:037:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:037:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:037:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:037:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:038:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:038:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:038:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:038:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:038:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:038:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:038:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:038:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:038:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:039:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:039:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:039:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:039:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:039:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:039:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:039:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:039:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:039:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:040:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:040:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:040:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:040:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:040:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:040:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:040:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:040:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:040:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:041:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:041:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:041:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:041:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:041:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:041:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:041:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:041:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:041:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:042:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:042:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:042:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:042:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:042:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:042:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:042:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:042:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:042:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:043:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:043:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:043:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:043:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:043:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:043:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:043:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:043:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:043:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:044:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:044:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:044:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:044:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:044:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:044:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:044:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:044:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:044:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:045:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:045:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:045:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:045:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:045:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:045:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:045:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:045:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:045:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:046:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:046:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:046:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:046:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:046:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:046:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:046:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:046:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:046:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:047:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:047:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:047:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:047:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:047:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:047:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:047:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:047:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:047:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:048:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:048:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:048:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:048:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:048:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:048:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:048:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:048:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:048:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:049:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:049:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:049:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:049:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:049:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:049:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:049:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:049:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:049:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:050:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:050:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:050:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:050:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:050:PhotonEnergyRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:050:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:050:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:050:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:AP:Entry:050:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:ArbiterID_RBV
      - longin
      - Arbiter ID for elev. req.
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:ArbitratedBP:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:ArbitratedBP:PhotonEnergyRanges_RBV
      - longin
      - Arbitrated BP
      - | field: EGU eV
        | io: input


    * - PLC:RIX:MOTION:ARB:02:ArbitratedBP:Rate_RBV
      - longin
      - Arbitrated BP
      - | field: EGU Hz
        | io: input


    * - PLC:RIX:MOTION:ARB:02:ArbitratedBP:Transmission_RBV
      - ai
      - Arbitrated BP
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:RIX:MOTION:ARB:02:ArbitratedBP:Valid_RBV
      - bi
      - Arbitrated BP
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:ArbitratedBP:Veto_RBV
      - waveform
      - Arbitrated BP
      - | io: input


    * - PLC:RIX:MOTION:ARB:02:CohortCounter_RBV
      - longin
      - Intrnl cohort counter
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:ClearFault
      - bo
      - Might be overidden by PLC writes
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:ClearFault_RBV
      - bi
      - Might be overidden by PLC writes
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:EnableVeto
      - bo
      - GVL.fbFastFaultOutput1.i_xVeto
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:EnableVeto_RBV
      - bi
      - GVL.fbFastFaultOutput1.i_xVeto
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FaultHWO_RBV
      - bi
      - Hardware Output Status
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0001:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[1].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0001:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[1].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0001:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[1].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0001:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[1].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0001:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[1].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0001:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[1].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0001:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[1].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0001:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[1].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0001:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[1].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0001:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[1].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0001:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[1].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0001:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[1].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0001:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[1].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0001:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[1].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0001:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[1].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0001:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[1].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0001:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[1].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0001:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[1].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0001:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[1].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0001:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[1].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0001:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[1].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0001:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[1].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0001:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[1].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0002:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[2].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0002:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[2].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0002:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[2].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0002:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[2].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0002:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[2].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0002:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[2].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0002:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[2].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0002:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[2].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0002:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[2].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0002:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[2].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0002:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[2].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0002:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[2].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0002:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[2].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0002:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[2].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0002:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[2].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0002:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[2].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0002:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[2].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0002:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[2].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0002:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[2].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0002:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[2].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0002:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[2].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0002:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[2].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0002:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[2].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0003:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[3].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0003:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[3].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0003:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[3].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0003:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[3].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0003:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[3].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0003:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[3].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0003:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[3].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0003:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[3].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0003:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[3].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0003:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[3].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0003:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[3].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0003:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[3].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0003:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[3].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0003:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[3].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0003:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[3].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0003:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[3].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0003:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[3].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0003:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[3].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0003:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[3].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0003:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[3].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0003:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[3].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0003:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[3].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0003:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[3].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0004:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[4].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0004:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[4].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0004:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[4].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0004:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[4].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0004:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[4].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0004:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[4].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0004:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[4].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0004:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[4].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0004:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[4].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0004:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[4].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0004:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[4].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0004:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[4].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0004:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[4].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0004:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[4].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0004:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[4].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0004:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[4].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0004:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[4].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0004:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[4].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0004:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[4].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0004:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[4].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0004:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[4].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0004:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[4].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0004:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[4].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0005:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[5].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0005:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[5].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0005:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[5].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0005:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[5].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0005:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[5].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0005:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[5].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0005:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[5].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0005:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[5].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0005:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[5].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0005:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[5].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0005:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[5].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0005:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[5].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0005:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[5].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0005:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[5].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0005:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[5].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0005:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[5].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0005:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[5].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0005:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[5].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0005:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[5].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0005:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[5].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0005:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[5].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0005:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[5].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0005:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[5].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0006:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[6].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0006:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[6].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0006:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[6].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0006:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[6].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0006:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[6].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0006:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[6].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0006:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[6].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0006:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[6].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0006:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[6].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0006:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[6].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0006:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[6].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0006:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[6].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0006:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[6].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0006:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[6].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0006:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[6].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0006:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[6].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0006:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[6].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0006:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[6].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0006:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[6].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0006:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[6].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0006:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[6].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0006:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[6].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0006:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[6].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0007:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[7].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0007:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[7].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0007:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[7].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0007:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[7].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0007:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[7].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0007:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[7].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0007:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[7].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0007:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[7].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0007:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[7].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0007:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[7].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0007:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[7].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0007:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[7].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0007:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[7].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0007:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[7].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0007:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[7].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0007:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[7].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0007:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[7].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0007:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[7].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0007:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[7].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0007:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[7].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0007:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[7].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0007:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[7].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0007:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[7].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0008:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[8].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0008:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[8].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0008:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[8].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0008:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[8].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0008:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[8].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0008:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[8].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0008:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[8].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0008:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[8].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0008:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[8].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0008:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[8].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0008:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[8].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0008:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[8].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0008:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[8].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0008:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[8].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0008:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[8].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0008:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[8].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0008:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[8].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0008:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[8].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0008:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[8].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0008:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[8].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0008:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[8].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0008:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[8].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0008:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[8].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0009:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[9].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0009:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[9].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0009:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[9].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0009:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[9].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0009:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[9].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0009:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[9].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0009:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[9].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0009:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[9].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0009:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[9].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0009:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[9].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0009:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[9].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0009:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[9].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0009:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[9].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0009:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[9].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0009:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[9].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0009:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[9].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0009:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[9].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0009:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[9].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0009:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[9].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0009:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[9].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0009:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[9].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0009:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[9].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0009:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[9].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0010:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[10].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0010:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[10].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0010:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[10].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0010:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[10].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0010:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[10].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0010:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[10].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0010:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[10].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0010:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[10].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0010:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[10].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0010:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[10].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0010:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[10].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0010:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[10].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0010:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[10].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0010:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[10].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0010:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[10].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0010:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[10].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0010:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[10].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0010:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[10].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0010:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[10].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0010:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[10].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0010:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[10].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0010:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[10].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0010:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[10].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0011:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[11].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0011:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[11].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0011:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[11].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0011:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[11].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0011:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[11].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0011:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[11].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0011:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[11].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0011:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[11].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0011:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[11].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0011:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[11].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0011:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[11].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0011:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[11].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0011:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[11].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0011:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[11].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0011:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[11].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0011:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[11].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0011:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[11].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0011:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[11].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0011:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[11].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0011:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[11].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0011:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[11].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0011:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[11].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0011:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[11].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0012:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[12].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0012:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[12].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0012:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[12].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0012:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[12].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0012:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[12].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0012:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[12].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0012:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[12].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0012:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[12].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0012:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[12].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0012:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[12].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0012:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[12].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0012:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[12].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0012:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[12].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0012:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[12].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0012:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[12].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0012:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[12].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0012:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[12].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0012:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[12].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0012:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[12].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0012:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[12].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0012:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[12].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0012:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[12].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0012:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[12].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0013:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[13].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0013:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[13].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0013:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[13].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0013:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[13].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0013:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[13].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0013:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[13].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0013:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[13].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0013:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[13].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0013:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[13].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0013:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[13].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0013:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[13].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0013:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[13].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0013:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[13].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0013:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[13].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0013:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[13].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0013:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[13].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0013:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[13].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0013:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[13].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0013:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[13].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0013:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[13].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0013:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[13].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0013:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[13].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0013:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[13].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0014:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[14].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0014:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[14].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0014:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[14].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0014:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[14].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0014:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[14].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0014:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[14].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0014:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[14].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0014:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[14].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0014:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[14].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0014:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[14].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0014:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[14].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0014:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[14].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0014:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[14].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0014:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[14].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0014:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[14].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0014:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[14].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0014:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[14].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0014:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[14].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0014:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[14].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0014:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[14].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0014:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[14].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0014:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[14].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0014:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[14].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0015:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[15].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0015:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[15].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0015:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[15].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0015:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[15].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0015:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[15].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0015:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[15].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0015:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[15].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0015:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[15].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0015:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[15].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0015:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[15].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0015:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[15].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0015:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[15].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0015:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[15].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0015:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[15].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0015:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[15].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0015:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[15].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0015:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[15].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0015:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[15].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0015:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[15].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0015:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[15].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0015:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[15].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0015:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[15].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0015:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[15].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0016:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[16].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0016:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[16].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0016:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[16].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0016:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[16].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0016:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[16].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0016:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[16].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0016:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[16].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0016:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[16].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0016:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[16].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0016:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[16].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0016:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[16].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0016:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[16].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0016:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[16].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0016:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[16].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0016:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[16].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0016:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[16].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0016:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[16].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0016:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[16].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0016:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[16].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0016:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[16].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0016:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[16].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0016:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[16].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0016:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[16].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0017:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[17].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0017:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[17].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0017:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[17].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0017:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[17].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0017:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[17].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0017:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[17].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0017:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[17].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0017:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[17].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0017:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[17].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0017:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[17].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0017:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[17].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0017:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[17].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0017:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[17].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0017:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[17].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0017:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[17].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0017:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[17].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0017:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[17].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0017:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[17].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0017:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[17].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0017:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[17].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0017:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[17].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0017:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[17].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0017:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[17].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0018:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[18].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0018:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[18].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0018:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[18].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0018:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[18].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0018:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[18].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0018:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[18].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0018:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[18].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0018:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[18].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0018:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[18].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0018:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[18].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0018:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[18].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0018:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[18].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0018:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[18].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0018:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[18].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0018:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[18].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0018:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[18].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0018:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[18].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0018:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[18].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0018:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[18].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0018:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[18].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0018:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[18].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0018:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[18].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0018:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[18].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0019:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[19].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0019:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[19].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0019:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[19].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0019:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[19].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0019:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[19].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0019:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[19].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0019:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[19].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0019:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[19].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0019:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[19].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0019:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[19].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0019:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[19].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0019:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[19].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0019:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[19].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0019:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[19].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0019:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[19].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0019:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[19].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0019:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[19].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0019:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[19].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0019:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[19].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0019:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[19].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0019:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[19].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0019:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[19].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0019:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[19].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0020:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[20].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0020:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[20].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0020:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[20].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0020:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[20].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0020:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[20].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0020:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[20].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0020:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[20].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0020:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[20].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0020:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[20].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0020:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[20].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0020:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[20].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0020:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[20].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0020:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[20].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0020:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[20].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0020:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[20].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0020:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[20].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0020:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[20].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0020:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[20].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0020:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[20].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0020:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[20].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0020:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[20].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0020:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[20].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0020:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[20].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0021:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[21].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0021:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[21].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0021:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[21].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0021:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[21].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0021:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[21].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0021:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[21].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0021:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[21].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0021:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[21].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0021:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[21].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0021:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[21].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0021:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[21].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0021:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[21].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0021:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[21].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0021:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[21].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0021:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[21].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0021:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[21].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0021:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[21].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0021:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[21].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0021:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[21].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0021:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[21].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0021:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[21].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0021:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[21].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0021:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[21].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0022:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[22].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0022:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[22].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0022:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[22].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0022:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[22].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0022:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[22].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0022:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[22].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0022:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[22].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0022:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[22].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0022:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[22].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0022:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[22].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0022:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[22].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0022:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[22].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0022:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[22].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0022:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[22].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0022:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[22].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0022:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[22].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0022:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[22].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0022:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[22].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0022:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[22].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0022:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[22].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0022:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[22].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0022:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[22].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0022:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[22].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0023:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[23].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0023:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[23].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0023:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[23].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0023:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[23].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0023:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[23].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0023:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[23].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0023:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[23].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0023:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[23].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0023:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[23].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0023:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[23].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0023:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[23].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0023:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[23].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0023:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[23].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0023:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[23].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0023:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[23].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0023:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[23].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0023:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[23].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0023:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[23].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0023:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[23].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0023:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[23].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0023:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[23].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0023:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[23].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0023:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[23].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0024:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[24].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0024:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[24].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0024:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[24].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0024:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[24].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0024:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[24].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0024:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[24].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0024:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[24].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0024:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[24].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0024:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[24].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0024:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[24].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0024:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[24].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0024:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[24].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0024:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[24].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0024:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[24].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0024:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[24].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0024:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[24].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0024:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[24].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0024:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[24].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0024:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[24].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0024:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[24].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0024:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[24].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0024:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[24].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0024:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[24].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0025:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[25].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0025:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[25].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0025:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[25].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0025:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[25].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0025:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[25].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0025:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[25].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0025:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[25].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0025:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[25].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0025:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[25].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0025:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[25].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0025:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[25].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0025:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[25].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0025:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[25].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0025:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[25].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0025:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[25].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0025:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[25].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0025:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[25].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0025:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[25].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0025:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[25].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0025:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[25].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0025:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[25].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0025:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[25].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0025:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[25].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0026:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[26].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0026:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[26].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0026:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[26].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0026:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[26].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0026:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[26].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0026:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[26].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0026:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[26].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0026:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[26].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0026:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[26].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0026:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[26].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0026:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[26].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0026:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[26].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0026:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[26].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0026:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[26].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0026:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[26].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0026:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[26].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0026:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[26].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0026:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[26].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0026:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[26].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0026:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[26].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0026:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[26].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0026:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[26].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0026:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[26].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0027:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[27].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0027:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[27].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0027:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[27].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0027:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[27].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0027:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[27].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0027:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[27].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0027:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[27].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0027:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[27].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0027:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[27].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0027:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[27].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0027:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[27].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0027:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[27].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0027:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[27].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0027:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[27].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0027:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[27].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0027:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[27].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0027:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[27].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0027:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[27].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0027:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[27].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0027:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[27].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0027:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[27].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0027:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[27].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0027:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[27].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0028:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[28].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0028:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[28].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0028:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[28].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0028:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[28].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0028:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[28].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0028:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[28].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0028:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[28].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0028:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[28].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0028:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[28].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0028:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[28].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0028:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[28].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0028:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[28].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0028:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[28].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0028:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[28].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0028:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[28].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0028:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[28].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0028:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[28].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0028:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[28].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0028:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[28].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0028:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[28].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0028:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[28].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0028:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[28].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0028:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[28].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0029:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[29].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0029:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[29].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0029:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[29].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0029:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[29].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0029:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[29].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0029:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[29].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0029:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[29].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0029:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[29].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0029:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[29].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0029:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[29].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0029:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[29].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0029:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[29].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0029:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[29].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0029:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[29].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0029:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[29].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0029:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[29].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0029:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[29].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0029:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[29].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0029:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[29].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0029:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[29].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0029:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[29].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0029:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[29].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0029:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[29].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0030:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[30].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0030:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[30].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0030:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[30].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0030:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[30].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0030:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[30].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0030:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[30].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0030:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[30].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0030:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[30].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0030:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[30].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0030:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[30].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0030:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[30].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0030:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[30].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0030:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[30].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0030:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[30].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0030:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[30].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0030:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[30].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0030:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[30].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0030:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[30].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0030:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[30].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0030:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[30].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0030:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[30].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0030:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[30].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0030:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[30].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0031:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[31].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0031:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[31].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0031:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[31].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0031:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[31].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0031:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[31].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0031:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[31].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0031:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[31].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0031:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[31].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0031:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[31].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0031:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[31].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0031:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[31].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0031:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[31].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0031:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[31].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0031:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[31].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0031:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[31].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0031:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[31].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0031:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[31].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0031:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[31].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0031:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[31].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0031:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[31].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0031:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[31].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0031:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[31].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0031:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[31].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0032:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[32].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0032:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[32].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0032:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[32].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0032:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[32].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0032:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[32].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0032:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[32].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0032:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[32].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0032:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[32].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0032:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[32].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0032:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[32].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0032:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[32].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0032:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[32].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0032:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[32].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0032:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[32].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0032:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[32].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0032:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[32].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0032:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[32].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0032:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[32].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0032:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[32].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0032:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[32].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0032:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[32].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0032:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[32].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0032:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[32].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0033:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[33].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0033:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[33].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0033:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[33].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0033:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[33].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0033:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[33].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0033:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[33].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0033:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[33].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0033:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[33].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0033:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[33].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0033:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[33].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0033:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[33].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0033:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[33].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0033:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[33].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0033:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[33].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0033:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[33].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0033:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[33].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0033:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[33].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0033:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[33].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0033:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[33].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0033:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[33].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0033:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[33].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0033:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[33].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0033:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[33].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0034:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[34].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0034:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[34].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0034:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[34].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0034:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[34].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0034:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[34].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0034:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[34].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0034:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[34].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0034:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[34].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0034:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[34].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0034:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[34].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0034:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[34].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0034:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[34].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0034:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[34].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0034:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[34].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0034:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[34].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0034:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[34].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0034:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[34].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0034:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[34].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0034:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[34].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0034:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[34].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0034:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[34].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0034:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[34].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0034:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[34].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0035:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[35].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0035:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[35].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0035:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[35].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0035:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[35].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0035:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[35].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0035:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[35].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0035:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[35].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0035:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[35].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0035:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[35].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0035:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[35].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0035:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[35].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0035:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[35].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0035:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[35].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0035:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[35].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0035:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[35].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0035:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[35].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0035:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[35].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0035:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[35].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0035:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[35].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0035:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[35].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0035:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[35].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0035:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[35].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0035:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[35].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0036:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[36].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0036:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[36].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0036:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[36].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0036:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[36].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0036:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[36].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0036:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[36].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0036:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[36].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0036:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[36].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0036:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[36].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0036:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[36].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0036:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[36].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0036:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[36].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0036:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[36].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0036:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[36].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0036:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[36].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0036:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[36].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0036:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[36].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0036:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[36].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0036:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[36].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0036:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[36].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0036:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[36].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0036:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[36].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0036:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[36].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0037:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[37].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0037:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[37].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0037:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[37].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0037:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[37].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0037:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[37].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0037:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[37].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0037:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[37].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0037:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[37].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0037:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[37].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0037:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[37].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0037:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[37].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0037:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[37].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0037:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[37].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0037:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[37].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0037:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[37].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0037:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[37].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0037:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[37].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0037:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[37].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0037:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[37].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0037:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[37].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0037:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[37].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0037:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[37].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0037:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[37].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0038:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[38].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0038:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[38].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0038:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[38].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0038:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[38].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0038:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[38].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0038:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[38].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0038:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[38].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0038:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[38].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0038:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[38].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0038:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[38].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0038:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[38].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0038:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[38].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0038:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[38].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0038:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[38].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0038:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[38].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0038:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[38].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0038:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[38].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0038:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[38].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0038:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[38].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0038:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[38].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0038:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[38].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0038:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[38].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0038:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[38].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0039:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[39].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0039:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[39].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0039:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[39].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0039:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[39].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0039:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[39].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0039:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[39].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0039:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[39].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0039:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[39].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0039:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[39].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0039:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[39].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0039:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[39].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0039:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[39].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0039:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[39].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0039:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[39].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0039:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[39].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0039:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[39].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0039:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[39].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0039:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[39].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0039:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[39].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0039:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[39].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0039:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[39].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0039:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[39].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0039:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[39].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0040:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[40].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0040:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[40].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0040:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[40].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0040:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[40].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0040:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[40].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0040:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[40].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0040:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[40].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0040:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[40].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0040:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[40].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0040:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[40].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0040:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[40].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0040:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[40].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0040:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[40].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0040:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[40].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0040:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[40].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0040:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[40].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0040:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[40].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0040:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[40].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0040:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[40].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0040:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[40].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0040:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[40].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0040:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[40].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0040:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[40].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0041:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[41].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0041:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[41].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0041:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[41].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0041:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[41].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0041:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[41].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0041:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[41].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0041:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[41].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0041:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[41].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0041:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[41].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0041:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[41].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0041:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[41].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0041:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[41].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0041:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[41].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0041:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[41].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0041:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[41].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0041:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[41].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0041:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[41].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0041:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[41].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0041:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[41].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0041:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[41].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0041:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[41].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0041:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[41].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0041:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[41].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0042:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[42].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0042:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[42].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0042:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[42].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0042:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[42].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0042:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[42].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0042:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[42].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0042:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[42].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0042:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[42].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0042:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[42].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0042:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[42].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0042:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[42].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0042:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[42].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0042:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[42].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0042:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[42].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0042:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[42].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0042:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[42].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0042:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[42].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0042:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[42].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0042:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[42].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0042:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[42].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0042:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[42].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0042:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[42].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0042:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[42].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0043:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[43].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0043:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[43].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0043:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[43].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0043:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[43].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0043:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[43].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0043:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[43].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0043:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[43].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0043:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[43].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0043:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[43].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0043:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[43].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0043:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[43].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0043:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[43].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0043:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[43].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0043:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[43].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0043:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[43].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0043:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[43].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0043:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[43].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0043:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[43].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0043:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[43].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0043:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[43].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0043:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[43].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0043:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[43].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0043:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[43].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0044:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[44].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0044:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[44].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0044:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[44].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0044:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[44].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0044:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[44].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0044:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[44].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0044:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[44].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0044:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[44].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0044:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[44].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0044:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[44].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0044:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[44].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0044:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[44].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0044:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[44].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0044:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[44].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0044:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[44].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0044:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[44].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0044:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[44].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0044:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[44].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0044:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[44].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0044:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[44].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0044:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[44].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0044:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[44].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0044:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[44].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0045:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[45].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0045:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[45].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0045:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[45].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0045:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[45].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0045:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[45].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0045:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[45].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0045:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[45].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0045:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[45].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0045:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[45].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0045:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[45].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0045:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[45].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0045:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[45].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0045:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[45].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0045:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[45].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0045:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[45].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0045:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[45].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0045:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[45].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0045:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[45].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0045:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[45].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0045:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[45].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0045:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[45].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0045:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[45].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0045:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[45].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0046:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[46].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0046:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[46].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0046:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[46].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0046:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[46].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0046:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[46].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0046:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[46].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0046:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[46].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0046:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[46].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0046:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[46].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0046:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[46].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0046:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[46].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0046:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[46].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0046:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[46].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0046:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[46].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0046:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[46].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0046:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[46].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0046:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[46].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0046:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[46].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0046:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[46].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0046:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[46].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0046:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[46].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0046:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[46].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0046:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[46].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0047:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[47].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0047:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[47].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0047:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[47].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0047:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[47].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0047:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[47].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0047:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[47].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0047:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[47].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0047:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[47].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0047:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[47].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0047:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[47].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0047:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[47].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0047:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[47].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0047:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[47].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0047:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[47].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0047:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[47].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0047:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[47].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0047:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[47].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0047:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[47].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0047:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[47].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0047:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[47].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0047:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[47].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0047:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[47].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0047:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[47].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0048:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[48].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0048:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[48].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0048:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[48].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0048:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[48].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0048:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[48].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0048:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[48].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0048:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[48].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0048:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[48].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0048:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[48].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0048:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[48].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0048:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[48].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0048:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[48].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0048:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[48].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0048:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[48].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0048:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[48].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0048:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[48].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0048:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[48].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0048:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[48].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0048:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[48].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0048:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[48].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0048:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[48].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0048:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[48].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0048:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[48].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0049:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[49].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0049:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[49].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0049:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[49].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0049:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[49].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0049:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[49].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0049:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[49].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0049:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[49].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0049:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[49].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0049:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[49].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0049:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[49].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0049:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[49].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0049:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[49].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0049:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[49].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0049:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[49].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0049:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[49].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0049:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[49].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0049:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[49].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0049:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[49].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0049:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[49].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0049:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[49].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0049:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[49].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0049:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[49].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0049:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[49].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0050:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[50].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0050:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[50].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0050:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[50].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0050:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[50].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0050:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[50].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0050:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[50].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0050:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[50].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0050:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[50].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0050:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[50].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0050:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[50].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0050:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[50].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0050:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[50].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0050:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[50].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0050:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[50].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0050:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[50].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0050:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[50].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0050:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[50].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0050:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[50].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0050:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[50].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0050:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[50].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0050:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[50].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0050:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[50].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0050:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[50].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0051:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[51].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0051:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[51].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0051:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[51].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0051:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[51].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0051:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[51].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0051:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[51].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0051:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[51].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0051:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[51].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0051:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[51].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0051:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[51].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0051:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[51].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0051:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[51].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0051:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[51].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0051:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[51].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0051:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[51].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0051:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[51].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0051:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[51].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0051:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[51].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0051:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[51].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0051:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[51].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0051:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[51].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0051:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[51].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0051:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[51].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0052:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[52].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0052:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[52].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0052:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[52].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0052:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[52].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0052:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[52].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0052:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[52].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0052:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[52].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0052:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[52].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0052:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[52].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0052:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[52].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0052:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[52].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0052:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[52].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0052:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[52].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0052:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[52].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0052:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[52].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0052:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[52].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0052:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[52].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0052:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[52].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0052:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[52].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0052:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[52].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0052:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[52].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0052:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[52].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0052:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[52].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0053:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[53].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0053:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[53].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0053:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[53].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0053:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[53].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0053:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[53].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0053:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[53].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0053:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[53].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0053:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[53].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0053:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[53].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0053:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[53].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0053:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[53].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0053:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[53].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0053:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[53].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0053:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[53].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0053:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[53].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0053:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[53].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0053:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[53].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0053:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[53].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0053:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[53].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0053:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[53].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0053:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[53].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0053:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[53].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0053:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[53].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0054:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[54].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0054:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[54].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0054:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[54].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0054:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[54].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0054:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[54].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0054:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[54].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0054:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[54].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0054:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[54].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0054:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[54].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0054:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[54].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0054:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[54].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0054:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[54].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0054:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[54].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0054:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[54].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0054:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[54].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0054:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[54].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0054:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[54].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0054:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[54].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0054:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[54].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0054:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[54].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0054:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[54].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0054:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[54].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0054:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[54].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0055:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[55].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0055:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[55].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0055:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[55].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0055:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[55].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0055:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[55].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0055:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[55].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0055:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[55].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0055:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[55].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0055:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[55].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0055:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[55].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0055:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[55].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0055:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[55].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0055:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[55].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0055:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[55].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0055:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[55].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0055:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[55].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0055:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[55].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0055:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[55].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0055:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[55].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0055:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[55].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0055:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[55].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0055:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[55].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0055:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[55].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0056:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[56].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0056:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[56].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0056:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[56].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0056:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[56].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0056:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[56].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0056:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[56].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0056:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[56].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0056:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[56].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0056:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[56].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0056:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[56].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0056:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[56].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0056:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[56].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0056:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[56].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0056:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[56].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0056:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[56].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0056:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[56].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0056:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[56].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0056:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[56].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0056:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[56].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0056:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[56].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0056:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[56].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0056:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[56].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0056:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[56].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0057:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[57].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0057:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[57].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0057:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[57].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0057:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[57].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0057:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[57].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0057:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[57].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0057:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[57].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0057:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[57].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0057:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[57].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0057:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[57].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0057:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[57].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0057:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[57].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0057:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[57].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0057:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[57].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0057:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[57].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0057:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[57].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0057:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[57].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0057:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[57].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0057:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[57].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0057:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[57].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0057:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[57].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0057:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[57].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0057:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[57].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0058:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[58].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0058:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[58].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0058:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[58].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0058:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[58].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0058:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[58].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0058:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[58].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0058:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[58].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0058:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[58].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0058:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[58].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0058:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[58].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0058:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[58].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0058:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[58].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0058:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[58].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0058:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[58].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0058:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[58].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0058:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[58].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0058:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[58].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0058:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[58].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0058:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[58].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0058:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[58].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0058:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[58].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0058:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[58].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0058:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[58].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0059:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[59].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0059:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[59].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0059:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[59].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0059:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[59].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0059:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[59].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0059:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[59].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0059:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[59].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0059:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[59].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0059:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[59].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0059:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[59].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0059:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[59].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0059:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[59].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0059:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[59].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0059:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[59].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0059:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[59].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0059:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[59].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0059:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[59].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0059:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[59].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0059:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[59].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0059:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[59].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0059:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[59].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0059:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[59].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0059:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[59].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0060:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[60].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0060:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[60].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0060:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[60].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0060:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[60].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0060:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[60].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0060:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[60].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0060:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[60].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0060:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[60].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0060:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[60].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0060:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[60].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0060:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[60].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0060:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[60].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0060:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[60].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0060:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[60].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0060:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[60].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0060:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[60].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0060:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[60].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0060:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[60].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0060:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[60].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0060:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[60].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0060:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[60].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0060:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[60].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0060:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[60].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0061:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[61].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0061:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[61].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0061:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[61].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0061:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[61].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0061:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[61].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0061:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[61].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0061:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[61].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0061:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[61].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0061:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[61].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0061:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[61].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0061:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[61].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0061:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[61].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0061:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[61].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0061:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[61].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0061:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[61].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0061:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[61].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0061:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[61].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0061:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[61].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0061:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[61].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0061:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[61].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0061:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[61].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0061:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[61].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0061:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[61].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0062:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[62].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0062:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[62].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0062:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[62].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0062:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[62].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0062:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[62].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0062:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[62].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0062:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[62].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0062:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[62].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0062:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[62].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0062:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[62].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0062:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[62].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0062:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[62].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0062:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[62].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0062:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[62].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0062:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[62].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0062:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[62].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0062:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[62].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0062:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[62].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0062:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[62].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0062:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[62].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0062:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[62].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0062:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[62].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0062:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[62].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0063:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[63].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0063:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[63].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0063:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[63].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0063:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[63].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0063:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[63].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0063:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[63].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0063:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[63].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0063:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[63].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0063:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[63].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0063:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[63].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0063:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[63].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0063:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[63].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0063:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[63].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0063:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[63].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0063:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[63].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0063:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[63].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0063:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[63].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0063:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[63].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0063:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[63].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0063:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[63].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0063:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[63].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0063:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[63].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0063:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[63].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0064:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[64].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0064:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[64].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0064:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[64].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0064:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[64].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0064:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[64].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0064:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[64].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0064:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[64].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0064:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[64].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0064:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[64].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0064:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[64].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0064:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[64].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0064:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[64].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0064:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[64].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0064:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[64].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0064:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[64].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0064:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[64].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0064:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[64].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0064:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[64].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0064:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[64].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0064:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[64].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0064:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[64].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0064:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[64].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0064:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[64].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0065:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[65].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0065:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[65].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0065:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[65].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0065:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[65].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0065:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[65].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0065:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[65].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0065:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[65].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0065:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[65].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0065:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[65].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0065:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[65].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0065:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[65].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0065:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[65].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0065:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[65].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0065:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[65].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0065:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[65].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0065:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[65].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0065:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[65].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0065:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[65].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0065:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[65].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0065:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[65].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0065:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[65].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0065:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[65].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0065:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[65].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0066:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[66].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0066:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[66].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0066:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[66].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0066:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[66].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0066:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[66].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0066:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[66].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0066:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[66].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0066:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[66].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0066:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[66].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0066:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[66].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0066:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[66].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0066:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[66].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0066:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[66].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0066:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[66].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0066:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[66].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0066:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[66].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0066:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[66].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0066:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[66].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0066:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[66].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0066:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[66].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0066:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[66].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0066:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[66].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0066:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[66].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0067:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[67].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0067:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[67].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0067:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[67].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0067:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[67].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0067:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[67].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0067:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[67].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0067:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[67].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0067:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[67].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0067:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[67].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0067:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[67].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0067:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[67].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0067:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[67].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0067:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[67].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0067:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[67].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0067:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[67].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0067:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[67].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0067:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[67].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0067:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[67].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0067:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[67].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0067:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[67].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0067:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[67].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0067:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[67].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0067:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[67].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0068:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[68].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0068:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[68].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0068:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[68].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0068:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[68].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0068:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[68].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0068:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[68].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0068:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[68].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0068:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[68].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0068:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[68].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0068:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[68].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0068:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[68].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0068:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[68].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0068:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[68].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0068:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[68].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0068:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[68].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0068:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[68].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0068:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[68].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0068:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[68].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0068:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[68].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0068:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[68].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0068:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[68].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0068:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[68].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0068:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[68].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0069:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[69].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0069:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[69].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0069:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[69].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0069:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[69].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0069:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[69].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0069:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[69].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0069:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[69].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0069:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[69].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0069:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[69].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0069:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[69].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0069:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[69].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0069:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[69].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0069:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[69].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0069:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[69].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0069:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[69].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0069:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[69].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0069:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[69].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0069:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[69].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0069:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[69].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0069:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[69].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0069:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[69].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0069:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[69].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0069:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[69].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0070:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[70].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0070:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[70].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0070:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[70].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0070:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[70].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0070:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[70].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0070:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[70].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0070:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[70].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0070:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[70].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0070:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[70].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0070:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[70].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0070:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[70].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0070:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[70].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0070:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[70].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0070:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[70].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0070:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[70].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0070:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[70].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0070:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[70].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0070:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[70].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0070:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[70].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0070:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[70].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0070:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[70].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0070:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[70].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0070:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[70].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0071:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[71].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0071:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[71].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0071:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[71].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0071:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[71].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0071:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[71].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0071:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[71].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0071:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[71].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0071:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[71].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0071:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[71].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0071:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[71].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0071:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[71].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0071:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[71].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0071:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[71].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0071:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[71].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0071:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[71].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0071:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[71].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0071:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[71].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0071:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[71].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0071:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[71].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0071:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[71].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0071:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[71].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0071:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[71].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0071:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[71].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0072:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[72].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0072:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[72].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0072:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[72].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0072:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[72].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0072:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[72].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0072:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[72].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0072:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[72].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0072:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[72].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0072:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[72].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0072:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[72].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0072:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[72].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0072:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[72].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0072:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[72].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0072:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[72].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0072:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[72].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0072:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[72].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0072:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[72].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0072:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[72].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0072:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[72].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0072:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[72].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0072:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[72].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0072:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[72].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0072:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[72].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0073:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[73].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0073:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[73].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0073:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[73].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0073:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[73].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0073:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[73].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0073:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[73].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0073:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[73].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0073:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[73].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0073:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[73].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0073:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[73].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0073:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[73].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0073:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[73].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0073:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[73].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0073:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[73].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0073:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[73].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0073:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[73].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0073:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[73].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0073:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[73].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0073:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[73].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0073:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[73].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0073:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[73].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0073:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[73].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0073:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[73].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0074:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[74].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0074:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[74].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0074:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[74].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0074:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[74].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0074:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[74].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0074:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[74].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0074:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[74].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0074:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[74].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0074:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[74].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0074:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[74].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0074:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[74].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0074:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[74].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0074:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[74].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0074:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[74].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0074:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[74].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0074:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[74].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0074:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[74].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0074:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[74].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0074:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[74].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0074:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[74].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0074:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[74].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0074:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[74].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0074:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[74].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0075:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[75].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0075:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[75].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0075:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[75].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0075:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[75].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0075:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[75].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0075:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[75].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0075:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[75].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0075:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[75].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0075:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[75].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0075:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[75].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0075:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[75].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0075:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[75].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0075:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[75].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0075:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[75].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0075:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[75].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0075:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[75].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0075:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[75].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0075:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[75].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0075:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[75].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0075:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[75].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0075:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[75].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0075:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[75].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0075:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[75].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0076:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[76].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0076:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[76].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0076:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[76].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0076:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[76].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0076:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[76].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0076:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[76].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0076:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[76].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0076:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[76].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0076:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[76].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0076:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[76].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0076:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[76].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0076:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[76].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0076:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[76].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0076:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[76].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0076:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[76].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0076:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[76].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0076:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[76].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0076:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[76].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0076:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[76].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0076:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[76].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0076:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[76].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0076:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[76].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0076:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[76].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0077:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[77].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0077:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[77].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0077:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[77].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0077:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[77].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0077:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[77].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0077:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[77].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0077:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[77].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0077:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[77].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0077:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[77].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0077:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[77].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0077:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[77].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0077:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[77].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0077:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[77].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0077:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[77].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0077:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[77].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0077:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[77].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0077:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[77].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0077:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[77].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0077:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[77].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0077:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[77].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0077:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[77].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0077:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[77].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0077:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[77].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0078:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[78].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0078:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[78].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0078:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[78].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0078:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[78].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0078:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[78].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0078:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[78].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0078:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[78].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0078:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[78].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0078:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[78].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0078:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[78].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0078:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[78].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0078:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[78].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0078:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[78].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0078:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[78].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0078:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[78].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0078:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[78].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0078:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[78].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0078:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[78].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0078:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[78].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0078:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[78].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0078:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[78].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0078:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[78].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0078:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[78].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0079:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[79].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0079:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[79].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0079:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[79].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0079:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[79].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0079:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[79].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0079:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[79].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0079:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[79].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0079:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[79].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0079:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[79].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0079:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[79].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0079:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[79].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0079:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[79].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0079:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[79].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0079:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[79].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0079:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[79].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0079:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[79].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0079:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[79].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0079:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[79].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0079:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[79].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0079:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[79].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0079:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[79].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0079:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[79].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0079:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[79].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0080:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[80].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0080:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[80].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0080:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[80].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0080:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[80].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0080:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[80].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0080:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[80].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0080:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[80].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0080:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[80].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0080:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[80].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0080:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[80].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0080:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[80].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0080:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[80].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0080:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[80].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0080:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[80].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0080:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[80].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0080:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[80].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0080:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[80].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0080:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[80].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0080:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[80].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0080:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[80].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0080:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[80].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0080:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[80].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0080:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[80].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0081:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[81].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0081:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[81].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0081:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[81].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0081:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[81].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0081:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[81].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0081:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[81].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0081:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[81].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0081:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[81].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0081:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[81].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0081:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[81].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0081:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[81].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0081:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[81].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0081:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[81].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0081:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[81].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0081:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[81].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0081:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[81].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0081:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[81].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0081:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[81].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0081:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[81].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0081:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[81].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0081:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[81].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0081:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[81].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0081:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[81].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0082:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[82].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0082:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[82].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0082:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[82].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0082:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[82].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0082:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[82].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0082:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[82].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0082:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[82].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0082:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[82].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0082:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[82].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0082:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[82].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0082:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[82].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0082:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[82].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0082:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[82].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0082:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[82].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0082:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[82].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0082:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[82].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0082:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[82].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0082:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[82].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0082:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[82].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0082:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[82].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0082:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[82].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0082:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[82].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0082:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[82].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0083:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[83].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0083:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[83].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0083:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[83].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0083:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[83].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0083:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[83].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0083:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[83].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0083:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[83].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0083:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[83].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0083:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[83].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0083:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[83].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0083:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[83].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0083:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[83].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0083:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[83].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0083:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[83].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0083:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[83].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0083:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[83].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0083:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[83].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0083:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[83].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0083:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[83].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0083:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[83].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0083:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[83].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0083:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[83].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0083:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[83].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0084:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[84].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0084:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[84].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0084:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[84].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0084:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[84].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0084:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[84].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0084:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[84].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0084:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[84].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0084:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[84].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0084:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[84].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0084:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[84].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0084:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[84].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0084:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[84].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0084:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[84].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0084:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[84].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0084:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[84].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0084:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[84].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0084:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[84].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0084:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[84].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0084:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[84].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0084:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[84].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0084:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[84].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0084:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[84].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0084:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[84].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0085:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[85].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0085:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[85].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0085:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[85].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0085:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[85].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0085:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[85].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0085:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[85].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0085:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[85].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0085:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[85].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0085:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[85].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0085:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[85].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0085:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[85].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0085:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[85].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0085:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[85].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0085:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[85].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0085:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[85].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0085:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[85].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0085:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[85].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0085:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[85].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0085:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[85].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0085:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[85].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0085:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[85].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0085:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[85].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0085:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[85].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0086:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[86].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0086:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[86].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0086:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[86].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0086:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[86].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0086:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[86].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0086:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[86].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0086:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[86].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0086:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[86].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0086:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[86].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0086:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[86].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0086:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[86].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0086:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[86].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0086:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[86].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0086:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[86].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0086:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[86].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0086:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[86].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0086:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[86].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0086:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[86].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0086:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[86].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0086:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[86].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0086:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[86].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0086:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[86].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0086:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[86].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0087:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[87].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0087:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[87].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0087:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[87].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0087:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[87].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0087:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[87].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0087:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[87].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0087:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[87].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0087:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[87].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0087:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[87].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0087:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[87].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0087:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[87].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0087:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[87].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0087:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[87].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0087:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[87].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0087:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[87].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0087:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[87].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0087:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[87].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0087:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[87].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0087:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[87].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0087:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[87].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0087:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[87].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0087:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[87].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0087:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[87].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0088:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[88].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0088:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[88].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0088:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[88].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0088:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[88].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0088:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[88].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0088:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[88].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0088:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[88].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0088:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[88].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0088:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[88].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0088:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[88].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0088:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[88].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0088:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[88].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0088:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[88].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0088:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[88].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0088:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[88].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0088:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[88].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0088:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[88].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0088:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[88].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0088:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[88].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0088:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[88].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0088:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[88].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0088:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[88].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0088:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[88].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0089:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[89].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0089:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[89].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0089:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[89].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0089:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[89].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0089:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[89].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0089:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[89].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0089:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[89].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0089:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[89].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0089:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[89].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0089:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[89].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0089:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[89].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0089:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[89].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0089:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[89].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0089:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[89].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0089:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[89].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0089:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[89].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0089:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[89].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0089:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[89].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0089:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[89].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0089:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[89].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0089:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[89].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0089:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[89].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0089:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[89].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0090:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[90].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0090:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[90].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0090:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[90].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0090:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[90].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0090:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[90].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0090:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[90].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0090:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[90].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0090:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[90].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0090:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[90].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0090:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[90].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0090:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[90].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0090:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[90].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0090:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[90].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0090:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[90].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0090:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[90].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0090:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[90].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0090:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[90].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0090:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[90].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0090:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[90].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0090:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[90].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0090:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[90].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0090:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[90].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0090:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[90].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0091:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[91].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0091:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[91].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0091:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[91].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0091:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[91].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0091:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[91].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0091:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[91].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0091:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[91].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0091:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[91].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0091:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[91].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0091:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[91].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0091:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[91].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0091:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[91].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0091:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[91].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0091:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[91].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0091:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[91].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0091:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[91].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0091:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[91].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0091:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[91].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0091:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[91].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0091:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[91].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0091:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[91].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0091:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[91].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0091:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[91].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0092:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[92].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0092:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[92].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0092:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[92].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0092:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[92].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0092:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[92].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0092:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[92].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0092:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[92].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0092:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[92].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0092:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[92].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0092:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[92].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0092:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[92].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0092:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[92].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0092:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[92].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0092:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[92].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0092:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[92].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0092:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[92].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0092:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[92].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0092:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[92].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0092:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[92].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0092:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[92].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0092:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[92].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0092:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[92].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0092:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[92].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0093:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[93].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0093:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[93].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0093:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[93].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0093:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[93].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0093:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[93].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0093:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[93].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0093:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[93].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0093:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[93].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0093:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[93].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0093:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[93].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0093:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[93].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0093:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[93].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0093:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[93].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0093:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[93].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0093:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[93].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0093:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[93].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0093:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[93].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0093:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[93].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0093:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[93].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0093:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[93].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0093:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[93].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0093:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[93].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0093:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[93].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0094:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[94].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0094:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[94].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0094:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[94].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0094:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[94].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0094:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[94].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0094:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[94].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0094:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[94].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0094:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[94].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0094:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[94].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0094:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[94].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0094:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[94].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0094:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[94].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0094:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[94].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0094:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[94].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0094:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[94].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0094:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[94].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0094:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[94].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0094:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[94].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0094:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[94].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0094:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[94].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0094:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[94].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0094:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[94].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0094:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[94].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0095:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[95].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0095:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[95].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0095:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[95].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0095:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[95].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0095:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[95].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0095:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[95].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0095:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[95].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0095:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[95].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0095:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[95].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0095:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[95].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0095:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[95].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0095:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[95].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0095:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[95].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0095:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[95].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0095:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[95].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0095:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[95].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0095:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[95].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0095:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[95].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0095:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[95].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0095:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[95].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0095:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[95].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0095:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[95].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0095:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[95].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0096:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[96].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0096:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[96].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0096:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[96].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0096:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[96].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0096:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[96].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0096:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[96].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0096:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[96].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0096:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[96].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0096:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[96].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0096:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[96].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0096:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[96].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0096:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[96].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0096:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[96].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0096:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[96].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0096:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[96].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0096:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[96].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0096:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[96].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0096:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[96].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0096:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[96].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0096:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[96].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0096:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[96].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0096:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[96].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0096:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[96].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0097:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[97].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0097:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[97].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0097:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[97].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0097:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[97].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0097:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[97].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0097:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[97].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0097:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[97].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0097:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[97].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0097:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[97].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0097:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[97].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0097:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[97].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0097:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[97].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0097:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[97].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0097:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[97].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0097:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[97].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0097:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[97].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0097:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[97].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0097:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[97].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0097:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[97].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0097:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[97].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0097:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[97].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0097:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[97].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0097:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[97].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0098:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[98].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0098:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[98].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0098:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[98].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0098:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[98].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0098:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[98].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0098:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[98].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0098:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[98].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0098:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[98].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0098:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[98].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0098:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[98].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0098:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[98].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0098:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[98].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0098:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[98].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0098:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[98].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0098:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[98].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0098:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[98].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0098:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[98].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0098:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[98].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0098:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[98].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0098:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[98].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0098:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[98].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0098:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[98].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0098:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[98].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0099:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[99].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0099:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[99].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0099:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[99].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0099:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[99].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0099:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[99].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0099:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[99].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0099:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[99].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0099:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[99].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0099:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[99].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0099:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[99].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0099:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[99].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0099:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[99].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0099:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[99].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0099:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[99].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0099:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[99].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0099:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[99].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0099:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[99].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0099:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[99].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0099:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[99].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0099:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[99].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0099:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[99].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0099:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[99].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0099:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[99].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0100:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[100].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0100:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[100].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0100:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[100].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0100:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[100].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0100:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[100].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0100:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[100].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0100:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[100].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0100:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[100].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0100:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[100].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0100:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[100].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0100:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[100].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0100:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[100].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0100:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[100].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0100:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[100].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0100:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[100].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0100:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[100].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0100:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[100].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0100:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[100].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0100:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[100].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:FF:0100:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[100].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0100:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[100].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0100:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[100].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:FF:0100:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[100].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.xOK
      - | io: input


    * - PLC:RIX:MOTION:FFO:01:RegistrationFailure
      - bo
      - GVL.fbFastFaultOutput1.xFastFaultRegFail
      - | io: output


    * - PLC:RIX:MOTION:FFO:01:RegistrationFailure_RBV
      - bi
      - GVL.fbFastFaultOutput1.xFastFaultRegFail
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:ClearFault
      - bo
      - Might be overidden by PLC writes
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:ClearFault_RBV
      - bi
      - Might be overidden by PLC writes
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:EnableVeto
      - bo
      - GVL.fbFastFaultOutput2.i_xVeto
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:EnableVeto_RBV
      - bi
      - GVL.fbFastFaultOutput2.i_xVeto
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FaultHWO_RBV
      - bi
      - Hardware Output Status
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0001:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[1].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0001:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[1].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0001:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[1].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0001:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[1].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0001:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[1].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0001:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[1].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0001:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[1].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0001:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[1].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0001:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[1].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0001:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[1].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0001:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[1].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0001:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[1].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0001:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[1].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0001:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[1].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0001:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[1].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0001:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[1].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0001:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[1].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0001:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[1].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0001:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[1].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0001:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[1].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0001:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[1].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0001:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[1].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0001:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[1].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0002:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[2].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0002:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[2].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0002:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[2].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0002:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[2].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0002:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[2].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0002:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[2].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0002:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[2].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0002:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[2].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0002:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[2].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0002:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[2].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0002:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[2].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0002:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[2].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0002:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[2].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0002:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[2].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0002:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[2].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0002:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[2].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0002:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[2].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0002:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[2].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0002:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[2].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0002:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[2].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0002:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[2].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0002:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[2].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0002:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[2].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0003:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[3].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0003:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[3].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0003:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[3].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0003:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[3].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0003:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[3].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0003:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[3].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0003:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[3].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0003:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[3].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0003:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[3].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0003:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[3].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0003:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[3].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0003:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[3].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0003:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[3].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0003:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[3].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0003:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[3].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0003:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[3].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0003:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[3].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0003:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[3].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0003:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[3].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0003:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[3].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0003:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[3].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0003:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[3].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0003:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[3].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0004:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[4].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0004:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[4].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0004:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[4].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0004:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[4].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0004:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[4].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0004:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[4].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0004:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[4].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0004:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[4].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0004:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[4].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0004:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[4].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0004:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[4].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0004:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[4].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0004:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[4].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0004:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[4].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0004:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[4].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0004:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[4].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0004:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[4].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0004:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[4].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0004:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[4].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0004:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[4].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0004:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[4].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0004:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[4].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0004:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[4].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0005:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[5].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0005:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[5].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0005:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[5].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0005:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[5].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0005:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[5].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0005:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[5].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0005:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[5].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0005:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[5].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0005:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[5].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0005:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[5].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0005:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[5].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0005:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[5].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0005:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[5].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0005:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[5].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0005:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[5].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0005:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[5].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0005:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[5].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0005:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[5].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0005:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[5].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0005:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[5].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0005:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[5].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0005:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[5].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0005:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[5].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0006:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[6].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0006:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[6].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0006:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[6].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0006:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[6].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0006:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[6].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0006:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[6].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0006:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[6].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0006:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[6].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0006:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[6].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0006:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[6].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0006:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[6].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0006:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[6].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0006:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[6].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0006:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[6].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0006:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[6].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0006:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[6].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0006:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[6].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0006:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[6].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0006:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[6].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0006:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[6].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0006:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[6].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0006:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[6].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0006:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[6].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0007:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[7].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0007:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[7].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0007:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[7].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0007:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[7].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0007:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[7].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0007:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[7].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0007:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[7].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0007:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[7].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0007:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[7].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0007:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[7].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0007:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[7].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0007:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[7].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0007:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[7].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0007:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[7].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0007:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[7].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0007:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[7].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0007:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[7].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0007:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[7].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0007:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[7].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0007:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[7].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0007:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[7].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0007:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[7].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0007:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[7].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0008:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[8].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0008:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[8].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0008:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[8].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0008:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[8].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0008:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[8].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0008:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[8].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0008:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[8].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0008:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[8].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0008:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[8].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0008:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[8].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0008:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[8].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0008:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[8].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0008:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[8].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0008:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[8].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0008:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[8].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0008:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[8].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0008:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[8].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0008:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[8].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0008:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[8].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0008:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[8].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0008:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[8].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0008:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[8].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0008:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[8].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0009:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[9].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0009:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[9].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0009:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[9].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0009:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[9].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0009:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[9].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0009:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[9].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0009:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[9].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0009:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[9].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0009:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[9].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0009:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[9].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0009:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[9].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0009:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[9].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0009:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[9].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0009:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[9].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0009:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[9].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0009:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[9].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0009:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[9].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0009:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[9].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0009:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[9].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0009:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[9].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0009:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[9].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0009:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[9].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0009:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[9].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0010:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[10].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0010:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[10].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0010:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[10].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0010:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[10].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0010:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[10].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0010:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[10].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0010:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[10].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0010:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[10].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0010:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[10].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0010:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[10].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0010:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[10].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0010:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[10].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0010:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[10].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0010:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[10].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0010:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[10].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0010:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[10].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0010:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[10].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0010:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[10].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0010:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[10].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0010:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[10].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0010:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[10].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0010:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[10].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0010:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[10].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0011:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[11].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0011:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[11].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0011:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[11].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0011:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[11].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0011:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[11].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0011:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[11].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0011:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[11].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0011:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[11].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0011:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[11].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0011:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[11].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0011:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[11].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0011:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[11].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0011:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[11].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0011:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[11].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0011:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[11].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0011:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[11].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0011:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[11].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0011:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[11].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0011:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[11].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0011:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[11].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0011:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[11].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0011:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[11].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0011:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[11].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0012:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[12].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0012:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[12].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0012:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[12].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0012:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[12].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0012:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[12].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0012:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[12].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0012:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[12].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0012:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[12].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0012:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[12].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0012:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[12].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0012:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[12].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0012:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[12].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0012:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[12].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0012:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[12].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0012:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[12].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0012:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[12].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0012:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[12].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0012:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[12].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0012:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[12].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0012:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[12].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0012:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[12].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0012:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[12].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0012:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[12].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0013:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[13].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0013:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[13].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0013:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[13].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0013:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[13].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0013:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[13].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0013:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[13].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0013:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[13].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0013:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[13].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0013:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[13].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0013:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[13].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0013:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[13].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0013:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[13].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0013:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[13].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0013:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[13].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0013:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[13].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0013:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[13].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0013:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[13].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0013:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[13].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0013:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[13].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0013:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[13].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0013:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[13].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0013:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[13].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0013:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[13].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0014:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[14].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0014:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[14].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0014:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[14].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0014:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[14].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0014:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[14].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0014:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[14].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0014:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[14].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0014:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[14].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0014:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[14].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0014:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[14].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0014:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[14].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0014:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[14].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0014:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[14].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0014:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[14].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0014:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[14].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0014:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[14].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0014:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[14].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0014:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[14].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0014:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[14].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0014:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[14].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0014:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[14].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0014:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[14].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0014:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[14].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0015:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[15].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0015:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[15].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0015:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[15].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0015:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[15].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0015:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[15].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0015:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[15].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0015:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[15].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0015:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[15].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0015:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[15].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0015:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[15].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0015:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[15].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0015:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[15].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0015:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[15].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0015:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[15].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0015:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[15].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0015:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[15].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0015:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[15].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0015:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[15].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0015:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[15].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0015:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[15].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0015:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[15].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0015:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[15].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0015:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[15].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0016:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[16].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0016:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[16].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0016:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[16].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0016:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[16].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0016:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[16].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0016:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[16].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0016:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[16].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0016:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[16].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0016:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[16].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0016:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[16].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0016:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[16].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0016:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[16].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0016:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[16].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0016:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[16].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0016:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[16].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0016:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[16].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0016:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[16].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0016:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[16].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0016:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[16].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0016:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[16].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0016:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[16].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0016:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[16].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0016:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[16].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0017:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[17].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0017:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[17].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0017:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[17].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0017:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[17].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0017:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[17].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0017:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[17].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0017:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[17].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0017:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[17].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0017:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[17].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0017:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[17].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0017:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[17].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0017:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[17].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0017:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[17].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0017:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[17].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0017:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[17].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0017:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[17].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0017:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[17].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0017:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[17].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0017:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[17].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0017:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[17].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0017:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[17].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0017:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[17].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0017:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[17].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0018:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[18].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0018:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[18].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0018:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[18].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0018:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[18].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0018:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[18].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0018:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[18].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0018:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[18].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0018:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[18].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0018:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[18].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0018:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[18].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0018:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[18].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0018:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[18].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0018:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[18].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0018:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[18].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0018:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[18].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0018:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[18].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0018:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[18].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0018:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[18].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0018:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[18].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0018:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[18].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0018:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[18].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0018:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[18].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0018:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[18].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0019:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[19].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0019:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[19].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0019:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[19].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0019:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[19].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0019:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[19].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0019:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[19].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0019:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[19].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0019:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[19].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0019:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[19].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0019:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[19].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0019:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[19].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0019:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[19].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0019:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[19].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0019:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[19].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0019:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[19].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0019:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[19].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0019:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[19].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0019:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[19].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0019:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[19].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0019:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[19].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0019:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[19].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0019:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[19].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0019:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[19].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0020:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[20].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0020:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[20].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0020:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[20].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0020:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[20].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0020:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[20].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0020:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[20].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0020:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[20].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0020:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[20].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0020:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[20].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0020:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[20].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0020:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[20].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0020:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[20].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0020:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[20].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0020:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[20].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0020:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[20].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0020:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[20].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0020:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[20].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0020:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[20].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0020:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[20].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0020:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[20].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0020:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[20].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0020:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[20].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0020:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[20].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0021:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[21].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0021:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[21].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0021:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[21].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0021:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[21].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0021:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[21].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0021:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[21].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0021:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[21].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0021:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[21].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0021:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[21].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0021:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[21].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0021:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[21].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0021:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[21].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0021:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[21].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0021:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[21].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0021:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[21].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0021:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[21].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0021:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[21].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0021:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[21].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0021:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[21].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0021:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[21].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0021:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[21].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0021:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[21].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0021:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[21].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0022:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[22].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0022:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[22].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0022:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[22].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0022:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[22].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0022:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[22].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0022:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[22].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0022:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[22].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0022:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[22].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0022:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[22].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0022:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[22].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0022:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[22].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0022:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[22].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0022:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[22].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0022:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[22].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0022:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[22].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0022:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[22].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0022:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[22].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0022:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[22].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0022:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[22].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0022:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[22].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0022:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[22].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0022:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[22].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0022:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[22].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0023:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[23].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0023:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[23].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0023:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[23].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0023:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[23].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0023:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[23].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0023:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[23].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0023:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[23].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0023:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[23].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0023:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[23].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0023:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[23].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0023:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[23].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0023:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[23].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0023:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[23].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0023:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[23].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0023:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[23].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0023:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[23].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0023:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[23].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0023:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[23].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0023:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[23].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0023:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[23].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0023:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[23].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0023:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[23].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0023:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[23].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0024:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[24].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0024:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[24].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0024:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[24].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0024:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[24].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0024:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[24].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0024:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[24].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0024:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[24].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0024:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[24].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0024:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[24].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0024:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[24].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0024:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[24].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0024:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[24].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0024:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[24].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0024:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[24].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0024:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[24].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0024:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[24].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0024:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[24].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0024:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[24].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0024:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[24].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0024:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[24].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0024:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[24].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0024:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[24].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0024:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[24].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0025:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[25].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0025:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[25].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0025:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[25].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0025:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[25].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0025:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[25].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0025:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[25].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0025:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[25].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0025:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[25].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0025:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[25].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0025:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[25].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0025:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[25].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0025:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[25].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0025:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[25].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0025:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[25].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0025:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[25].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0025:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[25].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0025:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[25].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0025:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[25].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0025:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[25].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0025:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[25].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0025:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[25].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0025:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[25].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0025:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[25].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0026:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[26].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0026:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[26].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0026:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[26].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0026:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[26].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0026:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[26].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0026:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[26].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0026:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[26].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0026:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[26].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0026:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[26].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0026:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[26].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0026:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[26].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0026:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[26].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0026:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[26].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0026:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[26].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0026:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[26].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0026:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[26].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0026:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[26].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0026:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[26].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0026:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[26].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0026:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[26].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0026:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[26].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0026:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[26].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0026:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[26].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0027:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[27].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0027:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[27].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0027:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[27].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0027:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[27].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0027:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[27].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0027:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[27].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0027:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[27].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0027:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[27].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0027:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[27].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0027:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[27].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0027:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[27].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0027:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[27].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0027:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[27].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0027:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[27].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0027:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[27].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0027:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[27].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0027:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[27].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0027:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[27].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0027:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[27].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0027:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[27].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0027:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[27].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0027:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[27].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0027:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[27].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0028:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[28].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0028:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[28].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0028:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[28].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0028:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[28].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0028:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[28].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0028:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[28].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0028:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[28].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0028:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[28].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0028:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[28].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0028:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[28].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0028:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[28].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0028:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[28].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0028:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[28].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0028:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[28].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0028:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[28].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0028:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[28].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0028:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[28].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0028:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[28].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0028:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[28].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0028:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[28].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0028:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[28].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0028:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[28].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0028:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[28].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0029:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[29].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0029:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[29].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0029:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[29].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0029:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[29].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0029:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[29].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0029:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[29].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0029:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[29].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0029:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[29].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0029:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[29].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0029:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[29].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0029:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[29].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0029:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[29].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0029:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[29].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0029:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[29].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0029:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[29].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0029:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[29].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0029:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[29].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0029:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[29].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0029:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[29].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0029:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[29].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0029:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[29].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0029:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[29].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0029:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[29].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0030:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[30].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0030:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[30].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0030:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[30].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0030:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[30].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0030:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[30].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0030:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[30].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0030:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[30].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0030:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[30].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0030:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[30].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0030:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[30].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0030:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[30].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0030:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[30].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0030:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[30].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0030:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[30].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0030:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[30].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0030:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[30].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0030:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[30].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0030:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[30].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0030:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[30].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0030:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[30].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0030:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[30].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0030:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[30].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0030:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[30].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0031:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[31].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0031:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[31].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0031:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[31].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0031:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[31].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0031:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[31].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0031:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[31].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0031:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[31].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0031:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[31].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0031:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[31].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0031:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[31].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0031:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[31].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0031:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[31].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0031:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[31].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0031:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[31].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0031:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[31].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0031:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[31].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0031:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[31].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0031:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[31].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0031:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[31].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0031:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[31].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0031:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[31].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0031:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[31].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0031:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[31].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0032:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[32].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0032:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[32].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0032:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[32].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0032:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[32].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0032:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[32].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0032:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[32].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0032:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[32].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0032:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[32].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0032:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[32].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0032:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[32].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0032:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[32].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0032:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[32].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0032:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[32].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0032:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[32].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0032:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[32].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0032:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[32].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0032:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[32].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0032:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[32].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0032:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[32].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0032:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[32].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0032:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[32].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0032:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[32].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0032:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[32].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0033:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[33].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0033:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[33].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0033:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[33].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0033:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[33].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0033:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[33].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0033:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[33].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0033:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[33].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0033:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[33].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0033:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[33].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0033:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[33].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0033:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[33].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0033:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[33].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0033:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[33].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0033:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[33].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0033:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[33].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0033:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[33].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0033:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[33].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0033:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[33].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0033:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[33].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0033:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[33].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0033:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[33].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0033:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[33].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0033:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[33].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0034:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[34].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0034:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[34].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0034:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[34].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0034:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[34].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0034:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[34].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0034:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[34].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0034:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[34].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0034:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[34].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0034:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[34].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0034:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[34].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0034:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[34].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0034:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[34].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0034:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[34].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0034:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[34].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0034:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[34].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0034:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[34].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0034:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[34].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0034:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[34].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0034:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[34].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0034:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[34].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0034:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[34].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0034:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[34].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0034:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[34].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0035:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[35].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0035:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[35].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0035:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[35].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0035:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[35].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0035:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[35].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0035:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[35].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0035:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[35].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0035:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[35].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0035:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[35].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0035:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[35].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0035:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[35].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0035:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[35].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0035:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[35].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0035:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[35].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0035:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[35].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0035:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[35].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0035:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[35].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0035:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[35].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0035:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[35].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0035:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[35].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0035:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[35].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0035:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[35].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0035:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[35].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0036:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[36].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0036:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[36].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0036:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[36].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0036:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[36].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0036:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[36].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0036:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[36].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0036:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[36].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0036:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[36].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0036:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[36].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0036:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[36].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0036:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[36].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0036:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[36].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0036:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[36].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0036:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[36].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0036:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[36].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0036:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[36].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0036:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[36].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0036:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[36].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0036:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[36].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0036:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[36].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0036:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[36].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0036:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[36].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0036:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[36].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0037:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[37].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0037:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[37].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0037:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[37].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0037:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[37].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0037:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[37].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0037:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[37].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0037:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[37].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0037:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[37].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0037:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[37].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0037:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[37].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0037:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[37].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0037:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[37].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0037:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[37].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0037:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[37].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0037:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[37].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0037:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[37].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0037:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[37].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0037:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[37].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0037:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[37].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0037:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[37].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0037:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[37].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0037:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[37].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0037:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[37].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0038:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[38].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0038:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[38].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0038:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[38].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0038:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[38].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0038:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[38].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0038:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[38].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0038:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[38].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0038:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[38].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0038:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[38].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0038:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[38].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0038:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[38].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0038:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[38].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0038:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[38].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0038:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[38].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0038:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[38].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0038:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[38].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0038:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[38].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0038:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[38].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0038:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[38].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0038:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[38].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0038:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[38].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0038:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[38].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0038:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[38].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0039:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[39].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0039:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[39].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0039:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[39].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0039:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[39].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0039:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[39].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0039:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[39].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0039:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[39].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0039:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[39].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0039:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[39].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0039:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[39].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0039:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[39].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0039:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[39].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0039:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[39].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0039:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[39].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0039:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[39].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0039:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[39].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0039:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[39].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0039:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[39].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0039:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[39].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0039:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[39].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0039:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[39].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0039:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[39].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0039:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[39].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0040:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[40].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0040:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[40].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0040:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[40].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0040:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[40].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0040:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[40].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0040:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[40].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0040:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[40].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0040:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[40].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0040:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[40].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0040:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[40].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0040:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[40].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0040:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[40].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0040:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[40].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0040:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[40].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0040:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[40].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0040:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[40].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0040:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[40].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0040:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[40].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0040:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[40].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0040:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[40].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0040:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[40].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0040:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[40].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0040:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[40].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0041:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[41].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0041:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[41].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0041:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[41].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0041:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[41].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0041:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[41].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0041:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[41].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0041:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[41].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0041:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[41].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0041:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[41].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0041:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[41].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0041:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[41].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0041:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[41].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0041:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[41].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0041:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[41].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0041:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[41].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0041:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[41].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0041:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[41].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0041:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[41].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0041:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[41].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0041:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[41].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0041:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[41].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0041:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[41].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0041:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[41].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0042:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[42].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0042:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[42].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0042:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[42].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0042:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[42].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0042:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[42].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0042:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[42].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0042:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[42].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0042:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[42].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0042:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[42].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0042:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[42].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0042:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[42].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0042:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[42].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0042:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[42].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0042:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[42].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0042:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[42].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0042:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[42].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0042:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[42].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0042:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[42].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0042:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[42].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0042:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[42].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0042:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[42].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0042:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[42].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0042:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[42].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0043:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[43].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0043:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[43].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0043:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[43].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0043:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[43].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0043:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[43].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0043:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[43].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0043:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[43].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0043:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[43].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0043:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[43].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0043:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[43].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0043:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[43].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0043:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[43].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0043:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[43].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0043:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[43].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0043:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[43].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0043:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[43].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0043:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[43].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0043:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[43].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0043:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[43].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0043:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[43].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0043:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[43].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0043:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[43].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0043:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[43].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0044:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[44].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0044:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[44].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0044:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[44].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0044:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[44].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0044:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[44].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0044:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[44].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0044:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[44].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0044:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[44].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0044:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[44].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0044:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[44].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0044:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[44].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0044:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[44].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0044:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[44].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0044:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[44].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0044:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[44].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0044:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[44].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0044:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[44].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0044:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[44].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0044:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[44].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0044:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[44].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0044:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[44].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0044:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[44].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0044:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[44].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0045:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[45].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0045:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[45].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0045:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[45].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0045:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[45].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0045:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[45].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0045:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[45].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0045:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[45].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0045:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[45].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0045:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[45].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0045:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[45].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0045:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[45].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0045:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[45].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0045:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[45].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0045:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[45].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0045:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[45].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0045:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[45].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0045:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[45].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0045:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[45].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0045:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[45].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0045:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[45].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0045:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[45].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0045:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[45].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0045:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[45].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0046:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[46].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0046:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[46].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0046:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[46].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0046:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[46].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0046:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[46].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0046:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[46].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0046:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[46].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0046:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[46].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0046:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[46].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0046:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[46].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0046:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[46].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0046:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[46].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0046:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[46].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0046:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[46].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0046:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[46].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0046:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[46].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0046:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[46].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0046:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[46].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0046:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[46].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0046:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[46].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0046:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[46].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0046:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[46].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0046:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[46].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0047:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[47].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0047:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[47].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0047:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[47].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0047:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[47].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0047:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[47].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0047:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[47].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0047:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[47].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0047:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[47].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0047:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[47].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0047:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[47].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0047:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[47].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0047:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[47].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0047:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[47].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0047:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[47].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0047:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[47].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0047:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[47].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0047:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[47].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0047:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[47].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0047:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[47].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0047:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[47].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0047:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[47].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0047:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[47].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0047:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[47].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0048:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[48].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0048:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[48].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0048:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[48].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0048:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[48].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0048:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[48].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0048:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[48].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0048:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[48].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0048:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[48].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0048:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[48].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0048:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[48].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0048:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[48].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0048:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[48].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0048:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[48].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0048:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[48].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0048:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[48].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0048:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[48].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0048:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[48].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0048:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[48].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0048:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[48].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0048:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[48].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0048:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[48].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0048:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[48].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0048:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[48].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0049:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[49].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0049:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[49].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0049:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[49].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0049:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[49].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0049:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[49].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0049:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[49].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0049:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[49].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0049:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[49].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0049:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[49].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0049:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[49].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0049:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[49].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0049:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[49].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0049:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[49].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0049:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[49].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0049:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[49].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0049:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[49].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0049:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[49].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0049:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[49].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0049:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[49].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0049:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[49].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0049:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[49].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0049:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[49].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0049:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[49].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0050:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[50].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0050:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[50].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0050:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[50].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0050:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[50].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0050:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[50].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0050:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[50].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0050:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[50].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0050:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[50].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0050:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[50].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0050:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[50].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0050:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[50].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0050:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[50].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0050:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[50].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0050:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[50].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0050:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[50].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0050:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[50].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0050:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[50].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0050:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[50].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0050:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[50].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0050:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[50].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0050:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[50].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0050:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[50].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0050:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[50].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0051:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[51].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0051:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[51].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0051:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[51].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0051:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[51].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0051:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[51].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0051:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[51].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0051:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[51].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0051:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[51].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0051:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[51].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0051:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[51].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0051:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[51].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0051:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[51].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0051:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[51].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0051:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[51].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0051:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[51].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0051:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[51].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0051:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[51].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0051:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[51].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0051:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[51].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0051:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[51].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0051:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[51].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0051:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[51].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0051:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[51].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0052:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[52].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0052:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[52].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0052:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[52].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0052:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[52].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0052:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[52].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0052:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[52].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0052:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[52].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0052:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[52].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0052:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[52].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0052:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[52].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0052:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[52].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0052:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[52].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0052:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[52].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0052:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[52].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0052:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[52].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0052:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[52].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0052:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[52].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0052:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[52].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0052:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[52].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0052:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[52].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0052:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[52].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0052:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[52].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0052:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[52].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0053:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[53].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0053:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[53].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0053:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[53].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0053:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[53].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0053:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[53].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0053:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[53].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0053:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[53].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0053:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[53].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0053:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[53].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0053:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[53].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0053:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[53].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0053:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[53].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0053:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[53].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0053:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[53].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0053:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[53].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0053:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[53].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0053:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[53].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0053:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[53].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0053:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[53].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0053:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[53].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0053:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[53].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0053:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[53].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0053:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[53].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0054:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[54].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0054:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[54].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0054:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[54].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0054:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[54].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0054:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[54].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0054:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[54].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0054:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[54].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0054:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[54].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0054:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[54].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0054:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[54].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0054:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[54].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0054:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[54].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0054:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[54].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0054:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[54].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0054:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[54].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0054:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[54].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0054:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[54].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0054:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[54].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0054:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[54].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0054:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[54].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0054:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[54].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0054:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[54].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0054:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[54].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0055:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[55].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0055:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[55].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0055:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[55].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0055:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[55].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0055:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[55].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0055:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[55].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0055:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[55].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0055:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[55].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0055:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[55].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0055:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[55].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0055:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[55].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0055:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[55].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0055:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[55].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0055:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[55].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0055:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[55].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0055:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[55].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0055:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[55].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0055:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[55].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0055:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[55].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0055:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[55].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0055:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[55].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0055:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[55].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0055:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[55].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0056:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[56].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0056:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[56].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0056:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[56].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0056:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[56].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0056:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[56].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0056:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[56].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0056:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[56].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0056:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[56].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0056:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[56].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0056:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[56].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0056:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[56].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0056:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[56].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0056:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[56].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0056:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[56].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0056:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[56].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0056:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[56].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0056:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[56].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0056:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[56].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0056:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[56].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0056:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[56].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0056:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[56].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0056:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[56].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0056:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[56].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0057:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[57].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0057:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[57].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0057:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[57].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0057:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[57].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0057:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[57].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0057:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[57].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0057:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[57].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0057:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[57].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0057:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[57].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0057:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[57].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0057:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[57].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0057:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[57].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0057:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[57].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0057:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[57].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0057:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[57].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0057:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[57].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0057:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[57].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0057:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[57].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0057:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[57].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0057:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[57].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0057:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[57].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0057:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[57].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0057:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[57].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0058:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[58].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0058:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[58].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0058:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[58].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0058:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[58].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0058:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[58].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0058:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[58].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0058:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[58].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0058:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[58].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0058:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[58].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0058:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[58].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0058:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[58].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0058:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[58].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0058:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[58].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0058:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[58].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0058:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[58].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0058:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[58].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0058:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[58].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0058:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[58].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0058:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[58].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0058:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[58].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0058:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[58].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0058:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[58].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0058:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[58].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0059:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[59].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0059:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[59].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0059:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[59].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0059:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[59].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0059:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[59].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0059:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[59].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0059:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[59].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0059:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[59].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0059:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[59].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0059:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[59].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0059:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[59].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0059:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[59].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0059:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[59].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0059:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[59].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0059:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[59].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0059:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[59].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0059:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[59].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0059:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[59].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0059:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[59].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0059:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[59].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0059:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[59].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0059:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[59].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0059:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[59].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0060:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[60].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0060:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[60].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0060:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[60].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0060:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[60].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0060:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[60].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0060:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[60].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0060:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[60].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0060:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[60].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0060:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[60].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0060:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[60].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0060:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[60].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0060:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[60].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0060:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[60].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0060:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[60].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0060:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[60].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0060:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[60].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0060:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[60].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0060:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[60].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0060:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[60].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0060:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[60].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0060:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[60].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0060:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[60].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0060:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[60].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0061:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[61].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0061:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[61].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0061:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[61].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0061:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[61].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0061:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[61].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0061:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[61].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0061:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[61].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0061:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[61].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0061:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[61].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0061:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[61].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0061:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[61].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0061:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[61].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0061:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[61].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0061:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[61].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0061:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[61].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0061:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[61].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0061:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[61].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0061:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[61].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0061:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[61].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0061:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[61].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0061:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[61].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0061:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[61].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0061:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[61].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0062:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[62].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0062:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[62].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0062:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[62].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0062:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[62].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0062:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[62].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0062:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[62].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0062:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[62].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0062:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[62].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0062:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[62].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0062:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[62].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0062:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[62].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0062:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[62].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0062:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[62].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0062:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[62].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0062:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[62].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0062:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[62].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0062:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[62].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0062:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[62].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0062:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[62].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0062:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[62].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0062:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[62].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0062:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[62].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0062:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[62].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0063:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[63].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0063:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[63].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0063:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[63].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0063:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[63].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0063:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[63].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0063:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[63].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0063:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[63].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0063:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[63].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0063:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[63].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0063:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[63].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0063:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[63].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0063:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[63].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0063:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[63].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0063:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[63].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0063:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[63].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0063:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[63].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0063:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[63].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0063:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[63].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0063:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[63].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0063:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[63].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0063:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[63].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0063:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[63].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0063:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[63].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0064:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[64].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0064:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[64].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0064:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[64].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0064:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[64].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0064:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[64].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0064:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[64].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0064:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[64].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0064:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[64].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0064:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[64].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0064:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[64].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0064:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[64].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0064:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[64].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0064:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[64].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0064:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[64].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0064:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[64].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0064:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[64].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0064:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[64].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0064:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[64].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0064:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[64].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0064:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[64].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0064:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[64].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0064:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[64].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0064:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[64].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0065:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[65].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0065:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[65].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0065:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[65].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0065:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[65].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0065:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[65].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0065:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[65].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0065:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[65].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0065:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[65].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0065:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[65].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0065:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[65].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0065:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[65].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0065:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[65].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0065:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[65].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0065:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[65].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0065:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[65].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0065:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[65].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0065:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[65].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0065:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[65].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0065:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[65].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0065:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[65].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0065:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[65].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0065:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[65].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0065:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[65].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0066:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[66].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0066:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[66].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0066:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[66].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0066:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[66].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0066:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[66].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0066:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[66].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0066:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[66].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0066:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[66].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0066:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[66].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0066:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[66].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0066:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[66].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0066:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[66].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0066:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[66].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0066:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[66].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0066:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[66].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0066:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[66].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0066:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[66].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0066:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[66].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0066:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[66].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0066:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[66].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0066:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[66].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0066:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[66].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0066:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[66].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0067:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[67].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0067:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[67].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0067:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[67].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0067:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[67].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0067:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[67].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0067:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[67].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0067:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[67].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0067:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[67].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0067:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[67].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0067:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[67].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0067:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[67].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0067:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[67].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0067:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[67].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0067:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[67].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0067:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[67].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0067:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[67].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0067:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[67].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0067:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[67].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0067:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[67].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0067:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[67].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0067:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[67].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0067:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[67].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0067:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[67].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0068:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[68].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0068:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[68].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0068:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[68].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0068:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[68].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0068:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[68].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0068:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[68].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0068:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[68].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0068:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[68].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0068:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[68].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0068:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[68].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0068:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[68].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0068:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[68].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0068:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[68].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0068:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[68].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0068:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[68].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0068:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[68].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0068:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[68].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0068:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[68].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0068:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[68].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0068:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[68].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0068:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[68].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0068:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[68].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0068:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[68].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0069:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[69].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0069:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[69].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0069:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[69].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0069:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[69].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0069:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[69].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0069:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[69].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0069:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[69].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0069:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[69].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0069:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[69].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0069:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[69].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0069:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[69].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0069:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[69].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0069:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[69].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0069:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[69].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0069:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[69].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0069:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[69].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0069:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[69].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0069:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[69].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0069:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[69].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0069:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[69].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0069:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[69].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0069:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[69].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0069:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[69].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0070:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[70].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0070:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[70].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0070:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[70].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0070:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[70].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0070:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[70].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0070:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[70].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0070:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[70].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0070:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[70].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0070:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[70].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0070:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[70].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0070:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[70].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0070:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[70].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0070:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[70].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0070:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[70].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0070:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[70].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0070:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[70].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0070:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[70].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0070:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[70].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0070:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[70].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0070:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[70].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0070:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[70].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0070:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[70].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0070:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[70].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0071:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[71].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0071:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[71].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0071:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[71].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0071:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[71].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0071:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[71].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0071:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[71].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0071:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[71].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0071:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[71].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0071:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[71].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0071:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[71].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0071:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[71].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0071:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[71].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0071:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[71].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0071:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[71].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0071:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[71].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0071:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[71].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0071:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[71].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0071:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[71].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0071:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[71].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0071:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[71].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0071:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[71].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0071:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[71].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0071:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[71].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0072:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[72].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0072:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[72].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0072:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[72].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0072:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[72].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0072:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[72].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0072:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[72].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0072:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[72].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0072:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[72].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0072:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[72].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0072:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[72].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0072:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[72].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0072:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[72].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0072:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[72].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0072:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[72].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0072:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[72].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0072:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[72].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0072:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[72].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0072:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[72].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0072:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[72].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0072:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[72].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0072:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[72].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0072:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[72].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0072:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[72].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0073:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[73].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0073:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[73].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0073:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[73].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0073:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[73].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0073:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[73].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0073:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[73].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0073:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[73].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0073:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[73].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0073:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[73].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0073:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[73].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0073:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[73].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0073:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[73].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0073:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[73].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0073:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[73].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0073:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[73].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0073:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[73].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0073:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[73].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0073:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[73].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0073:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[73].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0073:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[73].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0073:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[73].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0073:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[73].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0073:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[73].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0074:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[74].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0074:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[74].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0074:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[74].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0074:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[74].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0074:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[74].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0074:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[74].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0074:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[74].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0074:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[74].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0074:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[74].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0074:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[74].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0074:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[74].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0074:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[74].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0074:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[74].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0074:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[74].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0074:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[74].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0074:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[74].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0074:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[74].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0074:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[74].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0074:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[74].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0074:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[74].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0074:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[74].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0074:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[74].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0074:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[74].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0075:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[75].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0075:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[75].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0075:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[75].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0075:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[75].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0075:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[75].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0075:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[75].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0075:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[75].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0075:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[75].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0075:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[75].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0075:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[75].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0075:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[75].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0075:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[75].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0075:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[75].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0075:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[75].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0075:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[75].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0075:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[75].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0075:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[75].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0075:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[75].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0075:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[75].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0075:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[75].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0075:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[75].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0075:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[75].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0075:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[75].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0076:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[76].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0076:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[76].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0076:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[76].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0076:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[76].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0076:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[76].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0076:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[76].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0076:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[76].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0076:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[76].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0076:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[76].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0076:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[76].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0076:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[76].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0076:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[76].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0076:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[76].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0076:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[76].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0076:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[76].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0076:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[76].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0076:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[76].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0076:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[76].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0076:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[76].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0076:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[76].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0076:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[76].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0076:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[76].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0076:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[76].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0077:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[77].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0077:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[77].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0077:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[77].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0077:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[77].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0077:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[77].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0077:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[77].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0077:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[77].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0077:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[77].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0077:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[77].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0077:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[77].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0077:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[77].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0077:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[77].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0077:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[77].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0077:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[77].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0077:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[77].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0077:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[77].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0077:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[77].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0077:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[77].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0077:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[77].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0077:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[77].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0077:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[77].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0077:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[77].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0077:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[77].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0078:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[78].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0078:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[78].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0078:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[78].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0078:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[78].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0078:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[78].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0078:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[78].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0078:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[78].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0078:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[78].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0078:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[78].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0078:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[78].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0078:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[78].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0078:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[78].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0078:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[78].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0078:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[78].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0078:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[78].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0078:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[78].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0078:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[78].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0078:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[78].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0078:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[78].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0078:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[78].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0078:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[78].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0078:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[78].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0078:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[78].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0079:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[79].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0079:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[79].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0079:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[79].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0079:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[79].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0079:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[79].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0079:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[79].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0079:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[79].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0079:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[79].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0079:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[79].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0079:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[79].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0079:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[79].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0079:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[79].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0079:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[79].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0079:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[79].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0079:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[79].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0079:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[79].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0079:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[79].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0079:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[79].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0079:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[79].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0079:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[79].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0079:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[79].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0079:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[79].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0079:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[79].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0080:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[80].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0080:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[80].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0080:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[80].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0080:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[80].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0080:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[80].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0080:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[80].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0080:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[80].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0080:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[80].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0080:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[80].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0080:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[80].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0080:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[80].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0080:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[80].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0080:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[80].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0080:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[80].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0080:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[80].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0080:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[80].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0080:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[80].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0080:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[80].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0080:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[80].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0080:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[80].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0080:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[80].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0080:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[80].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0080:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[80].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0081:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[81].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0081:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[81].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0081:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[81].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0081:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[81].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0081:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[81].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0081:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[81].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0081:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[81].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0081:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[81].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0081:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[81].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0081:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[81].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0081:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[81].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0081:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[81].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0081:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[81].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0081:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[81].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0081:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[81].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0081:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[81].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0081:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[81].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0081:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[81].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0081:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[81].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0081:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[81].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0081:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[81].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0081:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[81].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0081:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[81].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0082:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[82].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0082:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[82].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0082:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[82].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0082:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[82].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0082:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[82].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0082:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[82].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0082:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[82].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0082:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[82].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0082:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[82].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0082:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[82].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0082:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[82].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0082:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[82].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0082:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[82].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0082:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[82].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0082:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[82].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0082:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[82].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0082:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[82].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0082:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[82].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0082:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[82].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0082:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[82].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0082:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[82].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0082:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[82].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0082:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[82].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0083:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[83].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0083:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[83].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0083:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[83].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0083:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[83].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0083:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[83].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0083:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[83].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0083:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[83].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0083:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[83].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0083:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[83].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0083:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[83].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0083:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[83].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0083:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[83].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0083:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[83].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0083:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[83].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0083:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[83].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0083:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[83].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0083:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[83].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0083:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[83].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0083:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[83].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0083:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[83].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0083:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[83].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0083:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[83].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0083:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[83].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0084:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[84].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0084:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[84].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0084:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[84].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0084:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[84].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0084:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[84].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0084:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[84].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0084:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[84].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0084:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[84].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0084:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[84].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0084:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[84].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0084:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[84].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0084:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[84].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0084:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[84].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0084:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[84].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0084:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[84].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0084:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[84].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0084:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[84].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0084:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[84].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0084:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[84].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0084:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[84].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0084:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[84].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0084:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[84].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0084:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[84].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0085:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[85].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0085:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[85].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0085:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[85].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0085:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[85].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0085:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[85].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0085:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[85].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0085:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[85].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0085:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[85].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0085:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[85].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0085:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[85].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0085:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[85].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0085:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[85].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0085:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[85].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0085:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[85].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0085:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[85].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0085:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[85].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0085:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[85].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0085:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[85].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0085:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[85].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0085:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[85].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0085:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[85].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0085:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[85].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0085:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[85].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0086:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[86].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0086:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[86].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0086:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[86].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0086:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[86].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0086:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[86].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0086:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[86].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0086:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[86].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0086:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[86].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0086:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[86].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0086:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[86].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0086:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[86].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0086:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[86].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0086:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[86].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0086:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[86].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0086:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[86].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0086:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[86].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0086:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[86].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0086:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[86].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0086:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[86].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0086:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[86].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0086:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[86].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0086:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[86].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0086:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[86].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0087:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[87].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0087:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[87].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0087:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[87].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0087:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[87].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0087:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[87].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0087:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[87].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0087:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[87].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0087:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[87].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0087:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[87].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0087:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[87].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0087:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[87].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0087:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[87].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0087:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[87].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0087:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[87].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0087:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[87].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0087:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[87].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0087:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[87].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0087:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[87].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0087:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[87].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0087:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[87].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0087:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[87].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0087:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[87].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0087:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[87].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0088:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[88].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0088:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[88].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0088:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[88].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0088:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[88].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0088:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[88].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0088:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[88].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0088:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[88].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0088:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[88].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0088:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[88].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0088:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[88].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0088:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[88].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0088:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[88].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0088:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[88].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0088:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[88].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0088:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[88].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0088:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[88].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0088:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[88].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0088:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[88].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0088:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[88].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0088:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[88].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0088:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[88].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0088:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[88].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0088:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[88].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0089:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[89].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0089:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[89].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0089:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[89].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0089:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[89].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0089:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[89].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0089:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[89].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0089:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[89].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0089:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[89].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0089:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[89].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0089:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[89].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0089:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[89].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0089:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[89].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0089:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[89].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0089:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[89].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0089:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[89].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0089:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[89].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0089:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[89].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0089:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[89].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0089:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[89].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0089:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[89].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0089:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[89].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0089:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[89].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0089:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[89].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0090:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[90].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0090:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[90].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0090:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[90].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0090:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[90].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0090:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[90].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0090:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[90].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0090:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[90].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0090:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[90].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0090:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[90].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0090:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[90].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0090:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[90].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0090:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[90].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0090:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[90].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0090:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[90].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0090:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[90].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0090:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[90].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0090:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[90].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0090:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[90].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0090:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[90].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0090:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[90].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0090:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[90].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0090:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[90].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0090:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[90].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0091:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[91].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0091:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[91].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0091:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[91].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0091:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[91].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0091:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[91].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0091:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[91].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0091:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[91].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0091:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[91].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0091:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[91].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0091:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[91].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0091:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[91].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0091:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[91].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0091:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[91].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0091:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[91].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0091:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[91].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0091:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[91].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0091:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[91].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0091:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[91].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0091:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[91].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0091:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[91].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0091:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[91].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0091:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[91].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0091:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[91].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0092:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[92].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0092:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[92].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0092:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[92].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0092:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[92].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0092:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[92].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0092:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[92].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0092:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[92].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0092:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[92].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0092:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[92].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0092:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[92].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0092:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[92].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0092:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[92].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0092:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[92].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0092:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[92].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0092:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[92].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0092:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[92].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0092:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[92].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0092:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[92].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0092:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[92].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0092:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[92].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0092:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[92].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0092:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[92].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0092:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[92].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0093:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[93].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0093:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[93].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0093:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[93].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0093:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[93].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0093:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[93].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0093:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[93].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0093:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[93].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0093:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[93].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0093:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[93].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0093:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[93].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0093:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[93].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0093:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[93].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0093:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[93].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0093:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[93].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0093:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[93].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0093:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[93].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0093:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[93].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0093:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[93].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0093:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[93].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0093:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[93].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0093:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[93].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0093:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[93].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0093:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[93].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0094:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[94].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0094:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[94].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0094:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[94].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0094:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[94].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0094:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[94].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0094:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[94].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0094:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[94].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0094:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[94].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0094:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[94].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0094:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[94].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0094:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[94].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0094:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[94].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0094:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[94].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0094:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[94].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0094:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[94].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0094:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[94].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0094:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[94].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0094:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[94].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0094:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[94].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0094:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[94].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0094:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[94].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0094:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[94].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0094:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[94].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0095:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[95].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0095:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[95].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0095:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[95].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0095:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[95].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0095:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[95].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0095:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[95].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0095:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[95].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0095:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[95].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0095:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[95].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0095:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[95].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0095:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[95].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0095:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[95].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0095:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[95].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0095:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[95].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0095:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[95].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0095:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[95].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0095:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[95].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0095:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[95].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0095:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[95].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0095:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[95].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0095:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[95].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0095:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[95].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0095:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[95].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0096:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[96].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0096:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[96].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0096:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[96].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0096:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[96].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0096:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[96].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0096:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[96].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0096:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[96].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0096:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[96].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0096:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[96].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0096:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[96].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0096:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[96].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0096:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[96].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0096:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[96].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0096:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[96].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0096:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[96].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0096:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[96].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0096:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[96].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0096:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[96].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0096:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[96].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0096:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[96].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0096:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[96].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0096:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[96].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0096:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[96].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0097:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[97].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0097:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[97].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0097:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[97].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0097:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[97].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0097:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[97].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0097:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[97].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0097:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[97].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0097:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[97].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0097:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[97].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0097:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[97].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0097:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[97].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0097:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[97].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0097:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[97].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0097:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[97].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0097:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[97].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0097:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[97].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0097:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[97].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0097:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[97].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0097:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[97].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0097:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[97].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0097:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[97].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0097:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[97].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0097:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[97].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0098:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[98].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0098:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[98].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0098:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[98].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0098:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[98].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0098:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[98].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0098:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[98].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0098:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[98].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0098:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[98].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0098:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[98].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0098:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[98].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0098:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[98].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0098:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[98].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0098:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[98].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0098:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[98].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0098:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[98].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0098:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[98].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0098:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[98].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0098:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[98].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0098:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[98].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0098:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[98].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0098:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[98].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0098:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[98].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0098:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[98].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0099:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[99].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0099:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[99].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0099:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[99].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0099:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[99].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0099:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[99].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0099:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[99].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0099:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[99].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0099:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[99].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0099:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[99].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0099:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[99].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0099:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[99].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0099:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[99].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0099:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[99].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0099:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[99].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0099:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[99].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0099:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[99].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0099:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[99].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0099:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[99].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0099:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[99].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0099:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[99].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0099:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[99].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0099:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[99].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0099:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[99].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0100:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[100].BeamPermitted
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0100:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[100].Info.Desc
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0100:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[100].Info.DevName
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0100:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[100].Info.InfoString
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0100:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[100].Info.InUse
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0100:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[100].Info.sPath
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0100:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[100].Info.TypeCode
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0100:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[100].OK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0100:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[100].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0100:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[100].Ovrd.Activate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0100:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[100].Ovrd.Active
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0100:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[100].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0100:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[100].Ovrd.Deactivate
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0100:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[100].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0100:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[100].Ovrd.Duration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0100:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[100].Ovrd.ElapsedTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0100:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[100].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0100:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[100].Ovrd.Expiration
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0100:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[100].Ovrd.RemainingTime
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:FF:0100:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[100].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0100:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[100].Ovrd.StartDT
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0100:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[100].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:FF:0100:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[100].Reset
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.xOK
      - | io: input


    * - PLC:RIX:MOTION:FFO:02:RegistrationFailure
      - bo
      - GVL.fbFastFaultOutput2.xFastFaultRegFail
      - | io: output


    * - PLC:RIX:MOTION:FFO:02:RegistrationFailure_RBV
      - bi
      - GVL.fbFastFaultOutput2.xFastFaultRegFail
      - | io: output


    * - PLC:RIX:MOTION:PhotonEnergy
      - ao
      - GVL.fPhotonEnergy_eV
      - | io: output


    * - PLC:RIX:MOTION:PhotonEnergy_RBV
      - ai
      - GVL.fPhotonEnergy_eV
      - | io: output


    * - ST3K2:TERM:bBusy_RBV
      - bi
      - TRUE if in the middle of a command
      - | field: ONAM FALSE
        | field: ZNAM TRUE
        | io: input


    * - ST3K2:TERM:bDone_RBV
      - bi
      - TRUE if command finished successfully
      - | field: ONAM FALSE
        | field: ZNAM TRUE
        | io: input


    * - ST3K2:TERM:bInsertEnable_RBV
      - bi
      - True if the actuator had permission to be retracted
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - ST3K2:TERM:bInsetDigitalOutput_RBV
      - bi
      - TRUE if Insert digital output is active
      - | field: ONAM FALSE
        | field: ZNAM TRUE
        | io: input


    * - ST3K2:TERM:bInterlockOK_RBV
      - bi
      - True if the actuator has permission to move in either direction
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - ST3K2:TERM:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - ST3K2:TERM:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - ST3K2:TERM:bRetractDigitalOutput_RBV
      - bi
      - TRUE if Retract digital output is active
      - | field: ONAM FALSE
        | field: ZNAM TRUE
        | io: input


    * - ST3K2:TERM:bRetractEnable_RBV
      - bi
      - True if the actuator had permission to be inserted
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - ST3K2:TERM:CMD:IN
      - bo
      - Used by EPICS and internally to request Insert motion
      - | io: output


    * - ST3K2:TERM:CMD:IN_RBV
      - bi
      - Used by EPICS and internally to request Insert motion
      - | io: output


    * - ST3K2:TERM:CMD:OUT
      - bo
      - Used by EPICS and internally to request retract motion
      - | io: output


    * - ST3K2:TERM:CMD:OUT_RBV
      - bi
      - Used by EPICS and internally to request retract motion
      - | io: output


    * - ST3K2:TERM:FF_Reset
      - bo
      - PRG_ST3K2_TERM.ST3K2.i_xReset
      - | io: output


    * - ST3K2:TERM:FF_Reset_RBV
      - bi
      - PRG_ST3K2_TERM.ST3K2.i_xReset
      - | io: output


    * - ST3K2:TERM:MPS_OK
      - bo
      - TRUE if MPS signal is OK
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - ST3K2:TERM:MPS_OK_RBV
      - bi
      - TRUE if MPS signal is OK
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - ST3K2:TERM:nPositionState_RBV
      - mbbi
      - Pneumatic actuator position
      - | field: ONST INSERTED
        | field: THST INVALID
        | field: TWST MOVING
        | field: ZRST RETRACTED
        | io: input
        | type: mbbi


    * - ST3K2:TERM:PLC:bError_RBV
      - bi
      - TRUE if we
      - | field: ONAM FALSE
        | field: ZNAM TRUE
        | io: input


    * - ST3K2:TERM:PLC:bInLimitSwitch_RBV
      - bi
      - TRUE if IN limit is reached
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - ST3K2:TERM:PLC:bOutLimitSwitch_RBV
      - bi
      - TRUE if OUT limit is reached
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - ST3K2:TERM:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input


    * - ST3K2:TERM:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input


    * - TM1K2:ATM:MMS:STATE:01:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - TM1K2:ATM:MMS:STATE:01:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - TM1K2:ATM:MMS:STATE:01:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - TM1K2:ATM:MMS:STATE:01:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - TM1K2:ATM:MMS:STATE:01:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - TM1K2:ATM:MMS:STATE:01:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - TM1K2:ATM:MMS:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - TM1K2:ATM:MMS:STATE:01:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM1K2:ATM:MMS:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM1K2:ATM:MMS:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - TM1K2:ATM:MMS:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - TM1K2:ATM:MMS:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - TM1K2:ATM:MMS:STATE:01:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM1K2:ATM:MMS:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - TM1K2:ATM:MMS:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - TM1K2:ATM:MMS:STATE:02:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - TM1K2:ATM:MMS:STATE:02:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - TM1K2:ATM:MMS:STATE:02:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - TM1K2:ATM:MMS:STATE:02:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - TM1K2:ATM:MMS:STATE:02:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - TM1K2:ATM:MMS:STATE:02:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - TM1K2:ATM:MMS:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - TM1K2:ATM:MMS:STATE:02:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM1K2:ATM:MMS:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM1K2:ATM:MMS:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - TM1K2:ATM:MMS:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - TM1K2:ATM:MMS:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - TM1K2:ATM:MMS:STATE:02:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM1K2:ATM:MMS:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - TM1K2:ATM:MMS:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - TM1K2:ATM:MMS:STATE:03:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - TM1K2:ATM:MMS:STATE:03:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - TM1K2:ATM:MMS:STATE:03:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - TM1K2:ATM:MMS:STATE:03:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - TM1K2:ATM:MMS:STATE:03:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - TM1K2:ATM:MMS:STATE:03:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - TM1K2:ATM:MMS:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - TM1K2:ATM:MMS:STATE:03:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM1K2:ATM:MMS:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM1K2:ATM:MMS:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - TM1K2:ATM:MMS:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - TM1K2:ATM:MMS:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - TM1K2:ATM:MMS:STATE:03:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM1K2:ATM:MMS:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - TM1K2:ATM:MMS:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - TM1K2:ATM:MMS:STATE:04:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - TM1K2:ATM:MMS:STATE:04:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - TM1K2:ATM:MMS:STATE:04:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - TM1K2:ATM:MMS:STATE:04:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - TM1K2:ATM:MMS:STATE:04:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - TM1K2:ATM:MMS:STATE:04:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - TM1K2:ATM:MMS:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - TM1K2:ATM:MMS:STATE:04:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM1K2:ATM:MMS:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM1K2:ATM:MMS:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - TM1K2:ATM:MMS:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - TM1K2:ATM:MMS:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - TM1K2:ATM:MMS:STATE:04:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM1K2:ATM:MMS:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - TM1K2:ATM:MMS:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - TM1K2:ATM:MMS:STATE:05:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - TM1K2:ATM:MMS:STATE:05:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - TM1K2:ATM:MMS:STATE:05:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - TM1K2:ATM:MMS:STATE:05:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - TM1K2:ATM:MMS:STATE:05:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - TM1K2:ATM:MMS:STATE:05:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - TM1K2:ATM:MMS:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - TM1K2:ATM:MMS:STATE:05:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM1K2:ATM:MMS:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM1K2:ATM:MMS:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - TM1K2:ATM:MMS:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - TM1K2:ATM:MMS:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - TM1K2:ATM:MMS:STATE:05:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM1K2:ATM:MMS:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - TM1K2:ATM:MMS:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - TM1K2:ATM:MMS:STATE:06:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - TM1K2:ATM:MMS:STATE:06:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - TM1K2:ATM:MMS:STATE:06:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - TM1K2:ATM:MMS:STATE:06:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - TM1K2:ATM:MMS:STATE:06:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - TM1K2:ATM:MMS:STATE:06:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - TM1K2:ATM:MMS:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - TM1K2:ATM:MMS:STATE:06:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM1K2:ATM:MMS:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM1K2:ATM:MMS:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - TM1K2:ATM:MMS:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - TM1K2:ATM:MMS:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - TM1K2:ATM:MMS:STATE:06:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM1K2:ATM:MMS:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - TM1K2:ATM:MMS:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - TM1K2:ATM:MMS:STATE:07:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - TM1K2:ATM:MMS:STATE:07:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - TM1K2:ATM:MMS:STATE:07:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - TM1K2:ATM:MMS:STATE:07:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - TM1K2:ATM:MMS:STATE:07:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - TM1K2:ATM:MMS:STATE:07:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - TM1K2:ATM:MMS:STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - TM1K2:ATM:MMS:STATE:07:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM1K2:ATM:MMS:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM1K2:ATM:MMS:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - TM1K2:ATM:MMS:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - TM1K2:ATM:MMS:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - TM1K2:ATM:MMS:STATE:07:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM1K2:ATM:MMS:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - TM1K2:ATM:MMS:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - TM1K2:ATM:MMS:STATE:08:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - TM1K2:ATM:MMS:STATE:08:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - TM1K2:ATM:MMS:STATE:08:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - TM1K2:ATM:MMS:STATE:08:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - TM1K2:ATM:MMS:STATE:08:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - TM1K2:ATM:MMS:STATE:08:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - TM1K2:ATM:MMS:STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - TM1K2:ATM:MMS:STATE:08:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM1K2:ATM:MMS:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM1K2:ATM:MMS:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - TM1K2:ATM:MMS:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - TM1K2:ATM:MMS:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - TM1K2:ATM:MMS:STATE:08:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM1K2:ATM:MMS:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - TM1K2:ATM:MMS:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - TM1K2:ATM:MMS:STATE:09:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - TM1K2:ATM:MMS:STATE:09:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - TM1K2:ATM:MMS:STATE:09:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - TM1K2:ATM:MMS:STATE:09:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - TM1K2:ATM:MMS:STATE:09:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - TM1K2:ATM:MMS:STATE:09:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - TM1K2:ATM:MMS:STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - TM1K2:ATM:MMS:STATE:09:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM1K2:ATM:MMS:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM1K2:ATM:MMS:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - TM1K2:ATM:MMS:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - TM1K2:ATM:MMS:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - TM1K2:ATM:MMS:STATE:09:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM1K2:ATM:MMS:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - TM1K2:ATM:MMS:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - TM1K2:ATM:MMS:STATE:BUSY_RBV
      - bi
      - PRG_TM1K2_ATM.fbTM1K2.fbStates.bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - TM1K2:ATM:MMS:STATE:DONE_RBV
      - bi
      - PRG_TM1K2_ATM.fbTM1K2.fbStates.bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - TM1K2:ATM:MMS:STATE:ERR_RBV
      - bi
      - PRG_TM1K2_ATM.fbTM1K2.fbStates.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - TM1K2:ATM:MMS:STATE:ERRID_RBV
      - longin
      - PRG_TM1K2_ATM.fbTM1K2.fbStates.nErrorId
      - | io: input


    * - TM1K2:ATM:MMS:STATE:ERRMSG_RBV
      - waveform
      - PRG_TM1K2_ATM.fbTM1K2.fbStates.sErrorMessage
      - | io: input


    * - TM1K2:ATM:MMS:STATE:GET_RBV
      - mbbi
      - PRG_TM1K2_ATM.fbTM1K2.fbStates.enumGet
      - | io: input


    * - TM1K2:ATM:MMS:STATE:PMPS:ARB:ENABLE
      - bo
      - PRG_TM1K2_ATM.fbTM1K2.fbStates.bArbiterEnabled
      - | io: output


    * - TM1K2:ATM:MMS:STATE:PMPS:ARB:ENABLE_RBV
      - bi
      - PRG_TM1K2_ATM.fbTM1K2.fbStates.bArbiterEnabled
      - | io: output


    * - TM1K2:ATM:MMS:STATE:PMPS:MAINT
      - bo
      - PRG_TM1K2_ATM.fbTM1K2.fbStates.fbStatePMPS.bMaintMode
      - | io: output


    * - TM1K2:ATM:MMS:STATE:PMPS:MAINT_RBV
      - bi
      - PRG_TM1K2_ATM.fbTM1K2.fbStates.fbStatePMPS.bMaintMode
      - | io: output


    * - TM1K2:ATM:MMS:STATE:RESET
      - bo
      - PRG_TM1K2_ATM.fbTM1K2.fbStates.bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - TM1K2:ATM:MMS:STATE:RESET_RBV
      - bi
      - PRG_TM1K2_ATM.fbTM1K2.fbStates.bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - TM1K2:ATM:MMS:STATE:SET
      - mbbo
      - PRG_TM1K2_ATM.fbTM1K2.fbStates.enumSet
      - | io: output


    * - TM1K2:ATM:MMS:STATE:SET_RBV
      - mbbi
      - PRG_TM1K2_ATM.fbTM1K2.fbStates.enumSet
      - | io: output


    * - TM1K2:ATM:MMS:X:PLC:bAllBackwardEnable_RBV
      - bi
      - Summary of axis permission to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM1K2:ATM:MMS:X:PLC:bAllEnable_RBV
      - bi
      - Summary of axis permission to have power
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM1K2:ATM:MMS:X:PLC:bAllForwardEnable_RBV
      - bi
      - Summary of axis permission to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM1K2:ATM:MMS:X:PLC:bBrakeRelease_RBV
      - bi
      - TRUE if brake released
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM1K2:ATM:MMS:X:PLC:bBusy_RBV
      - bi
      - TRUE if in the middle of a command
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM1K2:ATM:MMS:X:PLC:bDone_RBV
      - bi
      - TRUE if command finished successfully
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM1K2:ATM:MMS:X:PLC:bEnable
      - bo
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - TM1K2:ATM:MMS:X:PLC:bEnable_RBV
      - bi
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - TM1K2:ATM:MMS:X:PLC:bEnableDone_RBV
      - bi
      - TRUE if done enabling
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM1K2:ATM:MMS:X:PLC:bError_RBV
      - bi
      - TRUE if we
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM1K2:ATM:MMS:X:PLC:bExecute
      - bo
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - TM1K2:ATM:MMS:X:PLC:bExecute_RBV
      - bi
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - TM1K2:ATM:MMS:X:PLC:bGantryAxis_RBV
      - bi
      - TRUE if gantry EPS active
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM1K2:ATM:MMS:X:PLC:bGantryBackwardEnable_RBV
      - bi
      - TRUE if gantry ok to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM1K2:ATM:MMS:X:PLC:bGantryForwardEnable_RBV
      - bi
      - TRUE if gantry ok to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM1K2:ATM:MMS:X:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM1K2:ATM:MMS:X:PLC:bHome_RBV
      - bi
      - TRUE if at homing switch
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM1K2:ATM:MMS:X:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - TM1K2:ATM:MMS:X:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - TM1K2:ATM:MMS:X:PLC:bHomed_RBV
      - bi
      - TRUE if the motor has been homed
      - | io: input


    * - TM1K2:ATM:MMS:X:PLC:bLimitBackwardEnable_RBV
      - bi
      - FALSE if reverse limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM1K2:ATM:MMS:X:PLC:bLimitForwardEnable_RBV
      - bi
      - FALSE if forward limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM1K2:ATM:MMS:X:PLC:bMoveCmd
      - bo
      - Start a move
      - | io: output


    * - TM1K2:ATM:MMS:X:PLC:bMoveCmd_RBV
      - bi
      - Start a move
      - | io: output


    * - TM1K2:ATM:MMS:X:PLC:bPowerSelf_RBV
      - bi
      - FALSE if axis is in PMPS
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM1K2:ATM:MMS:X:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - TM1K2:ATM:MMS:X:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - TM1K2:ATM:MMS:X:PLC:bSafetyReady_RBV
      - bi
      - TRUE if safe to start a move
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM1K2:ATM:MMS:X:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - TM1K2:ATM:MMS:X:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - TM1K2:ATM:MMS:X:PLC:fAcceleration
      - ao
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - TM1K2:ATM:MMS:X:PLC:fAcceleration_RBV
      - ai
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - TM1K2:ATM:MMS:X:PLC:fDeceleration
      - ao
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - TM1K2:ATM:MMS:X:PLC:fDeceleration_RBV
      - ai
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - TM1K2:ATM:MMS:X:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - TM1K2:ATM:MMS:X:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - TM1K2:ATM:MMS:X:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - TM1K2:ATM:MMS:X:PLC:fPosition
      - ao
      - Used internally and by the IOC as the set position
      - | io: output


    * - TM1K2:ATM:MMS:X:PLC:fPosition_RBV
      - ai
      - Used internally and by the IOC as the set position
      - | io: output


    * - TM1K2:ATM:MMS:X:PLC:fVelocity
      - ao
      - Used internally and by the IOC to set velocity
      - | io: output


    * - TM1K2:ATM:MMS:X:PLC:fVelocity_RBV
      - ai
      - Used internally and by the IOC to set velocity
      - | io: output


    * - TM1K2:ATM:MMS:X:PLC:nBrakeMode_RBV
      - mbbi
      - Describes when the brake will be released
      - | io: input


    * - TM1K2:ATM:MMS:X:PLC:nCmdData
      - longout
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - TM1K2:ATM:MMS:X:PLC:nCmdData_RBV
      - longin
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - TM1K2:ATM:MMS:X:PLC:nCommand
      - longout
      - Used internally and by the IOC to pick move type
      - | io: output


    * - TM1K2:ATM:MMS:X:PLC:nCommand_RBV
      - longin
      - Used internally and by the IOC to pick move type
      - | io: output


    * - TM1K2:ATM:MMS:X:PLC:nEnableMode_RBV
      - mbbi
      - Describes when the axis will automatically get power
      - | io: input


    * - TM1K2:ATM:MMS:X:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - TM1K2:ATM:MMS:X:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input


    * - TM1K2:ATM:MMS:X:PLC:nHomingMode_RBV
      - mbbi
      - Describes our homing strategy
      - | io: input


    * - TM1K2:ATM:MMS:X:PLC:nMotionAxisID_RBV
      - longin
      - Unique ID assigned to each axis in the NC
      - | io: input


    * - TM1K2:ATM:MMS:X:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input


    * - TM1K2:ATM:MMS:X:PLC:sName_RBV
      - waveform
      - PLC program name
      - | io: input


    * - TM1K2:ATM:MMS:Y:PLC:bAllBackwardEnable_RBV
      - bi
      - Summary of axis permission to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM1K2:ATM:MMS:Y:PLC:bAllEnable_RBV
      - bi
      - Summary of axis permission to have power
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM1K2:ATM:MMS:Y:PLC:bAllForwardEnable_RBV
      - bi
      - Summary of axis permission to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM1K2:ATM:MMS:Y:PLC:bBrakeRelease_RBV
      - bi
      - TRUE if brake released
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM1K2:ATM:MMS:Y:PLC:bBusy_RBV
      - bi
      - TRUE if in the middle of a command
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM1K2:ATM:MMS:Y:PLC:bDone_RBV
      - bi
      - TRUE if command finished successfully
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM1K2:ATM:MMS:Y:PLC:bEnable
      - bo
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - TM1K2:ATM:MMS:Y:PLC:bEnable_RBV
      - bi
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - TM1K2:ATM:MMS:Y:PLC:bEnableDone_RBV
      - bi
      - TRUE if done enabling
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM1K2:ATM:MMS:Y:PLC:bError_RBV
      - bi
      - TRUE if we
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM1K2:ATM:MMS:Y:PLC:bExecute
      - bo
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - TM1K2:ATM:MMS:Y:PLC:bExecute_RBV
      - bi
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - TM1K2:ATM:MMS:Y:PLC:bGantryAxis_RBV
      - bi
      - TRUE if gantry EPS active
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM1K2:ATM:MMS:Y:PLC:bGantryBackwardEnable_RBV
      - bi
      - TRUE if gantry ok to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM1K2:ATM:MMS:Y:PLC:bGantryForwardEnable_RBV
      - bi
      - TRUE if gantry ok to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM1K2:ATM:MMS:Y:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM1K2:ATM:MMS:Y:PLC:bHome_RBV
      - bi
      - TRUE if at homing switch
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM1K2:ATM:MMS:Y:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - TM1K2:ATM:MMS:Y:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - TM1K2:ATM:MMS:Y:PLC:bHomed_RBV
      - bi
      - TRUE if the motor has been homed
      - | io: input


    * - TM1K2:ATM:MMS:Y:PLC:bLimitBackwardEnable_RBV
      - bi
      - FALSE if reverse limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM1K2:ATM:MMS:Y:PLC:bLimitForwardEnable_RBV
      - bi
      - FALSE if forward limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM1K2:ATM:MMS:Y:PLC:bMoveCmd
      - bo
      - Start a move
      - | io: output


    * - TM1K2:ATM:MMS:Y:PLC:bMoveCmd_RBV
      - bi
      - Start a move
      - | io: output


    * - TM1K2:ATM:MMS:Y:PLC:bPowerSelf_RBV
      - bi
      - FALSE if axis is in PMPS
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM1K2:ATM:MMS:Y:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - TM1K2:ATM:MMS:Y:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - TM1K2:ATM:MMS:Y:PLC:bSafetyReady_RBV
      - bi
      - TRUE if safe to start a move
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM1K2:ATM:MMS:Y:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - TM1K2:ATM:MMS:Y:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - TM1K2:ATM:MMS:Y:PLC:fAcceleration
      - ao
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - TM1K2:ATM:MMS:Y:PLC:fAcceleration_RBV
      - ai
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - TM1K2:ATM:MMS:Y:PLC:fDeceleration
      - ao
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - TM1K2:ATM:MMS:Y:PLC:fDeceleration_RBV
      - ai
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - TM1K2:ATM:MMS:Y:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - TM1K2:ATM:MMS:Y:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - TM1K2:ATM:MMS:Y:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - TM1K2:ATM:MMS:Y:PLC:fPosition
      - ao
      - Used internally and by the IOC as the set position
      - | io: output


    * - TM1K2:ATM:MMS:Y:PLC:fPosition_RBV
      - ai
      - Used internally and by the IOC as the set position
      - | io: output


    * - TM1K2:ATM:MMS:Y:PLC:fVelocity
      - ao
      - Used internally and by the IOC to set velocity
      - | io: output


    * - TM1K2:ATM:MMS:Y:PLC:fVelocity_RBV
      - ai
      - Used internally and by the IOC to set velocity
      - | io: output


    * - TM1K2:ATM:MMS:Y:PLC:nBrakeMode_RBV
      - mbbi
      - Describes when the brake will be released
      - | io: input


    * - TM1K2:ATM:MMS:Y:PLC:nCmdData
      - longout
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - TM1K2:ATM:MMS:Y:PLC:nCmdData_RBV
      - longin
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - TM1K2:ATM:MMS:Y:PLC:nCommand
      - longout
      - Used internally and by the IOC to pick move type
      - | io: output


    * - TM1K2:ATM:MMS:Y:PLC:nCommand_RBV
      - longin
      - Used internally and by the IOC to pick move type
      - | io: output


    * - TM1K2:ATM:MMS:Y:PLC:nEnableMode_RBV
      - mbbi
      - Describes when the axis will automatically get power
      - | io: input


    * - TM1K2:ATM:MMS:Y:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - TM1K2:ATM:MMS:Y:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input


    * - TM1K2:ATM:MMS:Y:PLC:nHomingMode_RBV
      - mbbi
      - Describes our homing strategy
      - | io: input


    * - TM1K2:ATM:MMS:Y:PLC:nMotionAxisID_RBV
      - longin
      - Unique ID assigned to each axis in the NC
      - | io: input


    * - TM1K2:ATM:MMS:Y:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input


    * - TM1K2:ATM:MMS:Y:PLC:sName_RBV
      - waveform
      - PLC program name
      - | io: input


    * - TM1K2:ATM:STC:01:CONN_RBV
      - bi
      - PRG_TM1K2_ATM.fbTM1K2.fbThermoCouple1.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - TM1K2:ATM:STC:01:ERR_RBV
      - bi
      - PRG_TM1K2_ATM.fbTM1K2.fbThermoCouple1.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - TM1K2:ATM:STC:01:TEMP_RBV
      - ai
      - PRG_TM1K2_ATM.fbTM1K2.fbThermoCouple1.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - TM2K2:ATM:MMS:STATE:01:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - TM2K2:ATM:MMS:STATE:01:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - TM2K2:ATM:MMS:STATE:01:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - TM2K2:ATM:MMS:STATE:01:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - TM2K2:ATM:MMS:STATE:01:DELTA
      - ao
      - Max deviation from position at this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - TM2K2:ATM:MMS:STATE:01:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - TM2K2:ATM:MMS:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: input


    * - TM2K2:ATM:MMS:STATE:01:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM2K2:ATM:MMS:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM2K2:ATM:MMS:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: input


    * - TM2K2:ATM:MMS:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - TM2K2:ATM:MMS:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - TM2K2:ATM:MMS:STATE:01:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM2K2:ATM:MMS:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - TM2K2:ATM:MMS:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - TM2K2:ATM:MMS:STATE:02:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - TM2K2:ATM:MMS:STATE:02:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - TM2K2:ATM:MMS:STATE:02:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - TM2K2:ATM:MMS:STATE:02:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - TM2K2:ATM:MMS:STATE:02:DELTA
      - ao
      - Max deviation from position at this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - TM2K2:ATM:MMS:STATE:02:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - TM2K2:ATM:MMS:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: input


    * - TM2K2:ATM:MMS:STATE:02:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM2K2:ATM:MMS:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM2K2:ATM:MMS:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: input


    * - TM2K2:ATM:MMS:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - TM2K2:ATM:MMS:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - TM2K2:ATM:MMS:STATE:02:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM2K2:ATM:MMS:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - TM2K2:ATM:MMS:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - TM2K2:ATM:MMS:STATE:03:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - TM2K2:ATM:MMS:STATE:03:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - TM2K2:ATM:MMS:STATE:03:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - TM2K2:ATM:MMS:STATE:03:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - TM2K2:ATM:MMS:STATE:03:DELTA
      - ao
      - Max deviation from position at this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - TM2K2:ATM:MMS:STATE:03:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - TM2K2:ATM:MMS:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: input


    * - TM2K2:ATM:MMS:STATE:03:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM2K2:ATM:MMS:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM2K2:ATM:MMS:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: input


    * - TM2K2:ATM:MMS:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - TM2K2:ATM:MMS:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - TM2K2:ATM:MMS:STATE:03:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM2K2:ATM:MMS:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - TM2K2:ATM:MMS:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - TM2K2:ATM:MMS:STATE:04:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - TM2K2:ATM:MMS:STATE:04:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - TM2K2:ATM:MMS:STATE:04:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - TM2K2:ATM:MMS:STATE:04:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - TM2K2:ATM:MMS:STATE:04:DELTA
      - ao
      - Max deviation from position at this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - TM2K2:ATM:MMS:STATE:04:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - TM2K2:ATM:MMS:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: input


    * - TM2K2:ATM:MMS:STATE:04:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM2K2:ATM:MMS:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM2K2:ATM:MMS:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: input


    * - TM2K2:ATM:MMS:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - TM2K2:ATM:MMS:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - TM2K2:ATM:MMS:STATE:04:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM2K2:ATM:MMS:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - TM2K2:ATM:MMS:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - TM2K2:ATM:MMS:STATE:05:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - TM2K2:ATM:MMS:STATE:05:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - TM2K2:ATM:MMS:STATE:05:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - TM2K2:ATM:MMS:STATE:05:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - TM2K2:ATM:MMS:STATE:05:DELTA
      - ao
      - Max deviation from position at this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - TM2K2:ATM:MMS:STATE:05:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - TM2K2:ATM:MMS:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: input


    * - TM2K2:ATM:MMS:STATE:05:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM2K2:ATM:MMS:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM2K2:ATM:MMS:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: input


    * - TM2K2:ATM:MMS:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - TM2K2:ATM:MMS:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - TM2K2:ATM:MMS:STATE:05:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM2K2:ATM:MMS:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - TM2K2:ATM:MMS:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - TM2K2:ATM:MMS:STATE:06:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - TM2K2:ATM:MMS:STATE:06:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - TM2K2:ATM:MMS:STATE:06:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - TM2K2:ATM:MMS:STATE:06:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - TM2K2:ATM:MMS:STATE:06:DELTA
      - ao
      - Max deviation from position at this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - TM2K2:ATM:MMS:STATE:06:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - TM2K2:ATM:MMS:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: input


    * - TM2K2:ATM:MMS:STATE:06:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM2K2:ATM:MMS:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM2K2:ATM:MMS:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: input


    * - TM2K2:ATM:MMS:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - TM2K2:ATM:MMS:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - TM2K2:ATM:MMS:STATE:06:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM2K2:ATM:MMS:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - TM2K2:ATM:MMS:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - TM2K2:ATM:MMS:STATE:07:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - TM2K2:ATM:MMS:STATE:07:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - TM2K2:ATM:MMS:STATE:07:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - TM2K2:ATM:MMS:STATE:07:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - TM2K2:ATM:MMS:STATE:07:DELTA
      - ao
      - Max deviation from position at this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - TM2K2:ATM:MMS:STATE:07:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - TM2K2:ATM:MMS:STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: input


    * - TM2K2:ATM:MMS:STATE:07:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM2K2:ATM:MMS:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM2K2:ATM:MMS:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: input


    * - TM2K2:ATM:MMS:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - TM2K2:ATM:MMS:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - TM2K2:ATM:MMS:STATE:07:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM2K2:ATM:MMS:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - TM2K2:ATM:MMS:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | array: 1..7
        | expand: %.2d
        | io: output


    * - TM2K2:ATM:MMS:STATE:BUSY_RBV
      - bi
      - PRG_TM2K2_ATM.fbTM2K2.fbStates.bBusy
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - TM2K2:ATM:MMS:STATE:DONE_RBV
      - bi
      - PRG_TM2K2_ATM.fbTM2K2.fbStates.bDone
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - TM2K2:ATM:MMS:STATE:ERR_RBV
      - bi
      - PRG_TM2K2_ATM.fbTM2K2.fbStates.bError
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - TM2K2:ATM:MMS:STATE:ERRID_RBV
      - longin
      - PRG_TM2K2_ATM.fbTM2K2.fbStates.nErrorId
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | io: input


    * - TM2K2:ATM:MMS:STATE:ERRMSG_RBV
      - waveform
      - PRG_TM2K2_ATM.fbTM2K2.fbStates.sErrorMessage
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | io: input


    * - TM2K2:ATM:MMS:STATE:GET_RBV
      - mbbi
      - PRG_TM2K2_ATM.fbTM2K2.fbStates.enumGet
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | io: input


    * - TM2K2:ATM:MMS:STATE:PMPS:ARB:ENABLE
      - bo
      - PRG_TM2K2_ATM.fbTM2K2.fbStates.bArbiterEnabled
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | io: output


    * - TM2K2:ATM:MMS:STATE:PMPS:ARB:ENABLE_RBV
      - bi
      - PRG_TM2K2_ATM.fbTM2K2.fbStates.bArbiterEnabled
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | io: output


    * - TM2K2:ATM:MMS:STATE:PMPS:MAINT
      - bo
      - PRG_TM2K2_ATM.fbTM2K2.fbStates.fbStatePMPS.bMaintMode
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | io: output


    * - TM2K2:ATM:MMS:STATE:PMPS:MAINT_RBV
      - bi
      - PRG_TM2K2_ATM.fbTM2K2.fbStates.fbStatePMPS.bMaintMode
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | io: output


    * - TM2K2:ATM:MMS:STATE:RESET
      - bo
      - PRG_TM2K2_ATM.fbTM2K2.fbStates.bReset
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - TM2K2:ATM:MMS:STATE:RESET_RBV
      - bi
      - PRG_TM2K2_ATM.fbTM2K2.fbStates.bReset
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - TM2K2:ATM:MMS:STATE:SET
      - mbbo
      - PRG_TM2K2_ATM.fbTM2K2.fbStates.enumSet
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | io: output


    * - TM2K2:ATM:MMS:STATE:SET_RBV
      - mbbi
      - PRG_TM2K2_ATM.fbTM2K2.fbStates.enumSet
      - | _subitem_: {'arrStates': {'_pragma_': [('array', '1..7')]}}
        | io: output


    * - TM2K2:ATM:MMS:X:PLC:bAllBackwardEnable_RBV
      - bi
      - Summary of axis permission to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM2K2:ATM:MMS:X:PLC:bAllEnable_RBV
      - bi
      - Summary of axis permission to have power
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM2K2:ATM:MMS:X:PLC:bAllForwardEnable_RBV
      - bi
      - Summary of axis permission to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM2K2:ATM:MMS:X:PLC:bBrakeRelease_RBV
      - bi
      - TRUE if brake released
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM2K2:ATM:MMS:X:PLC:bBusy_RBV
      - bi
      - TRUE if in the middle of a command
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM2K2:ATM:MMS:X:PLC:bDone_RBV
      - bi
      - TRUE if command finished successfully
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM2K2:ATM:MMS:X:PLC:bEnable
      - bo
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - TM2K2:ATM:MMS:X:PLC:bEnable_RBV
      - bi
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - TM2K2:ATM:MMS:X:PLC:bEnableDone_RBV
      - bi
      - TRUE if done enabling
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM2K2:ATM:MMS:X:PLC:bError_RBV
      - bi
      - TRUE if we
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM2K2:ATM:MMS:X:PLC:bExecute
      - bo
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - TM2K2:ATM:MMS:X:PLC:bExecute_RBV
      - bi
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - TM2K2:ATM:MMS:X:PLC:bGantryAxis_RBV
      - bi
      - TRUE if gantry EPS active
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM2K2:ATM:MMS:X:PLC:bGantryBackwardEnable_RBV
      - bi
      - TRUE if gantry ok to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM2K2:ATM:MMS:X:PLC:bGantryForwardEnable_RBV
      - bi
      - TRUE if gantry ok to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM2K2:ATM:MMS:X:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM2K2:ATM:MMS:X:PLC:bHome_RBV
      - bi
      - TRUE if at homing switch
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM2K2:ATM:MMS:X:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - TM2K2:ATM:MMS:X:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - TM2K2:ATM:MMS:X:PLC:bHomed_RBV
      - bi
      - TRUE if the motor has been homed
      - | io: input


    * - TM2K2:ATM:MMS:X:PLC:bLimitBackwardEnable_RBV
      - bi
      - FALSE if reverse limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM2K2:ATM:MMS:X:PLC:bLimitForwardEnable_RBV
      - bi
      - FALSE if forward limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM2K2:ATM:MMS:X:PLC:bMoveCmd
      - bo
      - Start a move
      - | io: output


    * - TM2K2:ATM:MMS:X:PLC:bMoveCmd_RBV
      - bi
      - Start a move
      - | io: output


    * - TM2K2:ATM:MMS:X:PLC:bPowerSelf_RBV
      - bi
      - FALSE if axis is in PMPS
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM2K2:ATM:MMS:X:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - TM2K2:ATM:MMS:X:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - TM2K2:ATM:MMS:X:PLC:bSafetyReady_RBV
      - bi
      - TRUE if safe to start a move
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM2K2:ATM:MMS:X:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - TM2K2:ATM:MMS:X:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - TM2K2:ATM:MMS:X:PLC:fAcceleration
      - ao
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - TM2K2:ATM:MMS:X:PLC:fAcceleration_RBV
      - ai
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - TM2K2:ATM:MMS:X:PLC:fDeceleration
      - ao
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - TM2K2:ATM:MMS:X:PLC:fDeceleration_RBV
      - ai
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - TM2K2:ATM:MMS:X:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - TM2K2:ATM:MMS:X:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - TM2K2:ATM:MMS:X:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - TM2K2:ATM:MMS:X:PLC:fPosition
      - ao
      - Used internally and by the IOC as the set position
      - | io: output


    * - TM2K2:ATM:MMS:X:PLC:fPosition_RBV
      - ai
      - Used internally and by the IOC as the set position
      - | io: output


    * - TM2K2:ATM:MMS:X:PLC:fVelocity
      - ao
      - Used internally and by the IOC to set velocity
      - | io: output


    * - TM2K2:ATM:MMS:X:PLC:fVelocity_RBV
      - ai
      - Used internally and by the IOC to set velocity
      - | io: output


    * - TM2K2:ATM:MMS:X:PLC:nBrakeMode_RBV
      - mbbi
      - Describes when the brake will be released
      - | io: input


    * - TM2K2:ATM:MMS:X:PLC:nCmdData
      - longout
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - TM2K2:ATM:MMS:X:PLC:nCmdData_RBV
      - longin
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - TM2K2:ATM:MMS:X:PLC:nCommand
      - longout
      - Used internally and by the IOC to pick move type
      - | io: output


    * - TM2K2:ATM:MMS:X:PLC:nCommand_RBV
      - longin
      - Used internally and by the IOC to pick move type
      - | io: output


    * - TM2K2:ATM:MMS:X:PLC:nEnableMode_RBV
      - mbbi
      - Describes when the axis will automatically get power
      - | io: input


    * - TM2K2:ATM:MMS:X:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - TM2K2:ATM:MMS:X:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input


    * - TM2K2:ATM:MMS:X:PLC:nHomingMode_RBV
      - mbbi
      - Describes our homing strategy
      - | io: input


    * - TM2K2:ATM:MMS:X:PLC:nMotionAxisID_RBV
      - longin
      - Unique ID assigned to each axis in the NC
      - | io: input


    * - TM2K2:ATM:MMS:X:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input


    * - TM2K2:ATM:MMS:X:PLC:sName_RBV
      - waveform
      - PLC program name
      - | io: input


    * - TM2K2:ATM:MMS:Y:PLC:bAllBackwardEnable_RBV
      - bi
      - Summary of axis permission to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM2K2:ATM:MMS:Y:PLC:bAllEnable_RBV
      - bi
      - Summary of axis permission to have power
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM2K2:ATM:MMS:Y:PLC:bAllForwardEnable_RBV
      - bi
      - Summary of axis permission to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM2K2:ATM:MMS:Y:PLC:bBrakeRelease_RBV
      - bi
      - TRUE if brake released
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM2K2:ATM:MMS:Y:PLC:bBusy_RBV
      - bi
      - TRUE if in the middle of a command
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM2K2:ATM:MMS:Y:PLC:bDone_RBV
      - bi
      - TRUE if command finished successfully
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM2K2:ATM:MMS:Y:PLC:bEnable
      - bo
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - TM2K2:ATM:MMS:Y:PLC:bEnable_RBV
      - bi
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - TM2K2:ATM:MMS:Y:PLC:bEnableDone_RBV
      - bi
      - TRUE if done enabling
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM2K2:ATM:MMS:Y:PLC:bError_RBV
      - bi
      - TRUE if we
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM2K2:ATM:MMS:Y:PLC:bExecute
      - bo
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - TM2K2:ATM:MMS:Y:PLC:bExecute_RBV
      - bi
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - TM2K2:ATM:MMS:Y:PLC:bGantryAxis_RBV
      - bi
      - TRUE if gantry EPS active
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM2K2:ATM:MMS:Y:PLC:bGantryBackwardEnable_RBV
      - bi
      - TRUE if gantry ok to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM2K2:ATM:MMS:Y:PLC:bGantryForwardEnable_RBV
      - bi
      - TRUE if gantry ok to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM2K2:ATM:MMS:Y:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM2K2:ATM:MMS:Y:PLC:bHome_RBV
      - bi
      - TRUE if at homing switch
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM2K2:ATM:MMS:Y:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - TM2K2:ATM:MMS:Y:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - TM2K2:ATM:MMS:Y:PLC:bHomed_RBV
      - bi
      - TRUE if the motor has been homed
      - | io: input


    * - TM2K2:ATM:MMS:Y:PLC:bLimitBackwardEnable_RBV
      - bi
      - FALSE if reverse limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM2K2:ATM:MMS:Y:PLC:bLimitForwardEnable_RBV
      - bi
      - FALSE if forward limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM2K2:ATM:MMS:Y:PLC:bMoveCmd
      - bo
      - Start a move
      - | io: output


    * - TM2K2:ATM:MMS:Y:PLC:bMoveCmd_RBV
      - bi
      - Start a move
      - | io: output


    * - TM2K2:ATM:MMS:Y:PLC:bPowerSelf_RBV
      - bi
      - FALSE if axis is in PMPS
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM2K2:ATM:MMS:Y:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - TM2K2:ATM:MMS:Y:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - TM2K2:ATM:MMS:Y:PLC:bSafetyReady_RBV
      - bi
      - TRUE if safe to start a move
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - TM2K2:ATM:MMS:Y:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - TM2K2:ATM:MMS:Y:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - TM2K2:ATM:MMS:Y:PLC:fAcceleration
      - ao
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - TM2K2:ATM:MMS:Y:PLC:fAcceleration_RBV
      - ai
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - TM2K2:ATM:MMS:Y:PLC:fDeceleration
      - ao
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - TM2K2:ATM:MMS:Y:PLC:fDeceleration_RBV
      - ai
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - TM2K2:ATM:MMS:Y:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - TM2K2:ATM:MMS:Y:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - TM2K2:ATM:MMS:Y:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - TM2K2:ATM:MMS:Y:PLC:fPosition
      - ao
      - Used internally and by the IOC as the set position
      - | io: output


    * - TM2K2:ATM:MMS:Y:PLC:fPosition_RBV
      - ai
      - Used internally and by the IOC as the set position
      - | io: output


    * - TM2K2:ATM:MMS:Y:PLC:fVelocity
      - ao
      - Used internally and by the IOC to set velocity
      - | io: output


    * - TM2K2:ATM:MMS:Y:PLC:fVelocity_RBV
      - ai
      - Used internally and by the IOC to set velocity
      - | io: output


    * - TM2K2:ATM:MMS:Y:PLC:nBrakeMode_RBV
      - mbbi
      - Describes when the brake will be released
      - | io: input


    * - TM2K2:ATM:MMS:Y:PLC:nCmdData
      - longout
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - TM2K2:ATM:MMS:Y:PLC:nCmdData_RBV
      - longin
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - TM2K2:ATM:MMS:Y:PLC:nCommand
      - longout
      - Used internally and by the IOC to pick move type
      - | io: output


    * - TM2K2:ATM:MMS:Y:PLC:nCommand_RBV
      - longin
      - Used internally and by the IOC to pick move type
      - | io: output


    * - TM2K2:ATM:MMS:Y:PLC:nEnableMode_RBV
      - mbbi
      - Describes when the axis will automatically get power
      - | io: input


    * - TM2K2:ATM:MMS:Y:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - TM2K2:ATM:MMS:Y:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input


    * - TM2K2:ATM:MMS:Y:PLC:nHomingMode_RBV
      - mbbi
      - Describes our homing strategy
      - | io: input


    * - TM2K2:ATM:MMS:Y:PLC:nMotionAxisID_RBV
      - longin
      - Unique ID assigned to each axis in the NC
      - | io: input


    * - TM2K2:ATM:MMS:Y:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input


    * - TM2K2:ATM:MMS:Y:PLC:sName_RBV
      - waveform
      - PLC program name
      - | io: input


    * - TM2K2:ATM:STC:01:CONN_RBV
      - bi
      - PRG_TM2K2_ATM.fbTM2K2.fbThermoCouple1.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - TM2K2:ATM:STC:01:ERR_RBV
      - bi
      - PRG_TM2K2_ATM.fbTM2K2.fbThermoCouple1.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - TM2K2:ATM:STC:01:TEMP_RBV
      - ai
      - PRG_TM2K2_ATM.fbTM2K2.fbThermoCouple1.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input



